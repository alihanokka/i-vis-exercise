!function(n){var l={};function e(t){if(l[t])return l[t].exports;var u=l[t]={i:t,l:!1,exports:{}};return n[t].call(u.exports,u,u.exports,e),u.l=!0,u.exports}e.m=n,e.c=l,e.d=function(n,l,t){e.o(n,l)||Object.defineProperty(n,l,{enumerable:!0,get:t})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,l){if(1&l&&(n=e(n)),8&l)return n;if(4&l&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&l&&"string"!=typeof n)for(var u in n)e.d(t,u,function(l){return n[l]}.bind(null,u));return t},e.n=function(n){var l=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(l,"a",l),l},e.o=function(n,l){return Object.prototype.hasOwnProperty.call(n,l)},e.p="",e(e.s=122)}([function(n,l,e){"use strict";l.__esModule=!0,l.default=function(n,l){if(!(n instanceof l))throw new TypeError("Cannot call a class as a function")}},function(n,l,e){"use strict";l.__esModule=!0;var t,u=e(44),r=(t=u)&&t.__esModule?t:{default:t};l.default=function(){function n(n,l){for(var e=0;e<l.length;e++){var t=l[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),(0,r.default)(n,t.key,t)}}return function(l,e,t){return e&&n(l.prototype,e),t&&n(l,t),l}}()},function(n,l){var e=n.exports={version:"2.6.5"};"number"==typeof __e&&(__e=e)},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.PROTOCOL_ERROR=l.SESSION_EXPIRED=l.SERVICE_UNAVAILABLE=l.Neo4jError=l.newError=void 0;var t=o(e(4)),u=o(e(0)),r=o(e(5)),i=o(e(6));function o(n){return n&&n.__esModule?n:{default:n}}var a=function(n){function l(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"N/A";(0,u.default)(this,l);var i=(0,r.default)(this,(l.__proto__||(0,t.default)(l)).call(this,n));return i.message=n,i.code=e,i.name="Neo4jError",i}return(0,i.default)(l,n),l}(Error);l.newError=function(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"N/A";return new a(n,l)},l.Neo4jError=a,l.SERVICE_UNAVAILABLE="ServiceUnavailable",l.SESSION_EXPIRED="SessionExpired",l.PROTOCOL_ERROR="ProtocolError"},function(n,l,e){n.exports={default:e(136),__esModule:!0}},function(n,l,e){"use strict";l.__esModule=!0;var t,u=e(34),r=(t=u)&&t.__esModule?t:{default:t};l.default=function(n,l){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!l||"object"!==(void 0===l?"undefined":(0,r.default)(l))&&"function"!=typeof l?n:l}},function(n,l,e){"use strict";l.__esModule=!0;var t=i(e(153)),u=i(e(92)),r=i(e(34));function i(n){return n&&n.__esModule?n:{default:n}}l.default=function(n,l){if("function"!=typeof l&&null!==l)throw new TypeError("Super expression must either be null or a function, not "+(void 0===l?"undefined":(0,r.default)(l)));n.prototype=(0,u.default)(l&&l.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),l&&(t.default?(0,t.default)(n,l):n.__proto__=l)}},function(n,l,e){var t=e(8),u=e(2),r=e(17),i=e(18),o=e(23),a=function(n,l,e){var s,c,h,d=n&a.F,f=n&a.G,p=n&a.S,g=n&a.P,v=n&a.B,y=n&a.W,m=f?u:u[l]||(u[l]={}),b=m.prototype,w=f?t:p?t[l]:(t[l]||{}).prototype;for(s in f&&(e=l),e)(c=!d&&w&&void 0!==w[s])&&o(m,s)||(h=c?w[s]:e[s],m[s]=f&&"function"!=typeof w[s]?e[s]:v&&c?r(h,t):y&&w[s]==h?function(n){var l=function(l,e,t){if(this instanceof n){switch(arguments.length){case 0:return new n;case 1:return new n(l);case 2:return new n(l,e)}return new n(l,e,t)}return n.apply(this,arguments)};return l.prototype=n.prototype,l}(h):g&&"function"==typeof h?r(Function.call,h):h,g&&((m.virtual||(m.virtual={}))[s]=h,n&a.R&&b&&!b[s]&&i(b,s,h)))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,n.exports=a},function(n,l){var e=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},function(n,l,e){var t=e(60)("wks"),u=e(45),r=e(8).Symbol,i="function"==typeof r;(n.exports=function(n){return t[n]||(t[n]=i&&r[n]||(i?r:u)("Symbol."+n))}).store=t},function(n,l){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.ENCRYPTION_OFF=l.ENCRYPTION_ON=l.validateStatementAndParameters=l.assertValidDate=l.assertNumberOrInteger=l.assertNumber=l.assertString=l.assertObject=l.isString=l.isObject=l.isEmptyObjectOrNull=void 0;var t=o(e(178)),u=o(e(20)),r=o(e(34)),i=e(13);function o(n){return n&&n.__esModule?n:{default:n}}function a(n){return"object"===(void 0===n?"undefined":(0,r.default)(n))&&!Array.isArray(n)&&null!==n}function s(n,l){if(!c(n))throw new TypeError(l+" expected to be string but was: "+(0,u.default)(n));return n}function c(n){return"[object String]"===Object.prototype.toString.call(n)}l.isEmptyObjectOrNull=function(n){if(null===n)return!0;if(!a(n))return!1;for(var l in n)if(n.hasOwnProperty(l))return!1;return!0},l.isObject=a,l.isString=c,l.assertObject=function(n,l){if(!a(n))throw new TypeError(l+" expected to be an object but was: "+(0,u.default)(n));return n},l.assertString=s,l.assertNumber=function(n,l){if("number"!=typeof n)throw new TypeError(l+" expected to be a number but was: "+(0,u.default)(n));return n},l.assertNumberOrInteger=function(n,l){if("number"!=typeof n&&!(0,i.isInt)(n))throw new TypeError(l+" expected to be either a number or an Integer object but was: "+(0,u.default)(n));return n},l.assertValidDate=function(n,l){if("[object Date]"!==Object.prototype.toString.call(n))throw new TypeError(l+" expected to be a standard JavaScript Date but was: "+(0,u.default)(n));if((0,t.default)(n.getTime()))throw new TypeError(l+" expected to be valid JavaScript Date but its time was NaN: "+(0,u.default)(n));return n},l.validateStatementAndParameters=function(n,l){var e=n,t=l||{};return"object"===(void 0===n?"undefined":(0,r.default)(n))&&n.text&&(e=n.text,t=n.parameters||{}),function(n){if(s(n,"Cypher statement"),0===n.trim().length)throw new TypeError("Cypher statement is expected to be a non-empty string.")}(e),function(n){if(!a(n)){var l=n.constructor?" "+n.constructor.name:"";throw new TypeError("Query parameters are expected to either be undefined/null or an object, given:"+l+" "+n)}}(t),{query:e,params:t}},l.ENCRYPTION_ON="ENCRYPTION_ON",l.ENCRYPTION_OFF="ENCRYPTION_OFF"},function(n,l,e){n.exports={default:e(162),__esModule:!0}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.toString=l.toNumber=l.inSafeRange=l.isInt=l.int=void 0;var t=i(e(0)),u=i(e(1)),r=e(3);function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(l,e){(0,t.default)(this,n),this.low=0|l,this.high=0|e}return(0,u.default)(n,[{key:"inSafeRange",value:function(){return this.greaterThanOrEqual(n.MIN_SAFE_VALUE)&&this.lessThanOrEqual(n.MAX_SAFE_VALUE)}},{key:"toInt",value:function(){return this.low}},{key:"toNumber",value:function(){return this.high*s+(this.low>>>0)}},{key:"toNumberOrInfinity",value:function(){return this.lessThan(n.MIN_SAFE_VALUE)?Number.NEGATIVE_INFINITY:this.greaterThan(n.MAX_SAFE_VALUE)?Number.POSITIVE_INFINITY:this.toNumber()}},{key:"toString",value:function(l){if((l=l||10)<2||36<l)throw RangeError("radix out of range: "+l);if(this.isZero())return"0";var e;if(this.isNegative()){if(this.equals(n.MIN_VALUE)){var t=n.fromNumber(l),u=this.div(t);return e=u.multiply(t).subtract(this),u.toString(l)+e.toInt().toString(l)}return"-"+this.negate().toString(l)}var r=n.fromNumber(Math.pow(l,6));e=this;for(var i="";;){var o=e.div(r),a=(e.subtract(o.multiply(r)).toInt()>>>0).toString(l);if((e=o).isZero())return a+i;for(;a.length<6;)a="0"+a;i=""+a+i}}},{key:"getHighBits",value:function(){return this.high}},{key:"getLowBits",value:function(){return this.low}},{key:"getNumBitsAbs",value:function(){if(this.isNegative())return this.equals(n.MIN_VALUE)?64:this.negate().getNumBitsAbs();for(var l=0!=this.high?this.high:this.low,e=31;e>0&&0==(l&1<<e);e--);return 0!=this.high?e+33:e+1}},{key:"isZero",value:function(){return 0===this.high&&0===this.low}},{key:"isNegative",value:function(){return this.high<0}},{key:"isPositive",value:function(){return this.high>=0}},{key:"isOdd",value:function(){return 1==(1&this.low)}},{key:"isEven",value:function(){return 0==(1&this.low)}},{key:"equals",value:function(l){return n.isInteger(l)||(l=n.fromValue(l)),this.high===l.high&&this.low===l.low}},{key:"notEquals",value:function(n){return!this.equals(n)}},{key:"lessThan",value:function(n){return this.compare(n)<0}},{key:"lessThanOrEqual",value:function(n){return this.compare(n)<=0}},{key:"greaterThan",value:function(n){return this.compare(n)>0}},{key:"greaterThanOrEqual",value:function(n){return this.compare(n)>=0}},{key:"compare",value:function(l){if(n.isInteger(l)||(l=n.fromValue(l)),this.equals(l))return 0;var e=this.isNegative(),t=l.isNegative();return e&&!t?-1:!e&&t?1:this.subtract(l).isNegative()?-1:1}},{key:"negate",value:function(){return this.equals(n.MIN_VALUE)?n.MIN_VALUE:this.not().add(n.ONE)}},{key:"add",value:function(l){n.isInteger(l)||(l=n.fromValue(l));var e=this.high>>>16,t=65535&this.high,u=this.low>>>16,r=65535&this.low,i=l.high>>>16,o=65535&l.high,a=l.low>>>16,s=0,c=0,h=0,d=0;return h+=(d+=r+(65535&l.low))>>>16,d&=65535,c+=(h+=u+a)>>>16,h&=65535,s+=(c+=t+o)>>>16,c&=65535,s+=e+i,s&=65535,n.fromBits(h<<16|d,s<<16|c)}},{key:"subtract",value:function(l){return n.isInteger(l)||(l=n.fromValue(l)),this.add(l.negate())}},{key:"multiply",value:function(l){if(this.isZero())return n.ZERO;if(n.isInteger(l)||(l=n.fromValue(l)),l.isZero())return n.ZERO;if(this.equals(n.MIN_VALUE))return l.isOdd()?n.MIN_VALUE:n.ZERO;if(l.equals(n.MIN_VALUE))return this.isOdd()?n.MIN_VALUE:n.ZERO;if(this.isNegative())return l.isNegative()?this.negate().multiply(l.negate()):this.negate().multiply(l).negate();if(l.isNegative())return this.multiply(l.negate()).negate();if(this.lessThan(h)&&l.lessThan(h))return n.fromNumber(this.toNumber()*l.toNumber());var e=this.high>>>16,t=65535&this.high,u=this.low>>>16,r=65535&this.low,i=l.high>>>16,o=65535&l.high,a=l.low>>>16,s=65535&l.low,c=0,d=0,f=0,p=0;return f+=(p+=r*s)>>>16,p&=65535,d+=(f+=u*s)>>>16,f&=65535,d+=(f+=r*a)>>>16,f&=65535,c+=(d+=t*s)>>>16,d&=65535,c+=(d+=u*a)>>>16,d&=65535,c+=(d+=r*o)>>>16,d&=65535,c+=e*s+t*a+u*o+r*i,c&=65535,n.fromBits(f<<16|p,c<<16|d)}},{key:"div",value:function(l){if(n.isInteger(l)||(l=n.fromValue(l)),l.isZero())throw(0,r.newError)("division by zero");if(this.isZero())return n.ZERO;var e,t,u;if(this.equals(n.MIN_VALUE))return l.equals(n.ONE)||l.equals(n.NEG_ONE)?n.MIN_VALUE:l.equals(n.MIN_VALUE)?n.ONE:(e=this.shiftRight(1).div(l).shiftLeft(1)).equals(n.ZERO)?l.isNegative()?n.ONE:n.NEG_ONE:(t=this.subtract(l.multiply(e)),u=e.add(t.div(l)));if(l.equals(n.MIN_VALUE))return n.ZERO;if(this.isNegative())return l.isNegative()?this.negate().div(l.negate()):this.negate().div(l).negate();if(l.isNegative())return this.div(l.negate()).negate();for(u=n.ZERO,t=this;t.greaterThanOrEqual(l);){e=Math.max(1,Math.floor(t.toNumber()/l.toNumber()));for(var i=Math.ceil(Math.log(e)/Math.LN2),o=i<=48?1:Math.pow(2,i-48),a=n.fromNumber(e),s=a.multiply(l);s.isNegative()||s.greaterThan(t);)e-=o,s=(a=n.fromNumber(e)).multiply(l);a.isZero()&&(a=n.ONE),u=u.add(a),t=t.subtract(s)}return u}},{key:"modulo",value:function(l){return n.isInteger(l)||(l=n.fromValue(l)),this.subtract(this.div(l).multiply(l))}},{key:"not",value:function(){return n.fromBits(~this.low,~this.high)}},{key:"and",value:function(l){return n.isInteger(l)||(l=n.fromValue(l)),n.fromBits(this.low&l.low,this.high&l.high)}},{key:"or",value:function(l){return n.isInteger(l)||(l=n.fromValue(l)),n.fromBits(this.low|l.low,this.high|l.high)}},{key:"xor",value:function(l){return n.isInteger(l)||(l=n.fromValue(l)),n.fromBits(this.low^l.low,this.high^l.high)}},{key:"shiftLeft",value:function(l){return n.isInteger(l)&&(l=l.toInt()),0==(l&=63)?this:l<32?n.fromBits(this.low<<l,this.high<<l|this.low>>>32-l):n.fromBits(0,this.low<<l-32)}},{key:"shiftRight",value:function(l){return n.isInteger(l)&&(l=l.toInt()),0==(l&=63)?this:l<32?n.fromBits(this.low>>>l|this.high<<32-l,this.high>>l):n.fromBits(this.high>>l-32,this.high>=0?0:-1)}}]),n}();o.__isInteger__,Object.defineProperty(o.prototype,"__isInteger__",{value:!0,enumerable:!1,configurable:!1}),o.isInteger=function(n){return!0===(n&&n.__isInteger__)};var a={};o.fromInt=function(n){var l,e;return-128<=(n|=0)&&n<128&&(e=a[n])?e:(l=new o(n,n<0?-1:0,!1),-128<=n&&n<128&&(a[n]=l),l)},o.fromNumber=function(n){return isNaN(n)||!isFinite(n)?o.ZERO:n<=-c?o.MIN_VALUE:n+1>=c?o.MAX_VALUE:n<0?o.fromNumber(-n).negate():new o(n%s|0,n/s|0)},o.fromBits=function(n,l){return new o(n,l)},o.fromString=function(n,l){if(0===n.length)throw(0,r.newError)("number format error: empty string");if("NaN"===n||"Infinity"===n||"+Infinity"===n||"-Infinity"===n)return o.ZERO;if((l=l||10)<2||36<l)throw(0,r.newError)("radix out of range: "+l);var e;if((e=n.indexOf("-"))>0)throw(0,r.newError)('number format error: interior "-" character: '+n);if(0===e)return o.fromString(n.substring(1),l).negate();for(var t=o.fromNumber(Math.pow(l,8)),u=o.ZERO,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),s=parseInt(n.substring(i,i+a),l);if(a<8){var c=o.fromNumber(Math.pow(l,a));u=u.multiply(c).add(o.fromNumber(s))}else u=(u=u.multiply(t)).add(o.fromNumber(s))}return u},o.fromValue=function(n){return n instanceof o?n:"number"==typeof n?o.fromNumber(n):"string"==typeof n?o.fromString(n):new o(n.low,n.high)},o.toNumber=function(n){return o.fromValue(n).toNumber()},o.toString=function(n,l){return o.fromValue(n).toString(l)},o.inSafeRange=function(n){return o.fromValue(n).inSafeRange()};var s=4294967296,c=s*s/2,h=o.fromInt(1<<24);o.ZERO=o.fromInt(0),o.ONE=o.fromInt(1),o.NEG_ONE=o.fromInt(-1),o.MAX_VALUE=o.fromBits(-1,2147483647,!1),o.MIN_VALUE=o.fromBits(0,-2147483648,!1),o.MIN_SAFE_VALUE=o.fromBits(1,-2097152),o.MAX_SAFE_VALUE=o.fromBits(-1,2097151);var d=o.fromValue,f=o.isInteger,p=o.inSafeRange,g=o.toNumber,v=o.toString;l.int=d,l.isInt=f,l.inSafeRange=p,l.toNumber=g,l.toString=v,l.default=o},function(n,l,e){var t=e(15),u=e(83),r=e(57),i=Object.defineProperty;l.f=e(16)?Object.defineProperty:function(n,l,e){if(t(n),l=r(l,!0),t(e),u)try{return i(n,l,e)}catch(n){}if("get"in e||"set"in e)throw TypeError("Accessors not supported!");return"value"in e&&(n[l]=e.value),n}},function(n,l,e){var t=e(10);n.exports=function(n){if(!t(n))throw TypeError(n+" is not an object!");return n}},function(n,l,e){n.exports=!e(22)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(n,l,e){var t=e(31);n.exports=function(n,l,e){if(t(n),void 0===l)return n;switch(e){case 1:return function(e){return n.call(l,e)};case 2:return function(e,t){return n.call(l,e,t)};case 3:return function(e,t,u){return n.call(l,e,t,u)}}return function(){return n.apply(l,arguments)}}},function(n,l,e){var t=e(14),u=e(32);n.exports=e(16)?function(n,l,e){return t.f(n,l,u(1,e))}:function(n,l,e){return n[l]=e,n}},function(n,l,e){var t=e(63),u=e(58);n.exports=function(n){return t(u(n))}},function(n,l,e){n.exports={default:e(159),__esModule:!0}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.WRITE=l.READ=l.Driver=void 0;var t=x(e(52)),u=x(e(4)),r=x(e(5)),i=x(e(53)),o=x(e(6)),a=x(e(0)),s=x(e(1)),c=x(e(75)),h=x(e(186)),d=x(e(187)),f=x(e(29)),p=e(3),g=e(114),v=x(e(41)),y=x(e(232)),m=e(105),b=x(m),w=x(e(76)),_=x(e(119));function x(n){return n&&n.__esModule?n:{default:n}}var E=36e5,T=0,k=function(){function n(l,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};(0,a.default)(this,n),function(n){n.maxConnectionLifetime=C(n.maxConnectionLifetime,E),n.maxConnectionPoolSize=C(n.maxConnectionPoolSize,m.DEFAULT_MAX_SIZE),n.connectionAcquisitionTimeout=C(n.connectionAcquisitionTimeout,m.DEFAULT_ACQUISITION_TIMEOUT)}(u),this._id=T++,this._hostPort=l,this._userAgent=e,this._openConnections={},this._authToken=t,this._config=u,this._log=w.default.create(u),this._pool=new h.default(this._createConnection.bind(this),this._destroyConnection.bind(this),this._validateConnection.bind(this),b.default.fromDriverConfig(u),this._log),this._connectionProvider=null,this._onCompleted=null,this._afterConstruction()}return(0,s.default)(n,[{key:"_afterConstruction",value:function(){this._log.info("Direct driver "+this._id+" created for server address "+this._hostPort)}},{key:"_createConnection",value:function(n,l){var e=this,t=d.default.create(n,this._config,this._createConnectionErrorHandler(),this._log);return t._release=function(){return l(n,t)},this._openConnections[t.id]=t,t.connect(this._userAgent,this._authToken).catch(function(n){throw e.onError&&e.onError(n),n})}},{key:"_validateConnection",value:function(n){if(!n.isOpen())return!1;var l=this._config.maxConnectionLifetime;return Date.now()-n.creationTimestamp<=l}},{key:"_destroyConnection",value:function(n){delete this._openConnections[n.id],n.close()}},{key:"session",value:function(l,e){var t=n._validateSessionMode(l),u=this._getOrCreateConnectionProvider(),r=e?new v.default(e):v.default.empty();return new c.default(t,u,r,this._config)}},{key:"_createConnectionProvider",value:function(n,l,e){return new g.DirectConnectionProvider(n,l,e)}},{key:"_createConnectionErrorHandler",value:function(){return new _.default(p.SERVICE_UNAVAILABLE)}},{key:"_getOrCreateConnectionProvider",value:function(){if(!this._connectionProvider){var n=this._driverOnErrorCallback.bind(this);this._connectionProvider=this._createConnectionProvider(this._hostPort,this._pool,n)}return this._connectionProvider}},{key:"_driverOnErrorCallback",value:function(n){var l=this.onError;l&&n.code===p.SERVICE_UNAVAILABLE&&l(n)}},{key:"close",value:function(){this._log.info("Driver "+this._id+" closing");try{this._pool.purgeAll()}finally{for(var n in this._openConnections)this._openConnections.hasOwnProperty(n)&&this._openConnections[n].close()}}},{key:"onCompleted",get:function(){return this._onCompleted},set:function(n){if(this._onCompleted=n,this._onCompleted){var l=this._getOrCreateConnectionProvider();new y.default(l,this._onCompleted).verify()}}}],[{key:"_validateSessionMode",value:function(n){var l=n||"WRITE";if("READ"!==l&&"WRITE"!==l)throw(0,p.newError)("Illegal session mode "+l);return l}}]),n}();!function(n){function l(n,e){(0,a.default)(this,l);var t=(0,r.default)(this,(l.__proto__||(0,u.default)(l)).call(this));return t._driver=n,t._conn=e,t._hasFailed=!1,t}(0,o.default)(l,n),(0,s.default)(l,[{key:"onError",value:function(n){this._hasFailed||((0,i.default)(l.prototype.__proto__||(0,u.default)(l.prototype),"onError",this).call(this,n),this._driver.onError&&this._driver.onError(n),this._hasFailed=!0)}}])}(f.default);function C(n,l){var e=parseInt(n,10);return e>0||0===e?e:e<0?t.default:l}l.Driver=k,l.READ="READ",l.WRITE="WRITE",l.default=k},function(n,l){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,l){var e={}.hasOwnProperty;n.exports=function(n,l){return e.call(n,l)}},function(n,l,e){n.exports={default:e(160),__esModule:!0}},function(n,l,e){var t=e(58);n.exports=function(n){return Object(t(n))}},function(n,l,e){"use strict";var t=e(139)(!0);e(62)(String,"String",function(n){this._t=String(n),this._i=0},function(){var n,l=this._t,e=this._i;return e>=l.length?{value:void 0,done:!0}:(n=t(l,e),this._i+=n.length,{value:n,done:!1})})},function(n,l){n.exports={}},function(n,l,e){var t=e(87),u=e(64);n.exports=Object.keys||function(n){return t(n,u)}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=o(e(103)),u=o(e(0)),r=o(e(1)),i=o(e(102));function o(n){return n&&n.__esModule?n:{default:n}}var a=function(){function n(){(0,u.default)(this,n),this._fieldKeys=null,this._fieldLookup=null,this._queuedRecords=[],this._tail=null,this._error=null,this._hasFailed=!1,this._observer=null,this._conn=null,this._meta={}}return(0,r.default)(n,[{key:"onNext",value:function(n){var l=new i.default(this._fieldKeys,n,this._fieldLookup);this._observer?this._observer.onNext(l):this._queuedRecords.push(l)}},{key:"onCompleted",value:function(n){if(null===this._fieldKeys){if(this._fieldKeys=[],this._fieldLookup={},n.fields&&n.fields.length>0){this._fieldKeys=n.fields;for(var l=0;l<n.fields.length;l++)this._fieldLookup[n.fields[l]]=l}}else this._observer?this._observer.onCompleted(n):this._tail=n;this._copyMetadataOnCompletion(n)}},{key:"_copyMetadataOnCompletion",value:function(n){for(var l in n)n.hasOwnProperty(l)&&(this._meta[l]=n[l])}},{key:"serverMetadata",value:function(){var n={server:this._conn.server};return(0,t.default)({},this._meta,n)}},{key:"resolveConnection",value:function(n){this._conn=n}},{key:"prepareToHandleSingleResponse",value:function(){this._fieldKeys=[]}},{key:"markCompleted",value:function(){this._fieldKeys=[],this._tail={}}},{key:"onError",value:function(n){this._hasFailed||(this._hasFailed=!0,this._observer?this._observer.onError?this._observer.onError(n):console.log(n):this._error=n)}},{key:"subscribe",value:function(n){if(this._error)n.onError(this._error);else{if(this._queuedRecords.length>0)for(var l=0;l<this._queuedRecords.length;l++)n.onNext(this._queuedRecords[l]);this._tail&&n.onCompleted(this._tail),this._observer=n}}},{key:"hasFailed",value:function(){return this._hasFailed}}]),n}();l.default=a},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.utf8=l.HostNameResolver=l.Channel=l.alloc=void 0;var t=o(e(77)),u=o(e(188)),r=o(e(189)),i=o(e(190));function o(n){return n&&n.__esModule?n:{default:n}}l.alloc=function(n){return new t.default(n)},l.Channel=u.default,l.HostNameResolver=r.default,l.utf8=i.default},function(n,l){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},function(n,l){n.exports=function(n,l){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:l}}},function(n,l){n.exports=!0},function(n,l,e){"use strict";l.__esModule=!0;var t=i(e(85)),u=i(e(146)),r="function"==typeof u.default&&"symbol"==typeof t.default?function(n){return typeof n}:function(n){return n&&"function"==typeof u.default&&n.constructor===u.default&&n!==u.default.prototype?"symbol":typeof n};function i(n){return n&&n.__esModule?n:{default:n}}l.default="function"==typeof u.default&&"symbol"===r(t.default)?function(n){return void 0===n?"undefined":r(n)}:function(n){return n&&"function"==typeof u.default&&n.constructor===u.default&&n!==u.default.prototype?"symbol":void 0===n?"undefined":r(n)}},function(n,l){var e={}.toString;n.exports=function(n){return e.call(n).slice(8,-1)}},function(n,l,e){var t=e(14).f,u=e(23),r=e(9)("toStringTag");n.exports=function(n,l,e){n&&!u(n=e?n:n.prototype,r)&&t(n,r,{configurable:!0,value:l})}},function(n,l,e){e(144);for(var t=e(8),u=e(18),r=e(27),i=e(9)("toStringTag"),o="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),a=0;a<o.length;a++){var s=o[a],c=t[s],h=c&&c.prototype;h&&!h[i]&&u(h,i,s),r[s]=r.Array}},function(n,l){l.f={}.propertyIsEnumerable},function(n,l,e){var t=e(17),u=e(93),r=e(94),i=e(15),o=e(48),a=e(72),s={},c={};(l=n.exports=function(n,l,e,h,d){var f,p,g,v,y=d?function(){return n}:a(n),m=t(e,h,l?2:1),b=0;if("function"!=typeof y)throw TypeError(n+" is not iterable!");if(r(y)){for(f=o(n.length);f>b;b++)if((v=l?m(i(p=n[b])[0],p[1]):m(n[b]))===s||v===c)return v}else for(g=y.call(n);!(p=g.next()).done;)if((v=u(g,m,p.value,l))===s||v===c)return v}).BREAK=s,l.RETURN=c},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.EMPTY_CONNECTION_HOLDER=void 0;var t=c(e(4)),u=c(e(5)),r=c(e(6)),i=c(e(12)),o=c(e(0)),a=c(e(1)),s=e(3);function c(n){return n&&n.__esModule?n:{default:n}}var h=function(){function n(l,e){(0,o.default)(this,n),this._mode=l,this._connectionProvider=e,this._referenceCount=0,this._connectionPromise=i.default.resolve(null)}return(0,a.default)(n,[{key:"initializeConnection",value:function(){0===this._referenceCount&&(this._connectionPromise=this._connectionProvider.acquireConnection(this._mode)),this._referenceCount++}},{key:"getConnection",value:function(n){return this._connectionPromise.then(function(l){return n.resolveConnection(l),l})}},{key:"releaseConnection",value:function(){return 0===this._referenceCount?this._connectionPromise:(this._referenceCount--,0===this._referenceCount?this._releaseConnection():this._connectionPromise)}},{key:"close",value:function(){return 0===this._referenceCount?this._connectionPromise:(this._referenceCount=0,this._releaseConnection())}},{key:"_releaseConnection",value:function(){return this._connectionPromise=this._connectionPromise.then(function(n){return n?n.resetAndFlush().catch(f).then(function(){return n._release()}):i.default.resolve()}).catch(f),this._connectionPromise}}]),n}();l.default=h;var d=function(n){function l(){return(0,o.default)(this,l),(0,u.default)(this,(l.__proto__||(0,t.default)(l)).apply(this,arguments))}return(0,r.default)(l,n),(0,a.default)(l,[{key:"initializeConnection",value:function(){}},{key:"getConnection",value:function(n){return i.default.reject((0,s.newError)("This connection holder does not serve connections"))}},{key:"releaseConnection",value:function(){return i.default.resolve()}},{key:"close",value:function(){return i.default.resolve()}}]),l}(h);function f(n){}l.EMPTY_CONNECTION_HOLDER=new d},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=o(e(104)),u=o(e(0)),r=o(e(1)),i=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(11));function o(n){return n&&n.__esModule?n:{default:n}}var a="neo4j:bookmark:v1:tx",s=-1,c=function(){function n(l){(0,u.default)(this,n),this._values=function(n){if(!n)return[];if(i.isString(n))return[n];if(Array.isArray(n)){for(var l=[],e=0;e<n.length;e++){var t=n[e];if(null!=t){if(!i.isString(t))throw new TypeError("Bookmark should be a string, given: '"+t+"'");l.push(t)}}return l}throw new TypeError("Bookmark should either be a string or a string array, given: '"+n+"'")}(l),this._maxValue=function(n){if(!n||0===n.length)return null;for(var l=n[0],e=d(l),t=1;t<n.length;t++){var u=n[t],r=d(u);r>e&&(l=u,e=r)}return l}(this._values)}return(0,r.default)(n,[{key:"isEmpty",value:function(){return null===this._maxValue}},{key:"maxBookmarkAsString",value:function(){return this._maxValue}},{key:"values",value:function(){return this._values}},{key:"asBeginTransactionParameters",value:function(){var n;return this.isEmpty()?{}:(n={},(0,t.default)(n,"bookmark",this._maxValue),(0,t.default)(n,"bookmarks",this._values),n)}}],[{key:"empty",value:function(){return h}}]),n}();l.default=c;var h=new c(null);function d(n){if(n&&0===n.indexOf(a)){var l=parseInt(n.substring(a.length));return l||s}return s}},function(n,l,e){n.exports={default:e(198),__esModule:!0}},function(n,l){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(n){"object"==typeof window&&(e=window)}n.exports=e},function(n,l,e){n.exports={default:e(134),__esModule:!0}},function(n,l){var e=0,t=Math.random();n.exports=function(n){return"Symbol(".concat(void 0===n?"":n,")_",(++e+t).toString(36))}},function(n,l,e){var t=e(7),u=e(2),r=e(22);n.exports=function(n,l){var e=(u.Object||{})[n]||Object[n],i={};i[n]=l(e),t(t.S+t.F*r(function(){e(1)}),"Object",i)}},function(n,l,e){var t=e(15),u=e(141),r=e(64),i=e(59)("IE_PROTO"),o=function(){},a=function(){var n,l=e(56)("iframe"),t=r.length;for(l.style.display="none",e(88).appendChild(l),l.src="javascript:",(n=l.contentWindow.document).open(),n.write("<script>document.F=Object<\/script>"),n.close(),a=n.F;t--;)delete a.prototype[r[t]];return a()};n.exports=Object.create||function(n,l){var e;return null!==n?(o.prototype=t(n),e=new o,o.prototype=null,e[i]=n):e=a(),void 0===l?e:u(e,l)}},function(n,l,e){var t=e(61),u=Math.min;n.exports=function(n){return n>0?u(t(n),9007199254740991):0}},function(n,l,e){var t=e(45)("meta"),u=e(10),r=e(23),i=e(14).f,o=0,a=Object.isExtensible||function(){return!0},s=!e(22)(function(){return a(Object.preventExtensions({}))}),c=function(n){i(n,t,{value:{i:"O"+ ++o,w:{}}})},h=n.exports={KEY:t,NEED:!1,fastKey:function(n,l){if(!u(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!r(n,t)){if(!a(n))return"F";if(!l)return"E";c(n)}return n[t].i},getWeak:function(n,l){if(!r(n,t)){if(!a(n))return!0;if(!l)return!1;c(n)}return n[t].w},onFreeze:function(n){return s&&h.NEED&&a(n)&&!r(n,t)&&c(n),n}}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(12)),u=a(e(0)),r=a(e(1)),i=a(e(101)),o=e(40);function a(n){return n&&n.__esModule?n:{default:n}}var s=function(n){console.log("Uncaught error when processing result: "+n)},c=function(n){},h=function(){function n(l,e,t,r,i){(0,u.default)(this,n),this._stack=function(){var n=new Error("");if(n.stack)return n.stack.replace(/^Error(\n\r)*/,"");return null}(),this._streamObserver=l,this._p=null,this._statement=e,this._parameters=t||{},this._metaSupplier=r||function(){return{}},this._connectionHolder=i||o.EMPTY_CONNECTION_HOLDER}return(0,r.default)(n,[{key:"_createPromise",value:function(){if(!this._p){var n=this;this._p=new t.default(function(l,e){var t=[],u={onNext:function(n){t.push(n)},onCompleted:function(n){l({records:t,summary:n})},onError:function(n){e(n)}};n.subscribe(u)})}}},{key:"then",value:function(n,l){return this._createPromise(),this._p.then(n,l)}},{key:"catch",value:function(n){return this._createPromise(),this._p.catch(n)}},{key:"subscribe",value:function(n){var l=this,e=this,t=n.onCompleted||c;n.onCompleted=function(u){var r=e._metaSupplier();for(var o in r)r.hasOwnProperty(o)&&(u[o]=r[o]);var a=new i.default(l._statement,l._parameters,u);e._connectionHolder.releaseConnection().then(function(){t.call(n,a)})};var u=n.onError||s;n.onError=function(t){e._connectionHolder.releaseConnection().then(function(){!function(n,l){l&&(n.stack=n.toString()+"\n"+l)}(t,l._stack),u.call(n,t)})},this._streamObserver.subscribe(n)}}]),n}();l.default=h},function(n,l,e){var t=e(35),u=e(9)("toStringTag"),r="Arguments"==t(function(){return arguments}());n.exports=function(n){var l,e,i;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(e=function(n,l){try{return n[l]}catch(n){}}(l=Object(n),u))?e:r?t(l):"Object"==(i=t(l))&&"function"==typeof l.callee?"Arguments":i}},function(n,l,e){n.exports={default:e(169),__esModule:!0}},function(n,l,e){"use strict";l.__esModule=!0;var t=r(e(4)),u=r(e(171));function r(n){return n&&n.__esModule?n:{default:n}}l.default=function n(l,e,r){null===l&&(l=Function.prototype);var i=(0,u.default)(l,e);if(void 0===i){var o=(0,t.default)(l);return null===o?void 0:n(o,e,r)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(r):void 0}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(24)),u=c(e(181)),r=c(e(0)),i=c(e(1)),o=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(11)),a=e(13),s=e(3);function c(n){return n&&n.__esModule?n:{default:n}}var h=function(){function n(l){(0,r.default)(this,n),function(n){n&&o.assertObject(n,"Transaction config")}(l),this.timeout=function(n){if(o.isObject(n)&&(n.timeout||0===n.timeout)){o.assertNumberOrInteger(n.timeout,"Transaction timeout");var l=(0,a.int)(n.timeout);if(l.isZero())throw(0,s.newError)("Transaction timeout should not be zero");if(l.isNegative())throw(0,s.newError)("Transaction timeout should not be negative");return l}return null}(l),this.metadata=function(n){if(o.isObject(n)&&n.metadata){var l=n.metadata;if(o.assertObject(l),0!==(0,t.default)(l).length)return l}return null}(l)}return(0,i.default)(n,[{key:"isEmpty",value:function(){return(0,u.default)(this).every(function(n){return null==n})}}],[{key:"empty",value:function(){return d}}]),n}();l.default=h;var d=new h({})},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.DateTime=l.LocalDateTime=l.Date=l.Time=l.LocalTime=l.Duration=void 0;var t=h(e(208)),u=h(e(44)),r=h(e(80)),i=h(e(0)),o=h(e(1));l.isDuration=function(n){return k(n,f)},l.isLocalTime=function(n){return k(n,p)},l.isTime=function(n){return k(n,g)},l.isDate=function(n){return k(n,v)},l.isLocalDateTime=function(n){return k(n,y)},l.isDateTime=function(n){return k(n,m)};var a=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(113)),s=e(11),c=e(3);function h(n){return n&&n.__esModule?n:{default:n}}var d={value:!0,enumerable:!1,configurable:!1},f="__isDuration__",p="__isLocalTime__",g="__isTime__",v="__isDate__",y="__isLocalDateTime__",m="__isDateTime__",b=l.Duration=function(){function n(l,e,t,u){(0,i.default)(this,n),this.months=(0,s.assertNumberOrInteger)(l,"Months"),this.days=(0,s.assertNumberOrInteger)(e,"Days"),(0,s.assertNumberOrInteger)(t,"Seconds"),(0,s.assertNumberOrInteger)(u,"Nanoseconds"),this.seconds=a.normalizeSecondsForDuration(t,u),this.nanoseconds=a.normalizeNanosecondsForDuration(u),(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return a.durationToIsoString(this.months,this.days,this.seconds,this.nanoseconds)}}]),n}();(0,u.default)(b.prototype,f,d);var w=l.LocalTime=function(){function n(l,e,t,u){(0,i.default)(this,n),this.hour=a.assertValidHour(l),this.minute=a.assertValidMinute(e),this.second=a.assertValidSecond(t),this.nanosecond=a.assertValidNanosecond(u),(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return a.timeToIsoString(this.hour,this.minute,this.second,this.nanosecond)}}],[{key:"fromStandardDate",value:function(l,e){return S(l,e),new n(l.getHours(),l.getMinutes(),l.getSeconds(),a.totalNanoseconds(l,e))}}]),n}();(0,u.default)(w.prototype,p,d);var _=l.Time=function(){function n(l,e,t,u,o){(0,i.default)(this,n),this.hour=a.assertValidHour(l),this.minute=a.assertValidMinute(e),this.second=a.assertValidSecond(t),this.nanosecond=a.assertValidNanosecond(u),this.timeZoneOffsetSeconds=(0,s.assertNumberOrInteger)(o,"Time zone offset in seconds"),(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return a.timeToIsoString(this.hour,this.minute,this.second,this.nanosecond)+a.timeZoneOffsetToIsoString(this.timeZoneOffsetSeconds)}}],[{key:"fromStandardDate",value:function(l,e){return S(l,e),new n(l.getHours(),l.getMinutes(),l.getSeconds(),a.totalNanoseconds(l,e),a.timeZoneOffsetInSeconds(l))}}]),n}();(0,u.default)(_.prototype,g,d);var x=l.Date=function(){function n(l,e,t){(0,i.default)(this,n),this.year=a.assertValidYear(l),this.month=a.assertValidMonth(e),this.day=a.assertValidDay(t),(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return a.dateToIsoString(this.year,this.month,this.day)}}],[{key:"fromStandardDate",value:function(l){return S(l,null),new n(l.getFullYear(),l.getMonth()+1,l.getDate())}}]),n}();(0,u.default)(x.prototype,v,d);var E=l.LocalDateTime=function(){function n(l,e,t,u,o,s,c){(0,i.default)(this,n),this.year=a.assertValidYear(l),this.month=a.assertValidMonth(e),this.day=a.assertValidDay(t),this.hour=a.assertValidHour(u),this.minute=a.assertValidMinute(o),this.second=a.assertValidSecond(s),this.nanosecond=a.assertValidNanosecond(c),(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return C(this.year,this.month,this.day,this.hour,this.minute,this.second,this.nanosecond)}}],[{key:"fromStandardDate",value:function(l,e){return S(l,e),new n(l.getFullYear(),l.getMonth()+1,l.getDate(),l.getHours(),l.getMinutes(),l.getSeconds(),a.totalNanoseconds(l,e))}}]),n}();(0,u.default)(E.prototype,y,d);var T=l.DateTime=function(){function n(l,e,u,o,h,d,f,p,g){(0,i.default)(this,n),this.year=a.assertValidYear(l),this.month=a.assertValidMonth(e),this.day=a.assertValidDay(u),this.hour=a.assertValidHour(o),this.minute=a.assertValidMinute(h),this.second=a.assertValidSecond(d),this.nanosecond=a.assertValidNanosecond(f);var v=function(n,l){var e=n||0===n,t=l&&""!==l;if(e&&!t)return(0,s.assertNumberOrInteger)(n,"Time zone offset in seconds"),[n,null];if(!e&&t)return(0,s.assertString)(l,"Time zone ID"),[null,l];throw e&&t?(0,c.newError)("Unable to create DateTime with both time zone offset and id. Please specify either of them. Given offset: "+n+" and id: "+l):(0,c.newError)("Unable to create DateTime without either time zone offset or id. Please specify either of them. Given offset: "+n+" and id: "+l)}(p,g),y=(0,t.default)(v,2),m=y[0],b=y[1];this.timeZoneOffsetSeconds=m,this.timeZoneId=b,(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return C(this.year,this.month,this.day,this.hour,this.minute,this.second,this.nanosecond)+(this.timeZoneId?"["+this.timeZoneId+"]":a.timeZoneOffsetToIsoString(this.timeZoneOffsetSeconds))}}],[{key:"fromStandardDate",value:function(l,e){return S(l,e),new n(l.getFullYear(),l.getMonth()+1,l.getDate(),l.getHours(),l.getMinutes(),l.getSeconds(),a.totalNanoseconds(l,e),a.timeZoneOffsetInSeconds(l),null)}}]),n}();function k(n,l){return!0===(n&&n[l])}function C(n,l,e,t,u,r,i){return a.dateToIsoString(n,l,e)+"T"+a.timeToIsoString(t,u,r,i)}function S(n,l){(0,s.assertValidDate)(n,"Standard date"),null!=l&&(0,s.assertNumberOrInteger)(l,"Nanosecond")}(0,u.default)(T.prototype,m,d)},function(n,l,e){var t=e(10),u=e(8).document,r=t(u)&&t(u.createElement);n.exports=function(n){return r?u.createElement(n):{}}},function(n,l,e){var t=e(10);n.exports=function(n,l){if(!t(n))return n;var e,u;if(l&&"function"==typeof(e=n.toString)&&!t(u=e.call(n)))return u;if("function"==typeof(e=n.valueOf)&&!t(u=e.call(n)))return u;if(!l&&"function"==typeof(e=n.toString)&&!t(u=e.call(n)))return u;throw TypeError("Can't convert object to primitive value")}},function(n,l){n.exports=function(n){if(null==n)throw TypeError("Can't call method on  "+n);return n}},function(n,l,e){var t=e(60)("keys"),u=e(45);n.exports=function(n){return t[n]||(t[n]=u(n))}},function(n,l,e){var t=e(2),u=e(8),r=u["__core-js_shared__"]||(u["__core-js_shared__"]={});(n.exports=function(n,l){return r[n]||(r[n]=void 0!==l?l:{})})("versions",[]).push({version:t.version,mode:e(33)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(n,l){var e=Math.ceil,t=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?t:e)(n)}},function(n,l,e){"use strict";var t=e(33),u=e(7),r=e(86),i=e(18),o=e(27),a=e(140),s=e(36),c=e(84),h=e(9)("iterator"),d=!([].keys&&"next"in[].keys()),f=function(){return this};n.exports=function(n,l,e,p,g,v,y){a(e,l,p);var m,b,w,_=function(n){if(!d&&n in k)return k[n];switch(n){case"keys":case"values":return function(){return new e(this,n)}}return function(){return new e(this,n)}},x=l+" Iterator",E="values"==g,T=!1,k=n.prototype,C=k[h]||k["@@iterator"]||g&&k[g],S=C||_(g),I=g?E?_("entries"):S:void 0,N="Array"==l&&k.entries||C;if(N&&(w=c(N.call(new n)))!==Object.prototype&&w.next&&(s(w,x,!0),t||"function"==typeof w[h]||i(w,h,f)),E&&C&&"values"!==C.name&&(T=!0,S=function(){return C.call(this)}),t&&!y||!d&&!T&&k[h]||i(k,h,S),o[l]=S,o[x]=f,g)if(m={values:E?S:_("values"),keys:v?S:_("keys"),entries:I},y)for(b in m)b in k||r(k,b,m[b]);else u(u.P+u.F*(d||T),l,m);return m}},function(n,l,e){var t=e(35);n.exports=Object("z").propertyIsEnumerable(0)?Object:function(n){return"String"==t(n)?n.split(""):Object(n)}},function(n,l){n.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(n,l,e){l.f=e(9)},function(n,l,e){var t=e(8),u=e(2),r=e(33),i=e(65),o=e(14).f;n.exports=function(n){var l=u.Symbol||(u.Symbol=r?{}:t.Symbol||{});"_"==n.charAt(0)||n in l||o(l,n,{value:i.f(n)})}},function(n,l){l.f=Object.getOwnPropertySymbols},function(n,l,e){var t=e(38),u=e(32),r=e(19),i=e(57),o=e(23),a=e(83),s=Object.getOwnPropertyDescriptor;l.f=e(16)?s:function(n,l){if(n=r(n),l=i(l,!0),a)try{return s(n,l)}catch(n){}if(o(n,l))return u(!t.f.call(n,l),n[l])}},function(n,l){},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.PathSegment=l.Path=l.UnboundRelationship=l.Relationship=l.Node=void 0;var t=o(e(20)),u=o(e(24)),r=o(e(0)),i=o(e(1));o(e(13));function o(n){return n&&n.__esModule?n:{default:n}}var a=function(){function n(l,e,t){(0,r.default)(this,n),this.identity=l,this.labels=e,this.properties=t}return(0,i.default)(n,[{key:"toString",value:function(){for(var n="("+this.identity,l=0;l<this.labels.length;l++)n+=":"+this.labels[l];var e=(0,u.default)(this.properties);if(e.length>0){n+=" {";for(var r=0;r<e.length;r++)r>0&&(n+=","),n+=e[r]+":"+(0,t.default)(this.properties[e[r]]);n+="}"}return n+=")"}}]),n}(),s=function(){function n(l,e,t,u,i){(0,r.default)(this,n),this.identity=l,this.start=e,this.end=t,this.type=u,this.properties=i}return(0,i.default)(n,[{key:"toString",value:function(){var n="("+this.start+")-[:"+this.type,l=(0,u.default)(this.properties);if(l.length>0){n+=" {";for(var e=0;e<l.length;e++)e>0&&(n+=","),n+=l[e]+":"+(0,t.default)(this.properties[l[e]]);n+="}"}return n+="]->("+this.end+")"}}]),n}(),c=function(){function n(l,e,t){(0,r.default)(this,n),this.identity=l,this.type=e,this.properties=t}return(0,i.default)(n,[{key:"bind",value:function(n,l){return new s(this.identity,n,l,this.type,this.properties)}},{key:"toString",value:function(){var n="-[:"+this.type,l=(0,u.default)(this.properties);if(l.length>0){n+=" {";for(var e=0;e<l.length;e++)e>0&&(n+=","),n+=l[e]+":"+(0,t.default)(this.properties[l[e]]);n+="}"}return n+="]->"}}]),n}();l.Node=a,l.Relationship=s,l.UnboundRelationship=c,l.Path=function n(l,e,t){(0,r.default)(this,n),this.start=l,this.end=e,this.segments=t,this.length=t.length},l.PathSegment=function n(l,e,t){(0,r.default)(this,n),this.start=l,this.relationship=e,this.end=t}},function(n,l){n.exports=function(n,l,e,t){if(!(n instanceof l)||void 0!==t&&t in n)throw TypeError(e+": incorrect invocation!");return n}},function(n,l,e){var t=e(51),u=e(9)("iterator"),r=e(27);n.exports=e(2).getIteratorMethod=function(n){if(null!=n)return n[u]||n["@@iterator"]||r[t(n)]}},function(n,l,e){"use strict";var t=e(31);function u(n){var l,e;this.promise=new n(function(n,t){if(void 0!==l||void 0!==e)throw TypeError("Bad Promise constructor");l=n,e=t}),this.resolve=t(l),this.reject=t(e)}n.exports.f=function(n){return new u(n)}},function(n,l,e){var t=e(18);n.exports=function(n,l,e){for(var u in l)e&&n[u]?n[u]=l[u]:t(n,u,l[u]);return n}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=w(e(4)),u=w(e(5)),r=w(e(53)),i=w(e(6)),o=w(e(0)),a=w(e(1)),s=w(e(29)),c=w(e(50)),h=w(e(177)),d=e(3),f=e(11),p=w(e(40)),g=e(21),v=w(g),y=w(e(185)),m=w(e(41)),b=w(e(54));function w(n){return n&&n.__esModule?n:{default:n}}var _=function(){function n(l,e,t,u){(0,o.default)(this,n),this._mode=l,this._readConnectionHolder=new p.default(g.READ,e),this._writeConnectionHolder=new p.default(g.WRITE,e),this._open=!0,this._hasTx=!1,this._lastBookmark=t,this._transactionExecutor=function(n){var l=n&&n.maxTransactionRetryTime?n.maxTransactionRetryTime:null;return new y.default(l)}(u)}return(0,a.default)(n,[{key:"run",value:function(n,l,e){var t=this,u=(0,f.validateStatementAndParameters)(n,l),r=u.query,i=u.params,o=e?new b.default(e):b.default.empty();return this._run(r,i,function(n,l){return n.protocol().run(r,i,t._lastBookmark,o,l)})}},{key:"_run",value:function(n,l,e){var t=new x(this),u=this._connectionHolderWithMode(this._mode);return this._hasTx?t.onError((0,d.newError)("Statements cannot be run directly on a session with an open transaction; either run from within the transaction or use a different session.")):(u.initializeConnection(),u.getConnection(t).then(function(n){return e(n,t)}).catch(function(n){return t.onError(n)})),new c.default(t,n,l,function(){return t.serverMetadata()},u)}},{key:"beginTransaction",value:function(n){var l=n,e=b.default.empty();return"string"==typeof l||l instanceof String||Array.isArray(l)?this._updateBookmark(new m.default(l)):l&&(e=new b.default(l)),this._beginTransaction(this._mode,e)}},{key:"_beginTransaction",value:function(n,l){if(this._hasTx)throw(0,d.newError)("You cannot begin a transaction on a session with an open transaction; either run from within the transaction or use a different session.");var e=v.default._validateSessionMode(n),t=this._connectionHolderWithMode(e);t.initializeConnection(),this._hasTx=!0;var u=new h.default(t,this._transactionClosed.bind(this),this._updateBookmark.bind(this));return u._begin(this._lastBookmark,l),u}},{key:"_transactionClosed",value:function(){this._hasTx=!1}},{key:"lastBookmark",value:function(){return this._lastBookmark.maxBookmarkAsString()}},{key:"readTransaction",value:function(n,l){var e=new b.default(l);return this._runTransaction(g.READ,e,n)}},{key:"writeTransaction",value:function(n,l){var e=new b.default(l);return this._runTransaction(g.WRITE,e,n)}},{key:"_runTransaction",value:function(n,l,e){var t=this;return this._transactionExecutor.execute(function(){return t._beginTransaction(n,l)},e)}},{key:"_updateBookmark",value:function(n){n&&!n.isEmpty()&&(this._lastBookmark=n)}},{key:"close",value:function(){var n=this,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return null};this._open?(this._open=!1,this._transactionExecutor.close(),this._readConnectionHolder.close().then(function(){n._writeConnectionHolder.close().then(function(){l()})})):l()}},{key:"_connectionHolderWithMode",value:function(n){if(n===g.READ)return this._readConnectionHolder;if(n===g.WRITE)return this._writeConnectionHolder;throw(0,d.newError)("Unknown access mode: "+n)}}]),n}(),x=function(n){function l(n){(0,o.default)(this,l);var e=(0,u.default)(this,(l.__proto__||(0,t.default)(l)).call(this));return e._session=n,e}return(0,i.default)(l,n),(0,a.default)(l,[{key:"onCompleted",value:function(n){(0,r.default)(l.prototype.__proto__||(0,t.default)(l.prototype),"onCompleted",this).call(this,n);var e=new m.default(n.bookmark);this._session._updateBookmark(e)}}]),l}(s.default);l.default=_},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t,u=d(e(24)),r=d(e(4)),i=d(e(5)),o=d(e(6)),a=d(e(0)),s=d(e(1)),c=d(e(104)),h=e(3);function d(n){return n&&n.__esModule?n:{default:n}}var f="info",p=(t={},(0,c.default)(t,"error",0),(0,c.default)(t,"warn",1),(0,c.default)(t,"info",2),(0,c.default)(t,"debug",3),t),g=function(){function n(l,e){(0,a.default)(this,n),this._level=l,this._loggerFunction=e}return(0,s.default)(n,[{key:"isErrorEnabled",value:function(){return y(this._level,"error")}},{key:"error",value:function(n){this.isErrorEnabled()&&this._loggerFunction("error",n)}},{key:"isWarnEnabled",value:function(){return y(this._level,"warn")}},{key:"warn",value:function(n){this.isWarnEnabled()&&this._loggerFunction("warn",n)}},{key:"isInfoEnabled",value:function(){return y(this._level,"info")}},{key:"info",value:function(n){this.isInfoEnabled()&&this._loggerFunction("info",n)}},{key:"isDebugEnabled",value:function(){return y(this._level,"debug")}},{key:"debug",value:function(n){this.isDebugEnabled()&&this._loggerFunction("debug",n)}}],[{key:"create",value:function(l){if(l&&l.logging){var e=l.logging;return new n(function(n){if(n&&n.level){var l=n.level,e=p[l];if(!e&&0!==e)throw(0,h.newError)("Illegal logging level: "+l+". Supported levels are: "+(0,u.default)(p));return l}return f}(e),function(n){if(n&&n.logger){var l=n.logger;if(l&&"function"==typeof l)return l}throw(0,h.newError)("Illegal logger function: "+n.logger)}(e))}return this.noOp()}},{key:"noOp",value:function(){return v}}]),n}(),v=new(function(n){function l(){return(0,a.default)(this,l),(0,i.default)(this,(l.__proto__||(0,r.default)(l)).call(this,null,null))}return(0,o.default)(l,n),(0,s.default)(l,[{key:"isErrorEnabled",value:function(){return!1}},{key:"error",value:function(n){}},{key:"isWarnEnabled",value:function(){return!1}},{key:"warn",value:function(n){}},{key:"isInfoEnabled",value:function(){return!1}},{key:"info",value:function(n){}},{key:"isDebugEnabled",value:function(){return!1}},{key:"debug",value:function(n){}}]),l}(g));function y(n,l){return p[n]>=p[l]}l.default=g},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(4)),u=a(e(0)),r=a(e(1)),i=a(e(5)),o=a(e(6));function a(n){return n&&n.__esModule?n:{default:n}}var s=function(n){function l(n){(0,u.default)(this,l);var e=n instanceof ArrayBuffer?n:new ArrayBuffer(n),r=(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,e.byteLength));return r._buffer=e,r._view=new DataView(r._buffer),r}return(0,o.default)(l,n),(0,r.default)(l,[{key:"putUInt8",value:function(n,l){this._view.setUint8(n,l)}},{key:"getUInt8",value:function(n){return this._view.getUint8(n)}},{key:"putInt8",value:function(n,l){this._view.setInt8(n,l)}},{key:"getInt8",value:function(n){return this._view.getInt8(n)}},{key:"getFloat64",value:function(n){return this._view.getFloat64(n)}},{key:"putFloat64",value:function(n,l){this._view.setFloat64(n,l)}},{key:"getSlice",value:function(n,e){if(this._buffer.slice)return new l(this._buffer.slice(n,n+e));for(var t=new l(e),u=0;u<e;u++)t.putUInt8(u,this.getUInt8(u+n));return t}},{key:"readView",value:function(n){return new DataView(this._buffer,this._updatePos(n),n)}}]),l}(a(e(78)).default);l.default=s},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(4)),u=a(e(5)),r=a(e(6)),i=a(e(0)),o=a(e(1));function a(n){return n&&n.__esModule?n:{default:n}}var s=function(){function n(l){(0,i.default)(this,n),this.position=0,this.length=l}return(0,o.default)(n,[{key:"getInt16",value:function(n){return this.getInt8(n)<<8|this.getUInt8(n+1)}},{key:"getUInt16",value:function(n){return this.getUInt8(n)<<8|this.getUInt8(n+1)}},{key:"getInt32",value:function(n){return this.getInt8(n)<<24|this.getUInt8(n+1)<<16|this.getUInt8(n+2)<<8|this.getUInt8(n+3)}},{key:"getUInt32",value:function(n){return this.getUInt8(n)<<24|this.getUInt8(n+1)<<16|this.getUInt8(n+2)<<8|this.getUInt8(n+3)}},{key:"getInt64",value:function(n){return this.getInt8(n)<<56|this.getUInt8(n+1)<<48|this.getUInt8(n+2)<<40|this.getUInt8(n+3)<<32|this.getUInt8(n+4)<<24|this.getUInt8(n+5)<<16|this.getUInt8(n+6)<<8|this.getUInt8(n+7)}},{key:"getSlice",value:function(n,l){return new c(n,l,this)}},{key:"putInt16",value:function(n,l){this.putInt8(n,l>>8),this.putUInt8(n+1,255&l)}},{key:"putUInt16",value:function(n,l){this.putUInt8(n,l>>8&255),this.putUInt8(n+1,255&l)}},{key:"putInt32",value:function(n,l){this.putInt8(n,l>>24),this.putUInt8(n+1,l>>16&255),this.putUInt8(n+2,l>>8&255),this.putUInt8(n+3,255&l)}},{key:"putUInt32",value:function(n,l){this.putUInt8(n,l>>24&255),this.putUInt8(n+1,l>>16&255),this.putUInt8(n+2,l>>8&255),this.putUInt8(n+3,255&l)}},{key:"putInt64",value:function(n,l){this.putInt8(n,l>>48),this.putUInt8(n+1,l>>42&255),this.putUInt8(n+2,l>>36&255),this.putUInt8(n+3,l>>30&255),this.putUInt8(n+4,l>>24&255),this.putUInt8(n+5,l>>16&255),this.putUInt8(n+6,l>>8&255),this.putUInt8(n+7,255&l)}},{key:"putBytes",value:function(n,l){for(var e=0,t=l.remaining();e<t;e++)this.putUInt8(n+e,l.readUInt8())}},{key:"readUInt8",value:function(){return this.getUInt8(this._updatePos(1))}},{key:"readInt8",value:function(){return this.getInt8(this._updatePos(1))}},{key:"readUInt16",value:function(){return this.getUInt16(this._updatePos(2))}},{key:"readUInt32",value:function(){return this.getUInt32(this._updatePos(4))}},{key:"readInt16",value:function(){return this.getInt16(this._updatePos(2))}},{key:"readInt32",value:function(){return this.getInt32(this._updatePos(4))}},{key:"readInt64",value:function(){return this.getInt32(this._updatePos(8))}},{key:"readFloat64",value:function(){return this.getFloat64(this._updatePos(8))}},{key:"writeUInt8",value:function(n){this.putUInt8(this._updatePos(1),n)}},{key:"writeInt8",value:function(n){this.putInt8(this._updatePos(1),n)}},{key:"writeInt16",value:function(n){this.putInt16(this._updatePos(2),n)}},{key:"writeInt32",value:function(n){this.putInt32(this._updatePos(4),n)}},{key:"writeUInt32",value:function(n){this.putUInt32(this._updatePos(4),n)}},{key:"writeInt64",value:function(n){this.putInt64(this._updatePos(8),n)}},{key:"writeFloat64",value:function(n){this.putFloat64(this._updatePos(8),n)}},{key:"writeBytes",value:function(n){this.putBytes(this._updatePos(n.remaining()),n)}},{key:"readSlice",value:function(n){return this.getSlice(this._updatePos(n),n)}},{key:"_updatePos",value:function(n){var l=this.position;return this.position+=n,l}},{key:"remaining",value:function(){return this.length-this.position}},{key:"hasRemaining",value:function(){return this.remaining()>0}},{key:"reset",value:function(){this.position=0}},{key:"toString",value:function(){return this.constructor.name+"( position="+this.position+" )\n  "+this.toHex()}},{key:"toHex",value:function(){for(var n="",l=0;l<this.length;l++){var e=this.getUInt8(l).toString(16);1===e.length&&(e="0"+e),n+=e,l!==this.length-1&&(n+=" ")}return n}}]),n}();l.default=s;var c=function(n){function l(n,e,r){(0,i.default)(this,l);var o=(0,u.default)(this,(l.__proto__||(0,t.default)(l)).call(this,e));return o._start=n,o._inner=r,o}return(0,r.default)(l,n),(0,o.default)(l,[{key:"putUInt8",value:function(n,l){this._inner.putUInt8(this._start+n,l)}},{key:"getUInt8",value:function(n){return this._inner.getUInt8(this._start+n)}},{key:"putInt8",value:function(n,l){this._inner.putInt8(this._start+n,l)}},{key:"putFloat64",value:function(n,l){this._inner.putFloat64(this._start+n,l)}},{key:"getInt8",value:function(n){return this._inner.getInt8(this._start+n)}},{key:"getFloat64",value:function(n){return this._inner.getFloat64(this._start+n)}}]),l}(s)},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=o(e(103)),u=o(e(20)),r=o(e(0)),i=o(e(1));function o(n){return n&&n.__esModule?n:{default:n}}var a=function(){function n(l,e,t){(0,r.default)(this,n),this.signature=l,this.fields=e,this.toString=t}return(0,i.default)(n,null,[{key:"init",value:function(l,e){return new n(1,[l,e],function(){return"INIT "+l+" {...}"})}},{key:"run",value:function(l,e){return new n(16,[l,e],function(){return"RUN "+l+" "+(0,u.default)(e)})}},{key:"pullAll",value:function(){return c}},{key:"reset",value:function(){return h}},{key:"hello",value:function(l,e){return new n(1,[(0,t.default)({user_agent:l},e)],function(){return"HELLO {user_agent: '"+l+"', ...}"})}},{key:"begin",value:function(l,e){var t=s(l,e);return new n(17,[t],function(){return"BEGIN "+(0,u.default)(t)})}},{key:"commit",value:function(){return d}},{key:"rollback",value:function(){return f}},{key:"runWithMetadata",value:function(l,e,t,r){var i=s(t,r);return new n(16,[l,e,i],function(){return"RUN "+l+" "+(0,u.default)(e)+" "+(0,u.default)(i)})}},{key:"goodbye",value:function(){return p}}]),n}();function s(n,l){var e={};return n.isEmpty()||(e.bookmarks=n.values()),l.timeout&&(e.tx_timeout=l.timeout),l.metadata&&(e.tx_metadata=l.metadata),e}l.default=a;var c=new a(63,[],function(){return"PULL_ALL"}),h=new a(15,[],function(){return"RESET"}),d=new a(18,[],function(){return"COMMIT"}),f=new a(19,[],function(){return"ROLLBACK"}),p=new a(2,[],function(){return"GOODBYE"})},function(n,l,e){n.exports={default:e(202),__esModule:!0}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.Point=void 0;var t=s(e(44)),u=s(e(204)),r=s(e(80)),i=s(e(0)),o=s(e(1));l.isPoint=function(n){return!0===(n&&n[c])};var a=e(11);function s(n){return n&&n.__esModule?n:{default:n}}var c="__isPoint__",h=l.Point=function(){function n(l,e,t,u){(0,i.default)(this,n),this.srid=(0,a.assertNumberOrInteger)(l,"SRID"),this.x=(0,a.assertNumber)(e,"X coordinate"),this.y=(0,a.assertNumber)(t,"Y coordinate"),this.z=null==u?u:(0,a.assertNumber)(u,"Z coordinate"),(0,r.default)(this)}return(0,o.default)(n,[{key:"toString",value:function(){return this.z||0===this.z?"Point{srid="+d(this.srid)+", x="+d(this.x)+", y="+d(this.y)+", z="+d(this.z)+"}":"Point{srid="+d(this.srid)+", x="+d(this.x)+", y="+d(this.y)+"}"}}]),n}();function d(n){return(0,u.default)(n)?n+".0":n.toString()}(0,t.default)(h.prototype,c,{value:!0,enumerable:!1,configurable:!1})},function(n,l,e){var t,u,r;
/*!
 * jQuery JavaScript Library v2.2.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:23Z
 */
/*!
 * jQuery JavaScript Library v2.2.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:23Z
 */
u="undefined"!=typeof window?window:this,r=function(e,u){var r=[],i=e.document,o=r.slice,a=r.concat,s=r.push,c=r.indexOf,h={},d=h.toString,f=h.hasOwnProperty,p={},g=function(n,l){return new g.fn.init(n,l)},v=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,y=/^-ms-/,m=/-([\da-z])/gi,b=function(n,l){return l.toUpperCase()};function w(n){var l=!!n&&"length"in n&&n.length,e=g.type(n);return"function"!==e&&!g.isWindow(n)&&("array"===e||0===l||"number"==typeof l&&l>0&&l-1 in n)}g.fn=g.prototype={jquery:"2.2.4",constructor:g,selector:"",length:0,toArray:function(){return o.call(this)},get:function(n){return null!=n?n<0?this[n+this.length]:this[n]:o.call(this)},pushStack:function(n){var l=g.merge(this.constructor(),n);return l.prevObject=this,l.context=this.context,l},each:function(n){return g.each(this,n)},map:function(n){return this.pushStack(g.map(this,function(l,e){return n.call(l,e,l)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(n){var l=this.length,e=+n+(n<0?l:0);return this.pushStack(e>=0&&e<l?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:s,sort:r.sort,splice:r.splice},g.extend=g.fn.extend=function(){var n,l,e,t,u,r,i=arguments[0]||{},o=1,a=arguments.length,s=!1;for("boolean"==typeof i&&(s=i,i=arguments[o]||{},o++),"object"==typeof i||g.isFunction(i)||(i={}),o===a&&(i=this,o--);o<a;o++)if(null!=(n=arguments[o]))for(l in n)e=i[l],i!==(t=n[l])&&(s&&t&&(g.isPlainObject(t)||(u=g.isArray(t)))?(u?(u=!1,r=e&&g.isArray(e)?e:[]):r=e&&g.isPlainObject(e)?e:{},i[l]=g.extend(s,r,t)):void 0!==t&&(i[l]=t));return i},g.extend({expando:"jQuery"+("2.2.4"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(n){throw new Error(n)},noop:function(){},isFunction:function(n){return"function"===g.type(n)},isArray:Array.isArray,isWindow:function(n){return null!=n&&n===n.window},isNumeric:function(n){var l=n&&n.toString();return!g.isArray(n)&&l-parseFloat(l)+1>=0},isPlainObject:function(n){var l;if("object"!==g.type(n)||n.nodeType||g.isWindow(n))return!1;if(n.constructor&&!f.call(n,"constructor")&&!f.call(n.constructor.prototype||{},"isPrototypeOf"))return!1;for(l in n);return void 0===l||f.call(n,l)},isEmptyObject:function(n){var l;for(l in n)return!1;return!0},type:function(n){return null==n?n+"":"object"==typeof n||"function"==typeof n?h[d.call(n)]||"object":typeof n},globalEval:function(n){var l,e=eval;(n=g.trim(n))&&(1===n.indexOf("use strict")?((l=i.createElement("script")).text=n,i.head.appendChild(l).parentNode.removeChild(l)):e(n))},camelCase:function(n){return n.replace(y,"ms-").replace(m,b)},nodeName:function(n,l){return n.nodeName&&n.nodeName.toLowerCase()===l.toLowerCase()},each:function(n,l){var e,t=0;if(w(n))for(e=n.length;t<e&&!1!==l.call(n[t],t,n[t]);t++);else for(t in n)if(!1===l.call(n[t],t,n[t]))break;return n},trim:function(n){return null==n?"":(n+"").replace(v,"")},makeArray:function(n,l){var e=l||[];return null!=n&&(w(Object(n))?g.merge(e,"string"==typeof n?[n]:n):s.call(e,n)),e},inArray:function(n,l,e){return null==l?-1:c.call(l,n,e)},merge:function(n,l){for(var e=+l.length,t=0,u=n.length;t<e;t++)n[u++]=l[t];return n.length=u,n},grep:function(n,l,e){for(var t=[],u=0,r=n.length,i=!e;u<r;u++)!l(n[u],u)!==i&&t.push(n[u]);return t},map:function(n,l,e){var t,u,r=0,i=[];if(w(n))for(t=n.length;r<t;r++)null!=(u=l(n[r],r,e))&&i.push(u);else for(r in n)null!=(u=l(n[r],r,e))&&i.push(u);return a.apply([],i)},guid:1,proxy:function(n,l){var e,t,u;if("string"==typeof l&&(e=n[l],l=n,n=e),g.isFunction(n))return t=o.call(arguments,2),(u=function(){return n.apply(l||this,t.concat(o.call(arguments)))}).guid=n.guid=n.guid||g.guid++,u},now:Date.now,support:p}),"function"==typeof Symbol&&(g.fn[Symbol.iterator]=r[Symbol.iterator]),g.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(n,l){h["[object "+l+"]"]=l.toLowerCase()});var _=
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
function(n){var l,e,t,u,r,i,o,a,s,c,h,d,f,p,g,v,y,m,b,w="sizzle"+1*new Date,_=n.document,x=0,E=0,T=rn(),k=rn(),C=rn(),S=function(n,l){return n===l&&(h=!0),0},I=1<<31,N={}.hasOwnProperty,D=[],O=D.pop,A=D.push,P=D.push,M=D.slice,L=function(n,l){for(var e=0,t=n.length;e<t;e++)if(n[e]===l)return e;return-1},R="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",F="[\\x20\\t\\r\\n\\f]",B="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",j="\\["+F+"*("+B+")(?:"+F+"*([*^$|!~]?=)"+F+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+F+"*\\]",U=":("+B+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+j+")*)|.*)\\)|)",z=new RegExp(F+"+","g"),q=new RegExp("^"+F+"+|((?:^|[^\\\\])(?:\\\\.)*)"+F+"+$","g"),V=new RegExp("^"+F+"*,"+F+"*"),H=new RegExp("^"+F+"*([>+~]|"+F+")"+F+"*"),G=new RegExp("="+F+"*([^\\]'\"]*?)"+F+"*\\]","g"),Y=new RegExp(U),W=new RegExp("^"+B+"$"),X={ID:new RegExp("^#("+B+")"),CLASS:new RegExp("^\\.("+B+")"),TAG:new RegExp("^("+B+"|[*])"),ATTR:new RegExp("^"+j),PSEUDO:new RegExp("^"+U),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+F+"*(even|odd|(([+-]|)(\\d*)n|)"+F+"*(?:([+-]|)"+F+"*(\\d+)|))"+F+"*\\)|)","i"),bool:new RegExp("^(?:"+R+")$","i"),needsContext:new RegExp("^"+F+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+F+"*((?:-\\d)?\\d*)"+F+"*\\)|)(?=[^-]|$)","i")},K=/^(?:input|select|textarea|button)$/i,$=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,Q=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,J=/[+~]/,nn=/'|\\/g,ln=new RegExp("\\\\([\\da-f]{1,6}"+F+"?|("+F+")|.)","ig"),en=function(n,l,e){var t="0x"+l-65536;return t!=t||e?l:t<0?String.fromCharCode(t+65536):String.fromCharCode(t>>10|55296,1023&t|56320)},tn=function(){d()};try{P.apply(D=M.call(_.childNodes),_.childNodes),D[_.childNodes.length].nodeType}catch(n){P={apply:D.length?function(n,l){A.apply(n,M.call(l))}:function(n,l){for(var e=n.length,t=0;n[e++]=l[t++];);n.length=e-1}}}function un(n,l,t,u){var r,o,s,c,h,p,y,m,x=l&&l.ownerDocument,E=l?l.nodeType:9;if(t=t||[],"string"!=typeof n||!n||1!==E&&9!==E&&11!==E)return t;if(!u&&((l?l.ownerDocument||l:_)!==f&&d(l),l=l||f,g)){if(11!==E&&(p=Q.exec(n)))if(r=p[1]){if(9===E){if(!(s=l.getElementById(r)))return t;if(s.id===r)return t.push(s),t}else if(x&&(s=x.getElementById(r))&&b(l,s)&&s.id===r)return t.push(s),t}else{if(p[2])return P.apply(t,l.getElementsByTagName(n)),t;if((r=p[3])&&e.getElementsByClassName&&l.getElementsByClassName)return P.apply(t,l.getElementsByClassName(r)),t}if(e.qsa&&!C[n+" "]&&(!v||!v.test(n))){if(1!==E)x=l,m=n;else if("object"!==l.nodeName.toLowerCase()){for((c=l.getAttribute("id"))?c=c.replace(nn,"\\$&"):l.setAttribute("id",c=w),o=(y=i(n)).length,h=W.test(c)?"#"+c:"[id='"+c+"']";o--;)y[o]=h+" "+vn(y[o]);m=y.join(","),x=J.test(n)&&pn(l.parentNode)||l}if(m)try{return P.apply(t,x.querySelectorAll(m)),t}catch(n){}finally{c===w&&l.removeAttribute("id")}}}return a(n.replace(q,"$1"),l,t,u)}function rn(){var n=[];return function l(e,u){return n.push(e+" ")>t.cacheLength&&delete l[n.shift()],l[e+" "]=u}}function on(n){return n[w]=!0,n}function an(n){var l=f.createElement("div");try{return!!n(l)}catch(n){return!1}finally{l.parentNode&&l.parentNode.removeChild(l),l=null}}function sn(n,l){for(var e=n.split("|"),u=e.length;u--;)t.attrHandle[e[u]]=l}function cn(n,l){var e=l&&n,t=e&&1===n.nodeType&&1===l.nodeType&&(~l.sourceIndex||I)-(~n.sourceIndex||I);if(t)return t;if(e)for(;e=e.nextSibling;)if(e===l)return-1;return n?1:-1}function hn(n){return function(l){return"input"===l.nodeName.toLowerCase()&&l.type===n}}function dn(n){return function(l){var e=l.nodeName.toLowerCase();return("input"===e||"button"===e)&&l.type===n}}function fn(n){return on(function(l){return l=+l,on(function(e,t){for(var u,r=n([],e.length,l),i=r.length;i--;)e[u=r[i]]&&(e[u]=!(t[u]=e[u]))})})}function pn(n){return n&&void 0!==n.getElementsByTagName&&n}for(l in e=un.support={},r=un.isXML=function(n){var l=n&&(n.ownerDocument||n).documentElement;return!!l&&"HTML"!==l.nodeName},d=un.setDocument=function(n){var l,u,i=n?n.ownerDocument||n:_;return i!==f&&9===i.nodeType&&i.documentElement?(p=(f=i).documentElement,g=!r(f),(u=f.defaultView)&&u.top!==u&&(u.addEventListener?u.addEventListener("unload",tn,!1):u.attachEvent&&u.attachEvent("onunload",tn)),e.attributes=an(function(n){return n.className="i",!n.getAttribute("className")}),e.getElementsByTagName=an(function(n){return n.appendChild(f.createComment("")),!n.getElementsByTagName("*").length}),e.getElementsByClassName=Z.test(f.getElementsByClassName),e.getById=an(function(n){return p.appendChild(n).id=w,!f.getElementsByName||!f.getElementsByName(w).length}),e.getById?(t.find.ID=function(n,l){if(void 0!==l.getElementById&&g){var e=l.getElementById(n);return e?[e]:[]}},t.filter.ID=function(n){var l=n.replace(ln,en);return function(n){return n.getAttribute("id")===l}}):(delete t.find.ID,t.filter.ID=function(n){var l=n.replace(ln,en);return function(n){var e=void 0!==n.getAttributeNode&&n.getAttributeNode("id");return e&&e.value===l}}),t.find.TAG=e.getElementsByTagName?function(n,l){return void 0!==l.getElementsByTagName?l.getElementsByTagName(n):e.qsa?l.querySelectorAll(n):void 0}:function(n,l){var e,t=[],u=0,r=l.getElementsByTagName(n);if("*"===n){for(;e=r[u++];)1===e.nodeType&&t.push(e);return t}return r},t.find.CLASS=e.getElementsByClassName&&function(n,l){if(void 0!==l.getElementsByClassName&&g)return l.getElementsByClassName(n)},y=[],v=[],(e.qsa=Z.test(f.querySelectorAll))&&(an(function(n){p.appendChild(n).innerHTML="<a id='"+w+"'></a><select id='"+w+"-\r\\' msallowcapture=''><option selected=''></option></select>",n.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+F+"*(?:''|\"\")"),n.querySelectorAll("[selected]").length||v.push("\\["+F+"*(?:value|"+R+")"),n.querySelectorAll("[id~="+w+"-]").length||v.push("~="),n.querySelectorAll(":checked").length||v.push(":checked"),n.querySelectorAll("a#"+w+"+*").length||v.push(".#.+[+~]")}),an(function(n){var l=f.createElement("input");l.setAttribute("type","hidden"),n.appendChild(l).setAttribute("name","D"),n.querySelectorAll("[name=d]").length&&v.push("name"+F+"*[*^$|!~]?="),n.querySelectorAll(":enabled").length||v.push(":enabled",":disabled"),n.querySelectorAll("*,:x"),v.push(",.*:")})),(e.matchesSelector=Z.test(m=p.matches||p.webkitMatchesSelector||p.mozMatchesSelector||p.oMatchesSelector||p.msMatchesSelector))&&an(function(n){e.disconnectedMatch=m.call(n,"div"),m.call(n,"[s!='']:x"),y.push("!=",U)}),v=v.length&&new RegExp(v.join("|")),y=y.length&&new RegExp(y.join("|")),l=Z.test(p.compareDocumentPosition),b=l||Z.test(p.contains)?function(n,l){var e=9===n.nodeType?n.documentElement:n,t=l&&l.parentNode;return n===t||!(!t||1!==t.nodeType||!(e.contains?e.contains(t):n.compareDocumentPosition&&16&n.compareDocumentPosition(t)))}:function(n,l){if(l)for(;l=l.parentNode;)if(l===n)return!0;return!1},S=l?function(n,l){if(n===l)return h=!0,0;var t=!n.compareDocumentPosition-!l.compareDocumentPosition;return t||(1&(t=(n.ownerDocument||n)===(l.ownerDocument||l)?n.compareDocumentPosition(l):1)||!e.sortDetached&&l.compareDocumentPosition(n)===t?n===f||n.ownerDocument===_&&b(_,n)?-1:l===f||l.ownerDocument===_&&b(_,l)?1:c?L(c,n)-L(c,l):0:4&t?-1:1)}:function(n,l){if(n===l)return h=!0,0;var e,t=0,u=n.parentNode,r=l.parentNode,i=[n],o=[l];if(!u||!r)return n===f?-1:l===f?1:u?-1:r?1:c?L(c,n)-L(c,l):0;if(u===r)return cn(n,l);for(e=n;e=e.parentNode;)i.unshift(e);for(e=l;e=e.parentNode;)o.unshift(e);for(;i[t]===o[t];)t++;return t?cn(i[t],o[t]):i[t]===_?-1:o[t]===_?1:0},f):f},un.matches=function(n,l){return un(n,null,null,l)},un.matchesSelector=function(n,l){if((n.ownerDocument||n)!==f&&d(n),l=l.replace(G,"='$1']"),e.matchesSelector&&g&&!C[l+" "]&&(!y||!y.test(l))&&(!v||!v.test(l)))try{var t=m.call(n,l);if(t||e.disconnectedMatch||n.document&&11!==n.document.nodeType)return t}catch(n){}return un(l,f,null,[n]).length>0},un.contains=function(n,l){return(n.ownerDocument||n)!==f&&d(n),b(n,l)},un.attr=function(n,l){(n.ownerDocument||n)!==f&&d(n);var u=t.attrHandle[l.toLowerCase()],r=u&&N.call(t.attrHandle,l.toLowerCase())?u(n,l,!g):void 0;return void 0!==r?r:e.attributes||!g?n.getAttribute(l):(r=n.getAttributeNode(l))&&r.specified?r.value:null},un.error=function(n){throw new Error("Syntax error, unrecognized expression: "+n)},un.uniqueSort=function(n){var l,t=[],u=0,r=0;if(h=!e.detectDuplicates,c=!e.sortStable&&n.slice(0),n.sort(S),h){for(;l=n[r++];)l===n[r]&&(u=t.push(r));for(;u--;)n.splice(t[u],1)}return c=null,n},u=un.getText=function(n){var l,e="",t=0,r=n.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof n.textContent)return n.textContent;for(n=n.firstChild;n;n=n.nextSibling)e+=u(n)}else if(3===r||4===r)return n.nodeValue}else for(;l=n[t++];)e+=u(l);return e},(t=un.selectors={cacheLength:50,createPseudo:on,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(n){return n[1]=n[1].replace(ln,en),n[3]=(n[3]||n[4]||n[5]||"").replace(ln,en),"~="===n[2]&&(n[3]=" "+n[3]+" "),n.slice(0,4)},CHILD:function(n){return n[1]=n[1].toLowerCase(),"nth"===n[1].slice(0,3)?(n[3]||un.error(n[0]),n[4]=+(n[4]?n[5]+(n[6]||1):2*("even"===n[3]||"odd"===n[3])),n[5]=+(n[7]+n[8]||"odd"===n[3])):n[3]&&un.error(n[0]),n},PSEUDO:function(n){var l,e=!n[6]&&n[2];return X.CHILD.test(n[0])?null:(n[3]?n[2]=n[4]||n[5]||"":e&&Y.test(e)&&(l=i(e,!0))&&(l=e.indexOf(")",e.length-l)-e.length)&&(n[0]=n[0].slice(0,l),n[2]=e.slice(0,l)),n.slice(0,3))}},filter:{TAG:function(n){var l=n.replace(ln,en).toLowerCase();return"*"===n?function(){return!0}:function(n){return n.nodeName&&n.nodeName.toLowerCase()===l}},CLASS:function(n){var l=T[n+" "];return l||(l=new RegExp("(^|"+F+")"+n+"("+F+"|$)"))&&T(n,function(n){return l.test("string"==typeof n.className&&n.className||void 0!==n.getAttribute&&n.getAttribute("class")||"")})},ATTR:function(n,l,e){return function(t){var u=un.attr(t,n);return null==u?"!="===l:!l||(u+="","="===l?u===e:"!="===l?u!==e:"^="===l?e&&0===u.indexOf(e):"*="===l?e&&u.indexOf(e)>-1:"$="===l?e&&u.slice(-e.length)===e:"~="===l?(" "+u.replace(z," ")+" ").indexOf(e)>-1:"|="===l&&(u===e||u.slice(0,e.length+1)===e+"-"))}},CHILD:function(n,l,e,t,u){var r="nth"!==n.slice(0,3),i="last"!==n.slice(-4),o="of-type"===l;return 1===t&&0===u?function(n){return!!n.parentNode}:function(l,e,a){var s,c,h,d,f,p,g=r!==i?"nextSibling":"previousSibling",v=l.parentNode,y=o&&l.nodeName.toLowerCase(),m=!a&&!o,b=!1;if(v){if(r){for(;g;){for(d=l;d=d[g];)if(o?d.nodeName.toLowerCase()===y:1===d.nodeType)return!1;p=g="only"===n&&!p&&"nextSibling"}return!0}if(p=[i?v.firstChild:v.lastChild],i&&m){for(b=(f=(s=(c=(h=(d=v)[w]||(d[w]={}))[d.uniqueID]||(h[d.uniqueID]={}))[n]||[])[0]===x&&s[1])&&s[2],d=f&&v.childNodes[f];d=++f&&d&&d[g]||(b=f=0)||p.pop();)if(1===d.nodeType&&++b&&d===l){c[n]=[x,f,b];break}}else if(m&&(b=f=(s=(c=(h=(d=l)[w]||(d[w]={}))[d.uniqueID]||(h[d.uniqueID]={}))[n]||[])[0]===x&&s[1]),!1===b)for(;(d=++f&&d&&d[g]||(b=f=0)||p.pop())&&((o?d.nodeName.toLowerCase()!==y:1!==d.nodeType)||!++b||(m&&((c=(h=d[w]||(d[w]={}))[d.uniqueID]||(h[d.uniqueID]={}))[n]=[x,b]),d!==l)););return(b-=u)===t||b%t==0&&b/t>=0}}},PSEUDO:function(n,l){var e,u=t.pseudos[n]||t.setFilters[n.toLowerCase()]||un.error("unsupported pseudo: "+n);return u[w]?u(l):u.length>1?(e=[n,n,"",l],t.setFilters.hasOwnProperty(n.toLowerCase())?on(function(n,e){for(var t,r=u(n,l),i=r.length;i--;)n[t=L(n,r[i])]=!(e[t]=r[i])}):function(n){return u(n,0,e)}):u}},pseudos:{not:on(function(n){var l=[],e=[],t=o(n.replace(q,"$1"));return t[w]?on(function(n,l,e,u){for(var r,i=t(n,null,u,[]),o=n.length;o--;)(r=i[o])&&(n[o]=!(l[o]=r))}):function(n,u,r){return l[0]=n,t(l,null,r,e),l[0]=null,!e.pop()}}),has:on(function(n){return function(l){return un(n,l).length>0}}),contains:on(function(n){return n=n.replace(ln,en),function(l){return(l.textContent||l.innerText||u(l)).indexOf(n)>-1}}),lang:on(function(n){return W.test(n||"")||un.error("unsupported lang: "+n),n=n.replace(ln,en).toLowerCase(),function(l){var e;do{if(e=g?l.lang:l.getAttribute("xml:lang")||l.getAttribute("lang"))return(e=e.toLowerCase())===n||0===e.indexOf(n+"-")}while((l=l.parentNode)&&1===l.nodeType);return!1}}),target:function(l){var e=n.location&&n.location.hash;return e&&e.slice(1)===l.id},root:function(n){return n===p},focus:function(n){return n===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(n.type||n.href||~n.tabIndex)},enabled:function(n){return!1===n.disabled},disabled:function(n){return!0===n.disabled},checked:function(n){var l=n.nodeName.toLowerCase();return"input"===l&&!!n.checked||"option"===l&&!!n.selected},selected:function(n){return n.parentNode&&n.parentNode.selectedIndex,!0===n.selected},empty:function(n){for(n=n.firstChild;n;n=n.nextSibling)if(n.nodeType<6)return!1;return!0},parent:function(n){return!t.pseudos.empty(n)},header:function(n){return $.test(n.nodeName)},input:function(n){return K.test(n.nodeName)},button:function(n){var l=n.nodeName.toLowerCase();return"input"===l&&"button"===n.type||"button"===l},text:function(n){var l;return"input"===n.nodeName.toLowerCase()&&"text"===n.type&&(null==(l=n.getAttribute("type"))||"text"===l.toLowerCase())},first:fn(function(){return[0]}),last:fn(function(n,l){return[l-1]}),eq:fn(function(n,l,e){return[e<0?e+l:e]}),even:fn(function(n,l){for(var e=0;e<l;e+=2)n.push(e);return n}),odd:fn(function(n,l){for(var e=1;e<l;e+=2)n.push(e);return n}),lt:fn(function(n,l,e){for(var t=e<0?e+l:e;--t>=0;)n.push(t);return n}),gt:fn(function(n,l,e){for(var t=e<0?e+l:e;++t<l;)n.push(t);return n})}}).pseudos.nth=t.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})t.pseudos[l]=hn(l);for(l in{submit:!0,reset:!0})t.pseudos[l]=dn(l);function gn(){}function vn(n){for(var l=0,e=n.length,t="";l<e;l++)t+=n[l].value;return t}function yn(n,l,e){var t=l.dir,u=e&&"parentNode"===t,r=E++;return l.first?function(l,e,r){for(;l=l[t];)if(1===l.nodeType||u)return n(l,e,r)}:function(l,e,i){var o,a,s,c=[x,r];if(i){for(;l=l[t];)if((1===l.nodeType||u)&&n(l,e,i))return!0}else for(;l=l[t];)if(1===l.nodeType||u){if((o=(a=(s=l[w]||(l[w]={}))[l.uniqueID]||(s[l.uniqueID]={}))[t])&&o[0]===x&&o[1]===r)return c[2]=o[2];if(a[t]=c,c[2]=n(l,e,i))return!0}}}function mn(n){return n.length>1?function(l,e,t){for(var u=n.length;u--;)if(!n[u](l,e,t))return!1;return!0}:n[0]}function bn(n,l,e,t,u){for(var r,i=[],o=0,a=n.length,s=null!=l;o<a;o++)(r=n[o])&&(e&&!e(r,t,u)||(i.push(r),s&&l.push(o)));return i}function wn(n,l,e,t,u,r){return t&&!t[w]&&(t=wn(t)),u&&!u[w]&&(u=wn(u,r)),on(function(r,i,o,a){var s,c,h,d=[],f=[],p=i.length,g=r||function(n,l,e){for(var t=0,u=l.length;t<u;t++)un(n,l[t],e);return e}(l||"*",o.nodeType?[o]:o,[]),v=!n||!r&&l?g:bn(g,d,n,o,a),y=e?u||(r?n:p||t)?[]:i:v;if(e&&e(v,y,o,a),t)for(s=bn(y,f),t(s,[],o,a),c=s.length;c--;)(h=s[c])&&(y[f[c]]=!(v[f[c]]=h));if(r){if(u||n){if(u){for(s=[],c=y.length;c--;)(h=y[c])&&s.push(v[c]=h);u(null,y=[],s,a)}for(c=y.length;c--;)(h=y[c])&&(s=u?L(r,h):d[c])>-1&&(r[s]=!(i[s]=h))}}else y=bn(y===i?y.splice(p,y.length):y),u?u(null,i,y,a):P.apply(i,y)})}function _n(n){for(var l,e,u,r=n.length,i=t.relative[n[0].type],o=i||t.relative[" "],a=i?1:0,c=yn(function(n){return n===l},o,!0),h=yn(function(n){return L(l,n)>-1},o,!0),d=[function(n,e,t){var u=!i&&(t||e!==s)||((l=e).nodeType?c(n,e,t):h(n,e,t));return l=null,u}];a<r;a++)if(e=t.relative[n[a].type])d=[yn(mn(d),e)];else{if((e=t.filter[n[a].type].apply(null,n[a].matches))[w]){for(u=++a;u<r&&!t.relative[n[u].type];u++);return wn(a>1&&mn(d),a>1&&vn(n.slice(0,a-1).concat({value:" "===n[a-2].type?"*":""})).replace(q,"$1"),e,a<u&&_n(n.slice(a,u)),u<r&&_n(n=n.slice(u)),u<r&&vn(n))}d.push(e)}return mn(d)}return gn.prototype=t.filters=t.pseudos,t.setFilters=new gn,i=un.tokenize=function(n,l){var e,u,r,i,o,a,s,c=k[n+" "];if(c)return l?0:c.slice(0);for(o=n,a=[],s=t.preFilter;o;){for(i in e&&!(u=V.exec(o))||(u&&(o=o.slice(u[0].length)||o),a.push(r=[])),e=!1,(u=H.exec(o))&&(e=u.shift(),r.push({value:e,type:u[0].replace(q," ")}),o=o.slice(e.length)),t.filter)!(u=X[i].exec(o))||s[i]&&!(u=s[i](u))||(e=u.shift(),r.push({value:e,type:i,matches:u}),o=o.slice(e.length));if(!e)break}return l?o.length:o?un.error(n):k(n,a).slice(0)},o=un.compile=function(n,l){var e,u=[],r=[],o=C[n+" "];if(!o){for(l||(l=i(n)),e=l.length;e--;)(o=_n(l[e]))[w]?u.push(o):r.push(o);(o=C(n,function(n,l){var e=l.length>0,u=n.length>0,r=function(r,i,o,a,c){var h,p,v,y=0,m="0",b=r&&[],w=[],_=s,E=r||u&&t.find.TAG("*",c),T=x+=null==_?1:Math.random()||.1,k=E.length;for(c&&(s=i===f||i||c);m!==k&&null!=(h=E[m]);m++){if(u&&h){for(p=0,i||h.ownerDocument===f||(d(h),o=!g);v=n[p++];)if(v(h,i||f,o)){a.push(h);break}c&&(x=T)}e&&((h=!v&&h)&&y--,r&&b.push(h))}if(y+=m,e&&m!==y){for(p=0;v=l[p++];)v(b,w,i,o);if(r){if(y>0)for(;m--;)b[m]||w[m]||(w[m]=O.call(a));w=bn(w)}P.apply(a,w),c&&!r&&w.length>0&&y+l.length>1&&un.uniqueSort(a)}return c&&(x=T,s=_),b};return e?on(r):r}(r,u))).selector=n}return o},a=un.select=function(n,l,u,r){var a,s,c,h,d,f="function"==typeof n&&n,p=!r&&i(n=f.selector||n);if(u=u||[],1===p.length){if((s=p[0]=p[0].slice(0)).length>2&&"ID"===(c=s[0]).type&&e.getById&&9===l.nodeType&&g&&t.relative[s[1].type]){if(!(l=(t.find.ID(c.matches[0].replace(ln,en),l)||[])[0]))return u;f&&(l=l.parentNode),n=n.slice(s.shift().value.length)}for(a=X.needsContext.test(n)?0:s.length;a--&&(c=s[a],!t.relative[h=c.type]);)if((d=t.find[h])&&(r=d(c.matches[0].replace(ln,en),J.test(s[0].type)&&pn(l.parentNode)||l))){if(s.splice(a,1),!(n=r.length&&vn(s)))return P.apply(u,r),u;break}}return(f||o(n,p))(r,l,!g,u,!l||J.test(n)&&pn(l.parentNode)||l),u},e.sortStable=w.split("").sort(S).join("")===w,e.detectDuplicates=!!h,d(),e.sortDetached=an(function(n){return 1&n.compareDocumentPosition(f.createElement("div"))}),an(function(n){return n.innerHTML="<a href='#'></a>","#"===n.firstChild.getAttribute("href")})||sn("type|href|height|width",function(n,l,e){if(!e)return n.getAttribute(l,"type"===l.toLowerCase()?1:2)}),e.attributes&&an(function(n){return n.innerHTML="<input/>",n.firstChild.setAttribute("value",""),""===n.firstChild.getAttribute("value")})||sn("value",function(n,l,e){if(!e&&"input"===n.nodeName.toLowerCase())return n.defaultValue}),an(function(n){return null==n.getAttribute("disabled")})||sn(R,function(n,l,e){var t;if(!e)return!0===n[l]?l.toLowerCase():(t=n.getAttributeNode(l))&&t.specified?t.value:null}),un}(e);g.find=_,g.expr=_.selectors,g.expr[":"]=g.expr.pseudos,g.uniqueSort=g.unique=_.uniqueSort,g.text=_.getText,g.isXMLDoc=_.isXML,g.contains=_.contains;var x=function(n,l,e){for(var t=[],u=void 0!==e;(n=n[l])&&9!==n.nodeType;)if(1===n.nodeType){if(u&&g(n).is(e))break;t.push(n)}return t},E=function(n,l){for(var e=[];n;n=n.nextSibling)1===n.nodeType&&n!==l&&e.push(n);return e},T=g.expr.match.needsContext,k=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,C=/^.[^:#\[\.,]*$/;function S(n,l,e){if(g.isFunction(l))return g.grep(n,function(n,t){return!!l.call(n,t,n)!==e});if(l.nodeType)return g.grep(n,function(n){return n===l!==e});if("string"==typeof l){if(C.test(l))return g.filter(l,n,e);l=g.filter(l,n)}return g.grep(n,function(n){return c.call(l,n)>-1!==e})}g.filter=function(n,l,e){var t=l[0];return e&&(n=":not("+n+")"),1===l.length&&1===t.nodeType?g.find.matchesSelector(t,n)?[t]:[]:g.find.matches(n,g.grep(l,function(n){return 1===n.nodeType}))},g.fn.extend({find:function(n){var l,e=this.length,t=[],u=this;if("string"!=typeof n)return this.pushStack(g(n).filter(function(){for(l=0;l<e;l++)if(g.contains(u[l],this))return!0}));for(l=0;l<e;l++)g.find(n,u[l],t);return(t=this.pushStack(e>1?g.unique(t):t)).selector=this.selector?this.selector+" "+n:n,t},filter:function(n){return this.pushStack(S(this,n||[],!1))},not:function(n){return this.pushStack(S(this,n||[],!0))},is:function(n){return!!S(this,"string"==typeof n&&T.test(n)?g(n):n||[],!1).length}});var I,N=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;(g.fn.init=function(n,l,e){var t,u;if(!n)return this;if(e=e||I,"string"==typeof n){if(!(t="<"===n[0]&&">"===n[n.length-1]&&n.length>=3?[null,n,null]:N.exec(n))||!t[1]&&l)return!l||l.jquery?(l||e).find(n):this.constructor(l).find(n);if(t[1]){if(l=l instanceof g?l[0]:l,g.merge(this,g.parseHTML(t[1],l&&l.nodeType?l.ownerDocument||l:i,!0)),k.test(t[1])&&g.isPlainObject(l))for(t in l)g.isFunction(this[t])?this[t](l[t]):this.attr(t,l[t]);return this}return(u=i.getElementById(t[2]))&&u.parentNode&&(this.length=1,this[0]=u),this.context=i,this.selector=n,this}return n.nodeType?(this.context=this[0]=n,this.length=1,this):g.isFunction(n)?void 0!==e.ready?e.ready(n):n(g):(void 0!==n.selector&&(this.selector=n.selector,this.context=n.context),g.makeArray(n,this))}).prototype=g.fn,I=g(i);var D=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};function A(n,l){for(;(n=n[l])&&1!==n.nodeType;);return n}g.fn.extend({has:function(n){var l=g(n,this),e=l.length;return this.filter(function(){for(var n=0;n<e;n++)if(g.contains(this,l[n]))return!0})},closest:function(n,l){for(var e,t=0,u=this.length,r=[],i=T.test(n)||"string"!=typeof n?g(n,l||this.context):0;t<u;t++)for(e=this[t];e&&e!==l;e=e.parentNode)if(e.nodeType<11&&(i?i.index(e)>-1:1===e.nodeType&&g.find.matchesSelector(e,n))){r.push(e);break}return this.pushStack(r.length>1?g.uniqueSort(r):r)},index:function(n){return n?"string"==typeof n?c.call(g(n),this[0]):c.call(this,n.jquery?n[0]:n):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(n,l){return this.pushStack(g.uniqueSort(g.merge(this.get(),g(n,l))))},addBack:function(n){return this.add(null==n?this.prevObject:this.prevObject.filter(n))}}),g.each({parent:function(n){var l=n.parentNode;return l&&11!==l.nodeType?l:null},parents:function(n){return x(n,"parentNode")},parentsUntil:function(n,l,e){return x(n,"parentNode",e)},next:function(n){return A(n,"nextSibling")},prev:function(n){return A(n,"previousSibling")},nextAll:function(n){return x(n,"nextSibling")},prevAll:function(n){return x(n,"previousSibling")},nextUntil:function(n,l,e){return x(n,"nextSibling",e)},prevUntil:function(n,l,e){return x(n,"previousSibling",e)},siblings:function(n){return E((n.parentNode||{}).firstChild,n)},children:function(n){return E(n.firstChild)},contents:function(n){return n.contentDocument||g.merge([],n.childNodes)}},function(n,l){g.fn[n]=function(e,t){var u=g.map(this,l,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(u=g.filter(t,u)),this.length>1&&(O[n]||g.uniqueSort(u),D.test(n)&&u.reverse()),this.pushStack(u)}});var P,M=/\S+/g;function L(){i.removeEventListener("DOMContentLoaded",L),e.removeEventListener("load",L),g.ready()}g.Callbacks=function(n){n="string"==typeof n?function(n){var l={};return g.each(n.match(M)||[],function(n,e){l[e]=!0}),l}(n):g.extend({},n);var l,e,t,u,r=[],i=[],o=-1,a=function(){for(u=n.once,t=l=!0;i.length;o=-1)for(e=i.shift();++o<r.length;)!1===r[o].apply(e[0],e[1])&&n.stopOnFalse&&(o=r.length,e=!1);n.memory||(e=!1),l=!1,u&&(r=e?[]:"")},s={add:function(){return r&&(e&&!l&&(o=r.length-1,i.push(e)),function l(e){g.each(e,function(e,t){g.isFunction(t)?n.unique&&s.has(t)||r.push(t):t&&t.length&&"string"!==g.type(t)&&l(t)})}(arguments),e&&!l&&a()),this},remove:function(){return g.each(arguments,function(n,l){for(var e;(e=g.inArray(l,r,e))>-1;)r.splice(e,1),e<=o&&o--}),this},has:function(n){return n?g.inArray(n,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return u=i=[],r=e="",this},disabled:function(){return!r},lock:function(){return u=i=[],e||(r=e=""),this},locked:function(){return!!u},fireWith:function(n,e){return u||(e=[n,(e=e||[]).slice?e.slice():e],i.push(e),l||a()),this},fire:function(){return s.fireWith(this,arguments),this},fired:function(){return!!t}};return s},g.extend({Deferred:function(n){var l=[["resolve","done",g.Callbacks("once memory"),"resolved"],["reject","fail",g.Callbacks("once memory"),"rejected"],["notify","progress",g.Callbacks("memory")]],e="pending",t={state:function(){return e},always:function(){return u.done(arguments).fail(arguments),this},then:function(){var n=arguments;return g.Deferred(function(e){g.each(l,function(l,r){var i=g.isFunction(n[l])&&n[l];u[r[1]](function(){var n=i&&i.apply(this,arguments);n&&g.isFunction(n.promise)?n.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[r[0]+"With"](this===t?e.promise():this,i?[n]:arguments)})}),n=null}).promise()},promise:function(n){return null!=n?g.extend(n,t):t}},u={};return t.pipe=t.then,g.each(l,function(n,r){var i=r[2],o=r[3];t[r[1]]=i.add,o&&i.add(function(){e=o},l[1^n][2].disable,l[2][2].lock),u[r[0]]=function(){return u[r[0]+"With"](this===u?t:this,arguments),this},u[r[0]+"With"]=i.fireWith}),t.promise(u),n&&n.call(u,u),u},when:function(n){var l,e,t,u=0,r=o.call(arguments),i=r.length,a=1!==i||n&&g.isFunction(n.promise)?i:0,s=1===a?n:g.Deferred(),c=function(n,e,t){return function(u){e[n]=this,t[n]=arguments.length>1?o.call(arguments):u,t===l?s.notifyWith(e,t):--a||s.resolveWith(e,t)}};if(i>1)for(l=new Array(i),e=new Array(i),t=new Array(i);u<i;u++)r[u]&&g.isFunction(r[u].promise)?r[u].promise().progress(c(u,e,l)).done(c(u,t,r)).fail(s.reject):--a;return a||s.resolveWith(t,r),s.promise()}}),g.fn.ready=function(n){return g.ready.promise().done(n),this},g.extend({isReady:!1,readyWait:1,holdReady:function(n){n?g.readyWait++:g.ready(!0)},ready:function(n){(!0===n?--g.readyWait:g.isReady)||(g.isReady=!0,!0!==n&&--g.readyWait>0||(P.resolveWith(i,[g]),g.fn.triggerHandler&&(g(i).triggerHandler("ready"),g(i).off("ready"))))}}),g.ready.promise=function(n){return P||(P=g.Deferred(),"complete"===i.readyState||"loading"!==i.readyState&&!i.documentElement.doScroll?e.setTimeout(g.ready):(i.addEventListener("DOMContentLoaded",L),e.addEventListener("load",L))),P.promise(n)},g.ready.promise();var R=function(n,l,e,t,u,r,i){var o=0,a=n.length,s=null==e;if("object"===g.type(e))for(o in u=!0,e)R(n,l,o,e[o],!0,r,i);else if(void 0!==t&&(u=!0,g.isFunction(t)||(i=!0),s&&(i?(l.call(n,t),l=null):(s=l,l=function(n,l,e){return s.call(g(n),e)})),l))for(;o<a;o++)l(n[o],e,i?t:t.call(n[o],o,l(n[o],e)));return u?n:s?l.call(n):a?l(n[0],e):r},F=function(n){return 1===n.nodeType||9===n.nodeType||!+n.nodeType};function B(){this.expando=g.expando+B.uid++}B.uid=1,B.prototype={register:function(n,l){var e=l||{};return n.nodeType?n[this.expando]=e:Object.defineProperty(n,this.expando,{value:e,writable:!0,configurable:!0}),n[this.expando]},cache:function(n){if(!F(n))return{};var l=n[this.expando];return l||(l={},F(n)&&(n.nodeType?n[this.expando]=l:Object.defineProperty(n,this.expando,{value:l,configurable:!0}))),l},set:function(n,l,e){var t,u=this.cache(n);if("string"==typeof l)u[l]=e;else for(t in l)u[t]=l[t];return u},get:function(n,l){return void 0===l?this.cache(n):n[this.expando]&&n[this.expando][l]},access:function(n,l,e){var t;return void 0===l||l&&"string"==typeof l&&void 0===e?void 0!==(t=this.get(n,l))?t:this.get(n,g.camelCase(l)):(this.set(n,l,e),void 0!==e?e:l)},remove:function(n,l){var e,t,u,r=n[this.expando];if(void 0!==r){if(void 0===l)this.register(n);else{g.isArray(l)?t=l.concat(l.map(g.camelCase)):(u=g.camelCase(l),t=l in r?[l,u]:(t=u)in r?[t]:t.match(M)||[]),e=t.length;for(;e--;)delete r[t[e]]}(void 0===l||g.isEmptyObject(r))&&(n.nodeType?n[this.expando]=void 0:delete n[this.expando])}},hasData:function(n){var l=n[this.expando];return void 0!==l&&!g.isEmptyObject(l)}};var j=new B,U=new B,z=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,q=/[A-Z]/g;function V(n,l,e){var t;if(void 0===e&&1===n.nodeType)if(t="data-"+l.replace(q,"-$&").toLowerCase(),"string"==typeof(e=n.getAttribute(t))){try{e="true"===e||"false"!==e&&("null"===e?null:+e+""===e?+e:z.test(e)?g.parseJSON(e):e)}catch(n){}U.set(n,l,e)}else e=void 0;return e}g.extend({hasData:function(n){return U.hasData(n)||j.hasData(n)},data:function(n,l,e){return U.access(n,l,e)},removeData:function(n,l){U.remove(n,l)},_data:function(n,l,e){return j.access(n,l,e)},_removeData:function(n,l){j.remove(n,l)}}),g.fn.extend({data:function(n,l){var e,t,u,r=this[0],i=r&&r.attributes;if(void 0===n){if(this.length&&(u=U.get(r),1===r.nodeType&&!j.get(r,"hasDataAttrs"))){for(e=i.length;e--;)i[e]&&0===(t=i[e].name).indexOf("data-")&&(t=g.camelCase(t.slice(5)),V(r,t,u[t]));j.set(r,"hasDataAttrs",!0)}return u}return"object"==typeof n?this.each(function(){U.set(this,n)}):R(this,function(l){var e,t;if(r&&void 0===l)return void 0!==(e=U.get(r,n)||U.get(r,n.replace(q,"-$&").toLowerCase()))?e:(t=g.camelCase(n),void 0!==(e=U.get(r,t))?e:void 0!==(e=V(r,t,void 0))?e:void 0);t=g.camelCase(n),this.each(function(){var e=U.get(this,t);U.set(this,t,l),n.indexOf("-")>-1&&void 0!==e&&U.set(this,n,l)})},null,l,arguments.length>1,null,!0)},removeData:function(n){return this.each(function(){U.remove(this,n)})}}),g.extend({queue:function(n,l,e){var t;if(n)return l=(l||"fx")+"queue",t=j.get(n,l),e&&(!t||g.isArray(e)?t=j.access(n,l,g.makeArray(e)):t.push(e)),t||[]},dequeue:function(n,l){l=l||"fx";var e=g.queue(n,l),t=e.length,u=e.shift(),r=g._queueHooks(n,l);"inprogress"===u&&(u=e.shift(),t--),u&&("fx"===l&&e.unshift("inprogress"),delete r.stop,u.call(n,function(){g.dequeue(n,l)},r)),!t&&r&&r.empty.fire()},_queueHooks:function(n,l){var e=l+"queueHooks";return j.get(n,e)||j.access(n,e,{empty:g.Callbacks("once memory").add(function(){j.remove(n,[l+"queue",e])})})}}),g.fn.extend({queue:function(n,l){var e=2;return"string"!=typeof n&&(l=n,n="fx",e--),arguments.length<e?g.queue(this[0],n):void 0===l?this:this.each(function(){var e=g.queue(this,n,l);g._queueHooks(this,n),"fx"===n&&"inprogress"!==e[0]&&g.dequeue(this,n)})},dequeue:function(n){return this.each(function(){g.dequeue(this,n)})},clearQueue:function(n){return this.queue(n||"fx",[])},promise:function(n,l){var e,t=1,u=g.Deferred(),r=this,i=this.length,o=function(){--t||u.resolveWith(r,[r])};for("string"!=typeof n&&(l=n,n=void 0),n=n||"fx";i--;)(e=j.get(r[i],n+"queueHooks"))&&e.empty&&(t++,e.empty.add(o));return o(),u.promise(l)}});var H=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,G=new RegExp("^(?:([+-])=|)("+H+")([a-z%]*)$","i"),Y=["Top","Right","Bottom","Left"],W=function(n,l){return n=l||n,"none"===g.css(n,"display")||!g.contains(n.ownerDocument,n)};function X(n,l,e,t){var u,r=1,i=20,o=t?function(){return t.cur()}:function(){return g.css(n,l,"")},a=o(),s=e&&e[3]||(g.cssNumber[l]?"":"px"),c=(g.cssNumber[l]||"px"!==s&&+a)&&G.exec(g.css(n,l));if(c&&c[3]!==s){s=s||c[3],e=e||[],c=+a||1;do{c/=r=r||".5",g.style(n,l,c+s)}while(r!==(r=o()/a)&&1!==r&&--i)}return e&&(c=+c||+a||0,u=e[1]?c+(e[1]+1)*e[2]:+e[2],t&&(t.unit=s,t.start=c,t.end=u)),u}var K=/^(?:checkbox|radio)$/i,$=/<([\w:-]+)/,Z=/^$|\/(?:java|ecma)script/i,Q={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function J(n,l){var e=void 0!==n.getElementsByTagName?n.getElementsByTagName(l||"*"):void 0!==n.querySelectorAll?n.querySelectorAll(l||"*"):[];return void 0===l||l&&g.nodeName(n,l)?g.merge([n],e):e}function nn(n,l){for(var e=0,t=n.length;e<t;e++)j.set(n[e],"globalEval",!l||j.get(l[e],"globalEval"))}Q.optgroup=Q.option,Q.tbody=Q.tfoot=Q.colgroup=Q.caption=Q.thead,Q.th=Q.td;var ln,en,tn=/<|&#?\w+;/;function un(n,l,e,t,u){for(var r,i,o,a,s,c,h=l.createDocumentFragment(),d=[],f=0,p=n.length;f<p;f++)if((r=n[f])||0===r)if("object"===g.type(r))g.merge(d,r.nodeType?[r]:r);else if(tn.test(r)){for(i=i||h.appendChild(l.createElement("div")),o=($.exec(r)||["",""])[1].toLowerCase(),a=Q[o]||Q._default,i.innerHTML=a[1]+g.htmlPrefilter(r)+a[2],c=a[0];c--;)i=i.lastChild;g.merge(d,i.childNodes),(i=h.firstChild).textContent=""}else d.push(l.createTextNode(r));for(h.textContent="",f=0;r=d[f++];)if(t&&g.inArray(r,t)>-1)u&&u.push(r);else if(s=g.contains(r.ownerDocument,r),i=J(h.appendChild(r),"script"),s&&nn(i),e)for(c=0;r=i[c++];)Z.test(r.type||"")&&e.push(r);return h}ln=i.createDocumentFragment().appendChild(i.createElement("div")),(en=i.createElement("input")).setAttribute("type","radio"),en.setAttribute("checked","checked"),en.setAttribute("name","t"),ln.appendChild(en),p.checkClone=ln.cloneNode(!0).cloneNode(!0).lastChild.checked,ln.innerHTML="<textarea>x</textarea>",p.noCloneChecked=!!ln.cloneNode(!0).lastChild.defaultValue;var rn=/^key/,on=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,an=/^([^.]*)(?:\.(.+)|)/;function sn(){return!0}function cn(){return!1}function hn(){try{return i.activeElement}catch(n){}}function dn(n,l,e,t,u,r){var i,o;if("object"==typeof l){for(o in"string"!=typeof e&&(t=t||e,e=void 0),l)dn(n,o,e,t,l[o],r);return n}if(null==t&&null==u?(u=e,t=e=void 0):null==u&&("string"==typeof e?(u=t,t=void 0):(u=t,t=e,e=void 0)),!1===u)u=cn;else if(!u)return n;return 1===r&&(i=u,(u=function(n){return g().off(n),i.apply(this,arguments)}).guid=i.guid||(i.guid=g.guid++)),n.each(function(){g.event.add(this,l,u,t,e)})}g.event={global:{},add:function(n,l,e,t,u){var r,i,o,a,s,c,h,d,f,p,v,y=j.get(n);if(y)for(e.handler&&(e=(r=e).handler,u=r.selector),e.guid||(e.guid=g.guid++),(a=y.events)||(a=y.events={}),(i=y.handle)||(i=y.handle=function(l){return void 0!==g&&g.event.triggered!==l.type?g.event.dispatch.apply(n,arguments):void 0}),s=(l=(l||"").match(M)||[""]).length;s--;)f=v=(o=an.exec(l[s])||[])[1],p=(o[2]||"").split(".").sort(),f&&(h=g.event.special[f]||{},f=(u?h.delegateType:h.bindType)||f,h=g.event.special[f]||{},c=g.extend({type:f,origType:v,data:t,handler:e,guid:e.guid,selector:u,needsContext:u&&g.expr.match.needsContext.test(u),namespace:p.join(".")},r),(d=a[f])||((d=a[f]=[]).delegateCount=0,h.setup&&!1!==h.setup.call(n,t,p,i)||n.addEventListener&&n.addEventListener(f,i)),h.add&&(h.add.call(n,c),c.handler.guid||(c.handler.guid=e.guid)),u?d.splice(d.delegateCount++,0,c):d.push(c),g.event.global[f]=!0)},remove:function(n,l,e,t,u){var r,i,o,a,s,c,h,d,f,p,v,y=j.hasData(n)&&j.get(n);if(y&&(a=y.events)){for(s=(l=(l||"").match(M)||[""]).length;s--;)if(f=v=(o=an.exec(l[s])||[])[1],p=(o[2]||"").split(".").sort(),f){for(h=g.event.special[f]||{},d=a[f=(t?h.delegateType:h.bindType)||f]||[],o=o[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=r=d.length;r--;)c=d[r],!u&&v!==c.origType||e&&e.guid!==c.guid||o&&!o.test(c.namespace)||t&&t!==c.selector&&("**"!==t||!c.selector)||(d.splice(r,1),c.selector&&d.delegateCount--,h.remove&&h.remove.call(n,c));i&&!d.length&&(h.teardown&&!1!==h.teardown.call(n,p,y.handle)||g.removeEvent(n,f,y.handle),delete a[f])}else for(f in a)g.event.remove(n,f+l[s],e,t,!0);g.isEmptyObject(a)&&j.remove(n,"handle events")}},dispatch:function(n){n=g.event.fix(n);var l,e,t,u,r,i,a=o.call(arguments),s=(j.get(this,"events")||{})[n.type]||[],c=g.event.special[n.type]||{};if(a[0]=n,n.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,n)){for(i=g.event.handlers.call(this,n,s),l=0;(u=i[l++])&&!n.isPropagationStopped();)for(n.currentTarget=u.elem,e=0;(r=u.handlers[e++])&&!n.isImmediatePropagationStopped();)n.rnamespace&&!n.rnamespace.test(r.namespace)||(n.handleObj=r,n.data=r.data,void 0!==(t=((g.event.special[r.origType]||{}).handle||r.handler).apply(u.elem,a))&&!1===(n.result=t)&&(n.preventDefault(),n.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,n),n.result}},handlers:function(n,l){var e,t,u,r,i=[],o=l.delegateCount,a=n.target;if(o&&a.nodeType&&("click"!==n.type||isNaN(n.button)||n.button<1))for(;a!==this;a=a.parentNode||this)if(1===a.nodeType&&(!0!==a.disabled||"click"!==n.type)){for(t=[],e=0;e<o;e++)void 0===t[u=(r=l[e]).selector+" "]&&(t[u]=r.needsContext?g(u,this).index(a)>-1:g.find(u,this,null,[a]).length),t[u]&&t.push(r);t.length&&i.push({elem:a,handlers:t})}return o<l.length&&i.push({elem:this,handlers:l.slice(o)}),i},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(n,l){return null==n.which&&(n.which=null!=l.charCode?l.charCode:l.keyCode),n}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(n,l){var e,t,u,r=l.button;return null==n.pageX&&null!=l.clientX&&(t=(e=n.target.ownerDocument||i).documentElement,u=e.body,n.pageX=l.clientX+(t&&t.scrollLeft||u&&u.scrollLeft||0)-(t&&t.clientLeft||u&&u.clientLeft||0),n.pageY=l.clientY+(t&&t.scrollTop||u&&u.scrollTop||0)-(t&&t.clientTop||u&&u.clientTop||0)),n.which||void 0===r||(n.which=1&r?1:2&r?3:4&r?2:0),n}},fix:function(n){if(n[g.expando])return n;var l,e,t,u=n.type,r=n,o=this.fixHooks[u];for(o||(this.fixHooks[u]=o=on.test(u)?this.mouseHooks:rn.test(u)?this.keyHooks:{}),t=o.props?this.props.concat(o.props):this.props,n=new g.Event(r),l=t.length;l--;)n[e=t[l]]=r[e];return n.target||(n.target=i),3===n.target.nodeType&&(n.target=n.target.parentNode),o.filter?o.filter(n,r):n},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==hn()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===hn()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&g.nodeName(this,"input"))return this.click(),!1},_default:function(n){return g.nodeName(n.target,"a")}},beforeunload:{postDispatch:function(n){void 0!==n.result&&n.originalEvent&&(n.originalEvent.returnValue=n.result)}}}},g.removeEvent=function(n,l,e){n.removeEventListener&&n.removeEventListener(l,e)},g.Event=function(n,l){if(!(this instanceof g.Event))return new g.Event(n,l);n&&n.type?(this.originalEvent=n,this.type=n.type,this.isDefaultPrevented=n.defaultPrevented||void 0===n.defaultPrevented&&!1===n.returnValue?sn:cn):this.type=n,l&&g.extend(this,l),this.timeStamp=n&&n.timeStamp||g.now(),this[g.expando]=!0},g.Event.prototype={constructor:g.Event,isDefaultPrevented:cn,isPropagationStopped:cn,isImmediatePropagationStopped:cn,isSimulated:!1,preventDefault:function(){var n=this.originalEvent;this.isDefaultPrevented=sn,n&&!this.isSimulated&&n.preventDefault()},stopPropagation:function(){var n=this.originalEvent;this.isPropagationStopped=sn,n&&!this.isSimulated&&n.stopPropagation()},stopImmediatePropagation:function(){var n=this.originalEvent;this.isImmediatePropagationStopped=sn,n&&!this.isSimulated&&n.stopImmediatePropagation(),this.stopPropagation()}},g.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(n,l){g.event.special[n]={delegateType:l,bindType:l,handle:function(n){var e,t=n.relatedTarget,u=n.handleObj;return t&&(t===this||g.contains(this,t))||(n.type=u.origType,e=u.handler.apply(this,arguments),n.type=l),e}}}),g.fn.extend({on:function(n,l,e,t){return dn(this,n,l,e,t)},one:function(n,l,e,t){return dn(this,n,l,e,t,1)},off:function(n,l,e){var t,u;if(n&&n.preventDefault&&n.handleObj)return t=n.handleObj,g(n.delegateTarget).off(t.namespace?t.origType+"."+t.namespace:t.origType,t.selector,t.handler),this;if("object"==typeof n){for(u in n)this.off(u,l,n[u]);return this}return!1!==l&&"function"!=typeof l||(e=l,l=void 0),!1===e&&(e=cn),this.each(function(){g.event.remove(this,n,e,l)})}});var fn=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,pn=/<script|<style|<link/i,gn=/checked\s*(?:[^=]|=\s*.checked.)/i,vn=/^true\/(.*)/,yn=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function mn(n,l){return g.nodeName(n,"table")&&g.nodeName(11!==l.nodeType?l:l.firstChild,"tr")?n.getElementsByTagName("tbody")[0]||n.appendChild(n.ownerDocument.createElement("tbody")):n}function bn(n){return n.type=(null!==n.getAttribute("type"))+"/"+n.type,n}function wn(n){var l=vn.exec(n.type);return l?n.type=l[1]:n.removeAttribute("type"),n}function _n(n,l){var e,t,u,r,i,o,a,s;if(1===l.nodeType){if(j.hasData(n)&&(r=j.access(n),i=j.set(l,r),s=r.events))for(u in delete i.handle,i.events={},s)for(e=0,t=s[u].length;e<t;e++)g.event.add(l,u,s[u][e]);U.hasData(n)&&(o=U.access(n),a=g.extend({},o),U.set(l,a))}}function xn(n,l,e,t){l=a.apply([],l);var u,r,i,o,s,c,h=0,d=n.length,f=d-1,v=l[0],y=g.isFunction(v);if(y||d>1&&"string"==typeof v&&!p.checkClone&&gn.test(v))return n.each(function(u){var r=n.eq(u);y&&(l[0]=v.call(this,u,r.html())),xn(r,l,e,t)});if(d&&(r=(u=un(l,n[0].ownerDocument,!1,n,t)).firstChild,1===u.childNodes.length&&(u=r),r||t)){for(o=(i=g.map(J(u,"script"),bn)).length;h<d;h++)s=u,h!==f&&(s=g.clone(s,!0,!0),o&&g.merge(i,J(s,"script"))),e.call(n[h],s,h);if(o)for(c=i[i.length-1].ownerDocument,g.map(i,wn),h=0;h<o;h++)s=i[h],Z.test(s.type||"")&&!j.access(s,"globalEval")&&g.contains(c,s)&&(s.src?g._evalUrl&&g._evalUrl(s.src):g.globalEval(s.textContent.replace(yn,"")))}return n}function En(n,l,e){for(var t,u=l?g.filter(l,n):n,r=0;null!=(t=u[r]);r++)e||1!==t.nodeType||g.cleanData(J(t)),t.parentNode&&(e&&g.contains(t.ownerDocument,t)&&nn(J(t,"script")),t.parentNode.removeChild(t));return n}g.extend({htmlPrefilter:function(n){return n.replace(fn,"<$1></$2>")},clone:function(n,l,e){var t,u,r,i,o,a,s,c=n.cloneNode(!0),h=g.contains(n.ownerDocument,n);if(!(p.noCloneChecked||1!==n.nodeType&&11!==n.nodeType||g.isXMLDoc(n)))for(i=J(c),t=0,u=(r=J(n)).length;t<u;t++)o=r[t],a=i[t],s=void 0,"input"===(s=a.nodeName.toLowerCase())&&K.test(o.type)?a.checked=o.checked:"input"!==s&&"textarea"!==s||(a.defaultValue=o.defaultValue);if(l)if(e)for(r=r||J(n),i=i||J(c),t=0,u=r.length;t<u;t++)_n(r[t],i[t]);else _n(n,c);return(i=J(c,"script")).length>0&&nn(i,!h&&J(n,"script")),c},cleanData:function(n){for(var l,e,t,u=g.event.special,r=0;void 0!==(e=n[r]);r++)if(F(e)){if(l=e[j.expando]){if(l.events)for(t in l.events)u[t]?g.event.remove(e,t):g.removeEvent(e,t,l.handle);e[j.expando]=void 0}e[U.expando]&&(e[U.expando]=void 0)}}}),g.fn.extend({domManip:xn,detach:function(n){return En(this,n,!0)},remove:function(n){return En(this,n)},text:function(n){return R(this,function(n){return void 0===n?g.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=n)})},null,n,arguments.length)},append:function(){return xn(this,arguments,function(n){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||mn(this,n).appendChild(n)})},prepend:function(){return xn(this,arguments,function(n){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var l=mn(this,n);l.insertBefore(n,l.firstChild)}})},before:function(){return xn(this,arguments,function(n){this.parentNode&&this.parentNode.insertBefore(n,this)})},after:function(){return xn(this,arguments,function(n){this.parentNode&&this.parentNode.insertBefore(n,this.nextSibling)})},empty:function(){for(var n,l=0;null!=(n=this[l]);l++)1===n.nodeType&&(g.cleanData(J(n,!1)),n.textContent="");return this},clone:function(n,l){return n=null!=n&&n,l=null==l?n:l,this.map(function(){return g.clone(this,n,l)})},html:function(n){return R(this,function(n){var l=this[0]||{},e=0,t=this.length;if(void 0===n&&1===l.nodeType)return l.innerHTML;if("string"==typeof n&&!pn.test(n)&&!Q[($.exec(n)||["",""])[1].toLowerCase()]){n=g.htmlPrefilter(n);try{for(;e<t;e++)1===(l=this[e]||{}).nodeType&&(g.cleanData(J(l,!1)),l.innerHTML=n);l=0}catch(n){}}l&&this.empty().append(n)},null,n,arguments.length)},replaceWith:function(){var n=[];return xn(this,arguments,function(l){var e=this.parentNode;g.inArray(this,n)<0&&(g.cleanData(J(this)),e&&e.replaceChild(l,this))},n)}}),g.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(n,l){g.fn[n]=function(n){for(var e,t=[],u=g(n),r=u.length-1,i=0;i<=r;i++)e=i===r?this:this.clone(!0),g(u[i])[l](e),s.apply(t,e.get());return this.pushStack(t)}});var Tn,kn={HTML:"block",BODY:"block"};function Cn(n,l){var e=g(l.createElement(n)).appendTo(l.body),t=g.css(e[0],"display");return e.detach(),t}function Sn(n){var l=i,e=kn[n];return e||("none"!==(e=Cn(n,l))&&e||((l=(Tn=(Tn||g("<iframe frameborder='0' width='0' height='0'/>")).appendTo(l.documentElement))[0].contentDocument).write(),l.close(),e=Cn(n,l),Tn.detach()),kn[n]=e),e}var In=/^margin/,Nn=new RegExp("^("+H+")(?!px)[a-z%]+$","i"),Dn=function(n){var l=n.ownerDocument.defaultView;return l&&l.opener||(l=e),l.getComputedStyle(n)},On=function(n,l,e,t){var u,r,i={};for(r in l)i[r]=n.style[r],n.style[r]=l[r];for(r in u=e.apply(n,t||[]),l)n.style[r]=i[r];return u},An=i.documentElement;function Pn(n,l,e){var t,u,r,i,o=n.style;return""!==(i=(e=e||Dn(n))?e.getPropertyValue(l)||e[l]:void 0)&&void 0!==i||g.contains(n.ownerDocument,n)||(i=g.style(n,l)),e&&!p.pixelMarginRight()&&Nn.test(i)&&In.test(l)&&(t=o.width,u=o.minWidth,r=o.maxWidth,o.minWidth=o.maxWidth=o.width=i,i=e.width,o.width=t,o.minWidth=u,o.maxWidth=r),void 0!==i?i+"":i}function Mn(n,l){return{get:function(){if(!n())return(this.get=l).apply(this,arguments);delete this.get}}}!function(){var n,l,t,u,r=i.createElement("div"),o=i.createElement("div");function a(){o.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",o.innerHTML="",An.appendChild(r);var i=e.getComputedStyle(o);n="1%"!==i.top,u="2px"===i.marginLeft,l="4px"===i.width,o.style.marginRight="50%",t="4px"===i.marginRight,An.removeChild(r)}o.style&&(o.style.backgroundClip="content-box",o.cloneNode(!0).style.backgroundClip="",p.clearCloneStyle="content-box"===o.style.backgroundClip,r.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",r.appendChild(o),g.extend(p,{pixelPosition:function(){return a(),n},boxSizingReliable:function(){return null==l&&a(),l},pixelMarginRight:function(){return null==l&&a(),t},reliableMarginLeft:function(){return null==l&&a(),u},reliableMarginRight:function(){var n,l=o.appendChild(i.createElement("div"));return l.style.cssText=o.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",l.style.marginRight=l.style.width="0",o.style.width="1px",An.appendChild(r),n=!parseFloat(e.getComputedStyle(l).marginRight),An.removeChild(r),o.removeChild(l),n}}))}();var Ln=/^(none|table(?!-c[ea]).+)/,Rn={position:"absolute",visibility:"hidden",display:"block"},Fn={letterSpacing:"0",fontWeight:"400"},Bn=["Webkit","O","Moz","ms"],jn=i.createElement("div").style;function Un(n){if(n in jn)return n;for(var l=n[0].toUpperCase()+n.slice(1),e=Bn.length;e--;)if((n=Bn[e]+l)in jn)return n}function zn(n,l,e){var t=G.exec(l);return t?Math.max(0,t[2]-(e||0))+(t[3]||"px"):l}function qn(n,l,e,t,u){for(var r=e===(t?"border":"content")?4:"width"===l?1:0,i=0;r<4;r+=2)"margin"===e&&(i+=g.css(n,e+Y[r],!0,u)),t?("content"===e&&(i-=g.css(n,"padding"+Y[r],!0,u)),"margin"!==e&&(i-=g.css(n,"border"+Y[r]+"Width",!0,u))):(i+=g.css(n,"padding"+Y[r],!0,u),"padding"!==e&&(i+=g.css(n,"border"+Y[r]+"Width",!0,u)));return i}function Vn(n,l,e){var t=!0,u="width"===l?n.offsetWidth:n.offsetHeight,r=Dn(n),i="border-box"===g.css(n,"boxSizing",!1,r);if(u<=0||null==u){if(((u=Pn(n,l,r))<0||null==u)&&(u=n.style[l]),Nn.test(u))return u;t=i&&(p.boxSizingReliable()||u===n.style[l]),u=parseFloat(u)||0}return u+qn(n,l,e||(i?"border":"content"),t,r)+"px"}function Hn(n,l){for(var e,t,u,r=[],i=0,o=n.length;i<o;i++)(t=n[i]).style&&(r[i]=j.get(t,"olddisplay"),e=t.style.display,l?(r[i]||"none"!==e||(t.style.display=""),""===t.style.display&&W(t)&&(r[i]=j.access(t,"olddisplay",Sn(t.nodeName)))):(u=W(t),"none"===e&&u||j.set(t,"olddisplay",u?e:g.css(t,"display"))));for(i=0;i<o;i++)(t=n[i]).style&&(l&&"none"!==t.style.display&&""!==t.style.display||(t.style.display=l?r[i]||"":"none"));return n}function Gn(n,l,e,t,u){return new Gn.prototype.init(n,l,e,t,u)}g.extend({cssHooks:{opacity:{get:function(n,l){if(l){var e=Pn(n,"opacity");return""===e?"1":e}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(n,l,e,t){if(n&&3!==n.nodeType&&8!==n.nodeType&&n.style){var u,r,i,o=g.camelCase(l),a=n.style;if(l=g.cssProps[o]||(g.cssProps[o]=Un(o)||o),i=g.cssHooks[l]||g.cssHooks[o],void 0===e)return i&&"get"in i&&void 0!==(u=i.get(n,!1,t))?u:a[l];"string"===(r=typeof e)&&(u=G.exec(e))&&u[1]&&(e=X(n,l,u),r="number"),null!=e&&e==e&&("number"===r&&(e+=u&&u[3]||(g.cssNumber[o]?"":"px")),p.clearCloneStyle||""!==e||0!==l.indexOf("background")||(a[l]="inherit"),i&&"set"in i&&void 0===(e=i.set(n,e,t))||(a[l]=e))}},css:function(n,l,e,t){var u,r,i,o=g.camelCase(l);return l=g.cssProps[o]||(g.cssProps[o]=Un(o)||o),(i=g.cssHooks[l]||g.cssHooks[o])&&"get"in i&&(u=i.get(n,!0,e)),void 0===u&&(u=Pn(n,l,t)),"normal"===u&&l in Fn&&(u=Fn[l]),""===e||e?(r=parseFloat(u),!0===e||isFinite(r)?r||0:u):u}}),g.each(["height","width"],function(n,l){g.cssHooks[l]={get:function(n,e,t){if(e)return Ln.test(g.css(n,"display"))&&0===n.offsetWidth?On(n,Rn,function(){return Vn(n,l,t)}):Vn(n,l,t)},set:function(n,e,t){var u,r=t&&Dn(n),i=t&&qn(n,l,t,"border-box"===g.css(n,"boxSizing",!1,r),r);return i&&(u=G.exec(e))&&"px"!==(u[3]||"px")&&(n.style[l]=e,e=g.css(n,l)),zn(0,e,i)}}}),g.cssHooks.marginLeft=Mn(p.reliableMarginLeft,function(n,l){if(l)return(parseFloat(Pn(n,"marginLeft"))||n.getBoundingClientRect().left-On(n,{marginLeft:0},function(){return n.getBoundingClientRect().left}))+"px"}),g.cssHooks.marginRight=Mn(p.reliableMarginRight,function(n,l){if(l)return On(n,{display:"inline-block"},Pn,[n,"marginRight"])}),g.each({margin:"",padding:"",border:"Width"},function(n,l){g.cssHooks[n+l]={expand:function(e){for(var t=0,u={},r="string"==typeof e?e.split(" "):[e];t<4;t++)u[n+Y[t]+l]=r[t]||r[t-2]||r[0];return u}},In.test(n)||(g.cssHooks[n+l].set=zn)}),g.fn.extend({css:function(n,l){return R(this,function(n,l,e){var t,u,r={},i=0;if(g.isArray(l)){for(t=Dn(n),u=l.length;i<u;i++)r[l[i]]=g.css(n,l[i],!1,t);return r}return void 0!==e?g.style(n,l,e):g.css(n,l)},n,l,arguments.length>1)},show:function(){return Hn(this,!0)},hide:function(){return Hn(this)},toggle:function(n){return"boolean"==typeof n?n?this.show():this.hide():this.each(function(){W(this)?g(this).show():g(this).hide()})}}),g.Tween=Gn,Gn.prototype={constructor:Gn,init:function(n,l,e,t,u,r){this.elem=n,this.prop=e,this.easing=u||g.easing._default,this.options=l,this.start=this.now=this.cur(),this.end=t,this.unit=r||(g.cssNumber[e]?"":"px")},cur:function(){var n=Gn.propHooks[this.prop];return n&&n.get?n.get(this):Gn.propHooks._default.get(this)},run:function(n){var l,e=Gn.propHooks[this.prop];return this.options.duration?this.pos=l=g.easing[this.easing](n,this.options.duration*n,0,1,this.options.duration):this.pos=l=n,this.now=(this.end-this.start)*l+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),e&&e.set?e.set(this):Gn.propHooks._default.set(this),this}},Gn.prototype.init.prototype=Gn.prototype,Gn.propHooks={_default:{get:function(n){var l;return 1!==n.elem.nodeType||null!=n.elem[n.prop]&&null==n.elem.style[n.prop]?n.elem[n.prop]:(l=g.css(n.elem,n.prop,""))&&"auto"!==l?l:0},set:function(n){g.fx.step[n.prop]?g.fx.step[n.prop](n):1!==n.elem.nodeType||null==n.elem.style[g.cssProps[n.prop]]&&!g.cssHooks[n.prop]?n.elem[n.prop]=n.now:g.style(n.elem,n.prop,n.now+n.unit)}}},Gn.propHooks.scrollTop=Gn.propHooks.scrollLeft={set:function(n){n.elem.nodeType&&n.elem.parentNode&&(n.elem[n.prop]=n.now)}},g.easing={linear:function(n){return n},swing:function(n){return.5-Math.cos(n*Math.PI)/2},_default:"swing"},g.fx=Gn.prototype.init,g.fx.step={};var Yn,Wn,Xn=/^(?:toggle|show|hide)$/,Kn=/queueHooks$/;function $n(){return e.setTimeout(function(){Yn=void 0}),Yn=g.now()}function Zn(n,l){var e,t=0,u={height:n};for(l=l?1:0;t<4;t+=2-l)u["margin"+(e=Y[t])]=u["padding"+e]=n;return l&&(u.opacity=u.width=n),u}function Qn(n,l,e){for(var t,u=(Jn.tweeners[l]||[]).concat(Jn.tweeners["*"]),r=0,i=u.length;r<i;r++)if(t=u[r].call(e,l,n))return t}function Jn(n,l,e){var t,u,r=0,i=Jn.prefilters.length,o=g.Deferred().always(function(){delete a.elem}),a=function(){if(u)return!1;for(var l=Yn||$n(),e=Math.max(0,s.startTime+s.duration-l),t=1-(e/s.duration||0),r=0,i=s.tweens.length;r<i;r++)s.tweens[r].run(t);return o.notifyWith(n,[s,t,e]),t<1&&i?e:(o.resolveWith(n,[s]),!1)},s=o.promise({elem:n,props:g.extend({},l),opts:g.extend(!0,{specialEasing:{},easing:g.easing._default},e),originalProperties:l,originalOptions:e,startTime:Yn||$n(),duration:e.duration,tweens:[],createTween:function(l,e){var t=g.Tween(n,s.opts,l,e,s.opts.specialEasing[l]||s.opts.easing);return s.tweens.push(t),t},stop:function(l){var e=0,t=l?s.tweens.length:0;if(u)return this;for(u=!0;e<t;e++)s.tweens[e].run(1);return l?(o.notifyWith(n,[s,1,0]),o.resolveWith(n,[s,l])):o.rejectWith(n,[s,l]),this}}),c=s.props;for(!function(n,l){var e,t,u,r,i;for(e in n)if(u=l[t=g.camelCase(e)],r=n[e],g.isArray(r)&&(u=r[1],r=n[e]=r[0]),e!==t&&(n[t]=r,delete n[e]),(i=g.cssHooks[t])&&"expand"in i)for(e in r=i.expand(r),delete n[t],r)e in n||(n[e]=r[e],l[e]=u);else l[t]=u}(c,s.opts.specialEasing);r<i;r++)if(t=Jn.prefilters[r].call(s,n,c,s.opts))return g.isFunction(t.stop)&&(g._queueHooks(s.elem,s.opts.queue).stop=g.proxy(t.stop,t)),t;return g.map(c,Qn,s),g.isFunction(s.opts.start)&&s.opts.start.call(n,s),g.fx.timer(g.extend(a,{elem:n,anim:s,queue:s.opts.queue})),s.progress(s.opts.progress).done(s.opts.done,s.opts.complete).fail(s.opts.fail).always(s.opts.always)}g.Animation=g.extend(Jn,{tweeners:{"*":[function(n,l){var e=this.createTween(n,l);return X(e.elem,n,G.exec(l),e),e}]},tweener:function(n,l){g.isFunction(n)?(l=n,n=["*"]):n=n.match(M);for(var e,t=0,u=n.length;t<u;t++)e=n[t],Jn.tweeners[e]=Jn.tweeners[e]||[],Jn.tweeners[e].unshift(l)},prefilters:[function(n,l,e){var t,u,r,i,o,a,s,c=this,h={},d=n.style,f=n.nodeType&&W(n),p=j.get(n,"fxshow");for(t in e.queue||(null==(o=g._queueHooks(n,"fx")).unqueued&&(o.unqueued=0,a=o.empty.fire,o.empty.fire=function(){o.unqueued||a()}),o.unqueued++,c.always(function(){c.always(function(){o.unqueued--,g.queue(n,"fx").length||o.empty.fire()})})),1===n.nodeType&&("height"in l||"width"in l)&&(e.overflow=[d.overflow,d.overflowX,d.overflowY],"inline"===("none"===(s=g.css(n,"display"))?j.get(n,"olddisplay")||Sn(n.nodeName):s)&&"none"===g.css(n,"float")&&(d.display="inline-block")),e.overflow&&(d.overflow="hidden",c.always(function(){d.overflow=e.overflow[0],d.overflowX=e.overflow[1],d.overflowY=e.overflow[2]})),l)if(u=l[t],Xn.exec(u)){if(delete l[t],r=r||"toggle"===u,u===(f?"hide":"show")){if("show"!==u||!p||void 0===p[t])continue;f=!0}h[t]=p&&p[t]||g.style(n,t)}else s=void 0;if(g.isEmptyObject(h))"inline"===("none"===s?Sn(n.nodeName):s)&&(d.display=s);else for(t in p?"hidden"in p&&(f=p.hidden):p=j.access(n,"fxshow",{}),r&&(p.hidden=!f),f?g(n).show():c.done(function(){g(n).hide()}),c.done(function(){var l;for(l in j.remove(n,"fxshow"),h)g.style(n,l,h[l])}),h)i=Qn(f?p[t]:0,t,c),t in p||(p[t]=i.start,f&&(i.end=i.start,i.start="width"===t||"height"===t?1:0))}],prefilter:function(n,l){l?Jn.prefilters.unshift(n):Jn.prefilters.push(n)}}),g.speed=function(n,l,e){var t=n&&"object"==typeof n?g.extend({},n):{complete:e||!e&&l||g.isFunction(n)&&n,duration:n,easing:e&&l||l&&!g.isFunction(l)&&l};return t.duration=g.fx.off?0:"number"==typeof t.duration?t.duration:t.duration in g.fx.speeds?g.fx.speeds[t.duration]:g.fx.speeds._default,null!=t.queue&&!0!==t.queue||(t.queue="fx"),t.old=t.complete,t.complete=function(){g.isFunction(t.old)&&t.old.call(this),t.queue&&g.dequeue(this,t.queue)},t},g.fn.extend({fadeTo:function(n,l,e,t){return this.filter(W).css("opacity",0).show().end().animate({opacity:l},n,e,t)},animate:function(n,l,e,t){var u=g.isEmptyObject(n),r=g.speed(l,e,t),i=function(){var l=Jn(this,g.extend({},n),r);(u||j.get(this,"finish"))&&l.stop(!0)};return i.finish=i,u||!1===r.queue?this.each(i):this.queue(r.queue,i)},stop:function(n,l,e){var t=function(n){var l=n.stop;delete n.stop,l(e)};return"string"!=typeof n&&(e=l,l=n,n=void 0),l&&!1!==n&&this.queue(n||"fx",[]),this.each(function(){var l=!0,u=null!=n&&n+"queueHooks",r=g.timers,i=j.get(this);if(u)i[u]&&i[u].stop&&t(i[u]);else for(u in i)i[u]&&i[u].stop&&Kn.test(u)&&t(i[u]);for(u=r.length;u--;)r[u].elem!==this||null!=n&&r[u].queue!==n||(r[u].anim.stop(e),l=!1,r.splice(u,1));!l&&e||g.dequeue(this,n)})},finish:function(n){return!1!==n&&(n=n||"fx"),this.each(function(){var l,e=j.get(this),t=e[n+"queue"],u=e[n+"queueHooks"],r=g.timers,i=t?t.length:0;for(e.finish=!0,g.queue(this,n,[]),u&&u.stop&&u.stop.call(this,!0),l=r.length;l--;)r[l].elem===this&&r[l].queue===n&&(r[l].anim.stop(!0),r.splice(l,1));for(l=0;l<i;l++)t[l]&&t[l].finish&&t[l].finish.call(this);delete e.finish})}}),g.each(["toggle","show","hide"],function(n,l){var e=g.fn[l];g.fn[l]=function(n,t,u){return null==n||"boolean"==typeof n?e.apply(this,arguments):this.animate(Zn(l,!0),n,t,u)}}),g.each({slideDown:Zn("show"),slideUp:Zn("hide"),slideToggle:Zn("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(n,l){g.fn[n]=function(n,e,t){return this.animate(l,n,e,t)}}),g.timers=[],g.fx.tick=function(){var n,l=0,e=g.timers;for(Yn=g.now();l<e.length;l++)(n=e[l])()||e[l]!==n||e.splice(l--,1);e.length||g.fx.stop(),Yn=void 0},g.fx.timer=function(n){g.timers.push(n),n()?g.fx.start():g.timers.pop()},g.fx.interval=13,g.fx.start=function(){Wn||(Wn=e.setInterval(g.fx.tick,g.fx.interval))},g.fx.stop=function(){e.clearInterval(Wn),Wn=null},g.fx.speeds={slow:600,fast:200,_default:400},g.fn.delay=function(n,l){return n=g.fx&&g.fx.speeds[n]||n,l=l||"fx",this.queue(l,function(l,t){var u=e.setTimeout(l,n);t.stop=function(){e.clearTimeout(u)}})},function(){var n=i.createElement("input"),l=i.createElement("select"),e=l.appendChild(i.createElement("option"));n.type="checkbox",p.checkOn=""!==n.value,p.optSelected=e.selected,l.disabled=!0,p.optDisabled=!e.disabled,(n=i.createElement("input")).value="t",n.type="radio",p.radioValue="t"===n.value}();var nl,ll=g.expr.attrHandle;g.fn.extend({attr:function(n,l){return R(this,g.attr,n,l,arguments.length>1)},removeAttr:function(n){return this.each(function(){g.removeAttr(this,n)})}}),g.extend({attr:function(n,l,e){var t,u,r=n.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===n.getAttribute?g.prop(n,l,e):(1===r&&g.isXMLDoc(n)||(l=l.toLowerCase(),u=g.attrHooks[l]||(g.expr.match.bool.test(l)?nl:void 0)),void 0!==e?null===e?void g.removeAttr(n,l):u&&"set"in u&&void 0!==(t=u.set(n,e,l))?t:(n.setAttribute(l,e+""),e):u&&"get"in u&&null!==(t=u.get(n,l))?t:null==(t=g.find.attr(n,l))?void 0:t)},attrHooks:{type:{set:function(n,l){if(!p.radioValue&&"radio"===l&&g.nodeName(n,"input")){var e=n.value;return n.setAttribute("type",l),e&&(n.value=e),l}}}},removeAttr:function(n,l){var e,t,u=0,r=l&&l.match(M);if(r&&1===n.nodeType)for(;e=r[u++];)t=g.propFix[e]||e,g.expr.match.bool.test(e)&&(n[t]=!1),n.removeAttribute(e)}}),nl={set:function(n,l,e){return!1===l?g.removeAttr(n,e):n.setAttribute(e,e),e}},g.each(g.expr.match.bool.source.match(/\w+/g),function(n,l){var e=ll[l]||g.find.attr;ll[l]=function(n,l,t){var u,r;return t||(r=ll[l],ll[l]=u,u=null!=e(n,l,t)?l.toLowerCase():null,ll[l]=r),u}});var el=/^(?:input|select|textarea|button)$/i,tl=/^(?:a|area)$/i;g.fn.extend({prop:function(n,l){return R(this,g.prop,n,l,arguments.length>1)},removeProp:function(n){return this.each(function(){delete this[g.propFix[n]||n]})}}),g.extend({prop:function(n,l,e){var t,u,r=n.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&g.isXMLDoc(n)||(l=g.propFix[l]||l,u=g.propHooks[l]),void 0!==e?u&&"set"in u&&void 0!==(t=u.set(n,e,l))?t:n[l]=e:u&&"get"in u&&null!==(t=u.get(n,l))?t:n[l]},propHooks:{tabIndex:{get:function(n){var l=g.find.attr(n,"tabindex");return l?parseInt(l,10):el.test(n.nodeName)||tl.test(n.nodeName)&&n.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),p.optSelected||(g.propHooks.selected={get:function(n){var l=n.parentNode;return l&&l.parentNode&&l.parentNode.selectedIndex,null},set:function(n){var l=n.parentNode;l&&(l.selectedIndex,l.parentNode&&l.parentNode.selectedIndex)}}),g.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){g.propFix[this.toLowerCase()]=this});var ul=/[\t\r\n\f]/g;function rl(n){return n.getAttribute&&n.getAttribute("class")||""}g.fn.extend({addClass:function(n){var l,e,t,u,r,i,o,a=0;if(g.isFunction(n))return this.each(function(l){g(this).addClass(n.call(this,l,rl(this)))});if("string"==typeof n&&n)for(l=n.match(M)||[];e=this[a++];)if(u=rl(e),t=1===e.nodeType&&(" "+u+" ").replace(ul," ")){for(i=0;r=l[i++];)t.indexOf(" "+r+" ")<0&&(t+=r+" ");u!==(o=g.trim(t))&&e.setAttribute("class",o)}return this},removeClass:function(n){var l,e,t,u,r,i,o,a=0;if(g.isFunction(n))return this.each(function(l){g(this).removeClass(n.call(this,l,rl(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof n&&n)for(l=n.match(M)||[];e=this[a++];)if(u=rl(e),t=1===e.nodeType&&(" "+u+" ").replace(ul," ")){for(i=0;r=l[i++];)for(;t.indexOf(" "+r+" ")>-1;)t=t.replace(" "+r+" "," ");u!==(o=g.trim(t))&&e.setAttribute("class",o)}return this},toggleClass:function(n,l){var e=typeof n;return"boolean"==typeof l&&"string"===e?l?this.addClass(n):this.removeClass(n):g.isFunction(n)?this.each(function(e){g(this).toggleClass(n.call(this,e,rl(this),l),l)}):this.each(function(){var l,t,u,r;if("string"===e)for(t=0,u=g(this),r=n.match(M)||[];l=r[t++];)u.hasClass(l)?u.removeClass(l):u.addClass(l);else void 0!==n&&"boolean"!==e||((l=rl(this))&&j.set(this,"__className__",l),this.setAttribute&&this.setAttribute("class",l||!1===n?"":j.get(this,"__className__")||""))})},hasClass:function(n){var l,e,t=0;for(l=" "+n+" ";e=this[t++];)if(1===e.nodeType&&(" "+rl(e)+" ").replace(ul," ").indexOf(l)>-1)return!0;return!1}});var il=/\r/g,ol=/[\x20\t\r\n\f]+/g;g.fn.extend({val:function(n){var l,e,t,u=this[0];return arguments.length?(t=g.isFunction(n),this.each(function(e){var u;1===this.nodeType&&(null==(u=t?n.call(this,e,g(this).val()):n)?u="":"number"==typeof u?u+="":g.isArray(u)&&(u=g.map(u,function(n){return null==n?"":n+""})),(l=g.valHooks[this.type]||g.valHooks[this.nodeName.toLowerCase()])&&"set"in l&&void 0!==l.set(this,u,"value")||(this.value=u))})):u?(l=g.valHooks[u.type]||g.valHooks[u.nodeName.toLowerCase()])&&"get"in l&&void 0!==(e=l.get(u,"value"))?e:"string"==typeof(e=u.value)?e.replace(il,""):null==e?"":e:void 0}}),g.extend({valHooks:{option:{get:function(n){var l=g.find.attr(n,"value");return null!=l?l:g.trim(g.text(n)).replace(ol," ")}},select:{get:function(n){for(var l,e,t=n.options,u=n.selectedIndex,r="select-one"===n.type||u<0,i=r?null:[],o=r?u+1:t.length,a=u<0?o:r?u:0;a<o;a++)if(((e=t[a]).selected||a===u)&&(p.optDisabled?!e.disabled:null===e.getAttribute("disabled"))&&(!e.parentNode.disabled||!g.nodeName(e.parentNode,"optgroup"))){if(l=g(e).val(),r)return l;i.push(l)}return i},set:function(n,l){for(var e,t,u=n.options,r=g.makeArray(l),i=u.length;i--;)((t=u[i]).selected=g.inArray(g.valHooks.option.get(t),r)>-1)&&(e=!0);return e||(n.selectedIndex=-1),r}}}}),g.each(["radio","checkbox"],function(){g.valHooks[this]={set:function(n,l){if(g.isArray(l))return n.checked=g.inArray(g(n).val(),l)>-1}},p.checkOn||(g.valHooks[this].get=function(n){return null===n.getAttribute("value")?"on":n.value})});var al=/^(?:focusinfocus|focusoutblur)$/;g.extend(g.event,{trigger:function(n,l,t,u){var r,o,a,s,c,h,d,p=[t||i],v=f.call(n,"type")?n.type:n,y=f.call(n,"namespace")?n.namespace.split("."):[];if(o=a=t=t||i,3!==t.nodeType&&8!==t.nodeType&&!al.test(v+g.event.triggered)&&(v.indexOf(".")>-1&&(y=v.split("."),v=y.shift(),y.sort()),c=v.indexOf(":")<0&&"on"+v,(n=n[g.expando]?n:new g.Event(v,"object"==typeof n&&n)).isTrigger=u?2:3,n.namespace=y.join("."),n.rnamespace=n.namespace?new RegExp("(^|\\.)"+y.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=void 0,n.target||(n.target=t),l=null==l?[n]:g.makeArray(l,[n]),d=g.event.special[v]||{},u||!d.trigger||!1!==d.trigger.apply(t,l))){if(!u&&!d.noBubble&&!g.isWindow(t)){for(s=d.delegateType||v,al.test(s+v)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(t.ownerDocument||i)&&p.push(a.defaultView||a.parentWindow||e)}for(r=0;(o=p[r++])&&!n.isPropagationStopped();)n.type=r>1?s:d.bindType||v,(h=(j.get(o,"events")||{})[n.type]&&j.get(o,"handle"))&&h.apply(o,l),(h=c&&o[c])&&h.apply&&F(o)&&(n.result=h.apply(o,l),!1===n.result&&n.preventDefault());return n.type=v,u||n.isDefaultPrevented()||d._default&&!1!==d._default.apply(p.pop(),l)||!F(t)||c&&g.isFunction(t[v])&&!g.isWindow(t)&&((a=t[c])&&(t[c]=null),g.event.triggered=v,t[v](),g.event.triggered=void 0,a&&(t[c]=a)),n.result}},simulate:function(n,l,e){var t=g.extend(new g.Event,e,{type:n,isSimulated:!0});g.event.trigger(t,null,l)}}),g.fn.extend({trigger:function(n,l){return this.each(function(){g.event.trigger(n,l,this)})},triggerHandler:function(n,l){var e=this[0];if(e)return g.event.trigger(n,l,e,!0)}}),g.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(n,l){g.fn[l]=function(n,e){return arguments.length>0?this.on(l,null,n,e):this.trigger(l)}}),g.fn.extend({hover:function(n,l){return this.mouseenter(n).mouseleave(l||n)}}),p.focusin="onfocusin"in e,p.focusin||g.each({focus:"focusin",blur:"focusout"},function(n,l){var e=function(n){g.event.simulate(l,n.target,g.event.fix(n))};g.event.special[l]={setup:function(){var t=this.ownerDocument||this,u=j.access(t,l);u||t.addEventListener(n,e,!0),j.access(t,l,(u||0)+1)},teardown:function(){var t=this.ownerDocument||this,u=j.access(t,l)-1;u?j.access(t,l,u):(t.removeEventListener(n,e,!0),j.remove(t,l))}}});var sl=e.location,cl=g.now(),hl=/\?/;g.parseJSON=function(n){return JSON.parse(n+"")},g.parseXML=function(n){var l;if(!n||"string"!=typeof n)return null;try{l=(new e.DOMParser).parseFromString(n,"text/xml")}catch(n){l=void 0}return l&&!l.getElementsByTagName("parsererror").length||g.error("Invalid XML: "+n),l};var dl=/#.*$/,fl=/([?&])_=[^&]*/,pl=/^(.*?):[ \t]*([^\r\n]*)$/gm,gl=/^(?:GET|HEAD)$/,vl=/^\/\//,yl={},ml={},bl="*/".concat("*"),wl=i.createElement("a");function _l(n){return function(l,e){"string"!=typeof l&&(e=l,l="*");var t,u=0,r=l.toLowerCase().match(M)||[];if(g.isFunction(e))for(;t=r[u++];)"+"===t[0]?(t=t.slice(1)||"*",(n[t]=n[t]||[]).unshift(e)):(n[t]=n[t]||[]).push(e)}}function xl(n,l,e,t){var u={},r=n===ml;function i(o){var a;return u[o]=!0,g.each(n[o]||[],function(n,o){var s=o(l,e,t);return"string"!=typeof s||r||u[s]?r?!(a=s):void 0:(l.dataTypes.unshift(s),i(s),!1)}),a}return i(l.dataTypes[0])||!u["*"]&&i("*")}function El(n,l){var e,t,u=g.ajaxSettings.flatOptions||{};for(e in l)void 0!==l[e]&&((u[e]?n:t||(t={}))[e]=l[e]);return t&&g.extend(!0,n,t),n}wl.href=sl.href,g.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:sl.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(sl.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":bl,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":g.parseJSON,"text xml":g.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(n,l){return l?El(El(n,g.ajaxSettings),l):El(g.ajaxSettings,n)},ajaxPrefilter:_l(yl),ajaxTransport:_l(ml),ajax:function(n,l){"object"==typeof n&&(l=n,n=void 0),l=l||{};var t,u,r,o,a,s,c,h,d=g.ajaxSetup({},l),f=d.context||d,p=d.context&&(f.nodeType||f.jquery)?g(f):g.event,v=g.Deferred(),y=g.Callbacks("once memory"),m=d.statusCode||{},b={},w={},_=0,x="canceled",E={readyState:0,getResponseHeader:function(n){var l;if(2===_){if(!o)for(o={};l=pl.exec(r);)o[l[1].toLowerCase()]=l[2];l=o[n.toLowerCase()]}return null==l?null:l},getAllResponseHeaders:function(){return 2===_?r:null},setRequestHeader:function(n,l){var e=n.toLowerCase();return _||(n=w[e]=w[e]||n,b[n]=l),this},overrideMimeType:function(n){return _||(d.mimeType=n),this},statusCode:function(n){var l;if(n)if(_<2)for(l in n)m[l]=[m[l],n[l]];else E.always(n[E.status]);return this},abort:function(n){var l=n||x;return t&&t.abort(l),T(0,l),this}};if(v.promise(E).complete=y.add,E.success=E.done,E.error=E.fail,d.url=((n||d.url||sl.href)+"").replace(dl,"").replace(vl,sl.protocol+"//"),d.type=l.method||l.type||d.method||d.type,d.dataTypes=g.trim(d.dataType||"*").toLowerCase().match(M)||[""],null==d.crossDomain){s=i.createElement("a");try{s.href=d.url,s.href=s.href,d.crossDomain=wl.protocol+"//"+wl.host!=s.protocol+"//"+s.host}catch(n){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=g.param(d.data,d.traditional)),xl(yl,d,l,E),2===_)return E;for(h in(c=g.event&&d.global)&&0==g.active++&&g.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!gl.test(d.type),u=d.url,d.hasContent||(d.data&&(u=d.url+=(hl.test(u)?"&":"?")+d.data,delete d.data),!1===d.cache&&(d.url=fl.test(u)?u.replace(fl,"$1_="+cl++):u+(hl.test(u)?"&":"?")+"_="+cl++)),d.ifModified&&(g.lastModified[u]&&E.setRequestHeader("If-Modified-Since",g.lastModified[u]),g.etag[u]&&E.setRequestHeader("If-None-Match",g.etag[u])),(d.data&&d.hasContent&&!1!==d.contentType||l.contentType)&&E.setRequestHeader("Content-Type",d.contentType),E.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+bl+"; q=0.01":""):d.accepts["*"]),d.headers)E.setRequestHeader(h,d.headers[h]);if(d.beforeSend&&(!1===d.beforeSend.call(f,E,d)||2===_))return E.abort();for(h in x="abort",{success:1,error:1,complete:1})E[h](d[h]);if(t=xl(ml,d,l,E)){if(E.readyState=1,c&&p.trigger("ajaxSend",[E,d]),2===_)return E;d.async&&d.timeout>0&&(a=e.setTimeout(function(){E.abort("timeout")},d.timeout));try{_=1,t.send(b,T)}catch(n){if(!(_<2))throw n;T(-1,n)}}else T(-1,"No Transport");function T(n,l,i,o){var s,h,b,w,x,T=l;2!==_&&(_=2,a&&e.clearTimeout(a),t=void 0,r=o||"",E.readyState=n>0?4:0,s=n>=200&&n<300||304===n,i&&(w=function(n,l,e){for(var t,u,r,i,o=n.contents,a=n.dataTypes;"*"===a[0];)a.shift(),void 0===t&&(t=n.mimeType||l.getResponseHeader("Content-Type"));if(t)for(u in o)if(o[u]&&o[u].test(t)){a.unshift(u);break}if(a[0]in e)r=a[0];else{for(u in e){if(!a[0]||n.converters[u+" "+a[0]]){r=u;break}i||(i=u)}r=r||i}if(r)return r!==a[0]&&a.unshift(r),e[r]}(d,E,i)),w=function(n,l,e,t){var u,r,i,o,a,s={},c=n.dataTypes.slice();if(c[1])for(i in n.converters)s[i.toLowerCase()]=n.converters[i];for(r=c.shift();r;)if(n.responseFields[r]&&(e[n.responseFields[r]]=l),!a&&t&&n.dataFilter&&(l=n.dataFilter(l,n.dataType)),a=r,r=c.shift())if("*"===r)r=a;else if("*"!==a&&a!==r){if(!(i=s[a+" "+r]||s["* "+r]))for(u in s)if((o=u.split(" "))[1]===r&&(i=s[a+" "+o[0]]||s["* "+o[0]])){!0===i?i=s[u]:!0!==s[u]&&(r=o[0],c.unshift(o[1]));break}if(!0!==i)if(i&&n.throws)l=i(l);else try{l=i(l)}catch(n){return{state:"parsererror",error:i?n:"No conversion from "+a+" to "+r}}}return{state:"success",data:l}}(d,w,E,s),s?(d.ifModified&&((x=E.getResponseHeader("Last-Modified"))&&(g.lastModified[u]=x),(x=E.getResponseHeader("etag"))&&(g.etag[u]=x)),204===n||"HEAD"===d.type?T="nocontent":304===n?T="notmodified":(T=w.state,h=w.data,s=!(b=w.error))):(b=T,!n&&T||(T="error",n<0&&(n=0))),E.status=n,E.statusText=(l||T)+"",s?v.resolveWith(f,[h,T,E]):v.rejectWith(f,[E,T,b]),E.statusCode(m),m=void 0,c&&p.trigger(s?"ajaxSuccess":"ajaxError",[E,d,s?h:b]),y.fireWith(f,[E,T]),c&&(p.trigger("ajaxComplete",[E,d]),--g.active||g.event.trigger("ajaxStop")))}return E},getJSON:function(n,l,e){return g.get(n,l,e,"json")},getScript:function(n,l){return g.get(n,void 0,l,"script")}}),g.each(["get","post"],function(n,l){g[l]=function(n,e,t,u){return g.isFunction(e)&&(u=u||t,t=e,e=void 0),g.ajax(g.extend({url:n,type:l,dataType:u,data:e,success:t},g.isPlainObject(n)&&n))}}),g._evalUrl=function(n){return g.ajax({url:n,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},g.fn.extend({wrapAll:function(n){var l;return g.isFunction(n)?this.each(function(l){g(this).wrapAll(n.call(this,l))}):(this[0]&&(l=g(n,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&l.insertBefore(this[0]),l.map(function(){for(var n=this;n.firstElementChild;)n=n.firstElementChild;return n}).append(this)),this)},wrapInner:function(n){return g.isFunction(n)?this.each(function(l){g(this).wrapInner(n.call(this,l))}):this.each(function(){var l=g(this),e=l.contents();e.length?e.wrapAll(n):l.append(n)})},wrap:function(n){var l=g.isFunction(n);return this.each(function(e){g(this).wrapAll(l?n.call(this,e):n)})},unwrap:function(){return this.parent().each(function(){g.nodeName(this,"body")||g(this).replaceWith(this.childNodes)}).end()}}),g.expr.filters.hidden=function(n){return!g.expr.filters.visible(n)},g.expr.filters.visible=function(n){return n.offsetWidth>0||n.offsetHeight>0||n.getClientRects().length>0};var Tl=/%20/g,kl=/\[\]$/,Cl=/\r?\n/g,Sl=/^(?:submit|button|image|reset|file)$/i,Il=/^(?:input|select|textarea|keygen)/i;function Nl(n,l,e,t){var u;if(g.isArray(l))g.each(l,function(l,u){e||kl.test(n)?t(n,u):Nl(n+"["+("object"==typeof u&&null!=u?l:"")+"]",u,e,t)});else if(e||"object"!==g.type(l))t(n,l);else for(u in l)Nl(n+"["+u+"]",l[u],e,t)}g.param=function(n,l){var e,t=[],u=function(n,l){l=g.isFunction(l)?l():null==l?"":l,t[t.length]=encodeURIComponent(n)+"="+encodeURIComponent(l)};if(void 0===l&&(l=g.ajaxSettings&&g.ajaxSettings.traditional),g.isArray(n)||n.jquery&&!g.isPlainObject(n))g.each(n,function(){u(this.name,this.value)});else for(e in n)Nl(e,n[e],l,u);return t.join("&").replace(Tl,"+")},g.fn.extend({serialize:function(){return g.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var n=g.prop(this,"elements");return n?g.makeArray(n):this}).filter(function(){var n=this.type;return this.name&&!g(this).is(":disabled")&&Il.test(this.nodeName)&&!Sl.test(n)&&(this.checked||!K.test(n))}).map(function(n,l){var e=g(this).val();return null==e?null:g.isArray(e)?g.map(e,function(n){return{name:l.name,value:n.replace(Cl,"\r\n")}}):{name:l.name,value:e.replace(Cl,"\r\n")}}).get()}}),g.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(n){}};var Dl={0:200,1223:204},Ol=g.ajaxSettings.xhr();p.cors=!!Ol&&"withCredentials"in Ol,p.ajax=Ol=!!Ol,g.ajaxTransport(function(n){var l,t;if(p.cors||Ol&&!n.crossDomain)return{send:function(u,r){var i,o=n.xhr();if(o.open(n.type,n.url,n.async,n.username,n.password),n.xhrFields)for(i in n.xhrFields)o[i]=n.xhrFields[i];for(i in n.mimeType&&o.overrideMimeType&&o.overrideMimeType(n.mimeType),n.crossDomain||u["X-Requested-With"]||(u["X-Requested-With"]="XMLHttpRequest"),u)o.setRequestHeader(i,u[i]);l=function(n){return function(){l&&(l=t=o.onload=o.onerror=o.onabort=o.onreadystatechange=null,"abort"===n?o.abort():"error"===n?"number"!=typeof o.status?r(0,"error"):r(o.status,o.statusText):r(Dl[o.status]||o.status,o.statusText,"text"!==(o.responseType||"text")||"string"!=typeof o.responseText?{binary:o.response}:{text:o.responseText},o.getAllResponseHeaders()))}},o.onload=l(),t=o.onerror=l("error"),void 0!==o.onabort?o.onabort=t:o.onreadystatechange=function(){4===o.readyState&&e.setTimeout(function(){l&&t()})},l=l("abort");try{o.send(n.hasContent&&n.data||null)}catch(n){if(l)throw n}},abort:function(){l&&l()}}}),g.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(n){return g.globalEval(n),n}}}),g.ajaxPrefilter("script",function(n){void 0===n.cache&&(n.cache=!1),n.crossDomain&&(n.type="GET")}),g.ajaxTransport("script",function(n){var l,e;if(n.crossDomain)return{send:function(t,u){l=g("<script>").prop({charset:n.scriptCharset,src:n.url}).on("load error",e=function(n){l.remove(),e=null,n&&u("error"===n.type?404:200,n.type)}),i.head.appendChild(l[0])},abort:function(){e&&e()}}});var Al=[],Pl=/(=)\?(?=&|$)|\?\?/;g.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var n=Al.pop()||g.expando+"_"+cl++;return this[n]=!0,n}}),g.ajaxPrefilter("json jsonp",function(n,l,t){var u,r,i,o=!1!==n.jsonp&&(Pl.test(n.url)?"url":"string"==typeof n.data&&0===(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Pl.test(n.data)&&"data");if(o||"jsonp"===n.dataTypes[0])return u=n.jsonpCallback=g.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o?n[o]=n[o].replace(Pl,"$1"+u):!1!==n.jsonp&&(n.url+=(hl.test(n.url)?"&":"?")+n.jsonp+"="+u),n.converters["script json"]=function(){return i||g.error(u+" was not called"),i[0]},n.dataTypes[0]="json",r=e[u],e[u]=function(){i=arguments},t.always(function(){void 0===r?g(e).removeProp(u):e[u]=r,n[u]&&(n.jsonpCallback=l.jsonpCallback,Al.push(u)),i&&g.isFunction(r)&&r(i[0]),i=r=void 0}),"script"}),g.parseHTML=function(n,l,e){if(!n||"string"!=typeof n)return null;"boolean"==typeof l&&(e=l,l=!1),l=l||i;var t=k.exec(n),u=!e&&[];return t?[l.createElement(t[1])]:(t=un([n],l,u),u&&u.length&&g(u).remove(),g.merge([],t.childNodes))};var Ml=g.fn.load;function Ll(n){return g.isWindow(n)?n:9===n.nodeType&&n.defaultView}g.fn.load=function(n,l,e){if("string"!=typeof n&&Ml)return Ml.apply(this,arguments);var t,u,r,i=this,o=n.indexOf(" ");return o>-1&&(t=g.trim(n.slice(o)),n=n.slice(0,o)),g.isFunction(l)?(e=l,l=void 0):l&&"object"==typeof l&&(u="POST"),i.length>0&&g.ajax({url:n,type:u||"GET",dataType:"html",data:l}).done(function(n){r=arguments,i.html(t?g("<div>").append(g.parseHTML(n)).find(t):n)}).always(e&&function(n,l){i.each(function(){e.apply(this,r||[n.responseText,l,n])})}),this},g.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(n,l){g.fn[l]=function(n){return this.on(l,n)}}),g.expr.filters.animated=function(n){return g.grep(g.timers,function(l){return n===l.elem}).length},g.offset={setOffset:function(n,l,e){var t,u,r,i,o,a,s=g.css(n,"position"),c=g(n),h={};"static"===s&&(n.style.position="relative"),o=c.offset(),r=g.css(n,"top"),a=g.css(n,"left"),("absolute"===s||"fixed"===s)&&(r+a).indexOf("auto")>-1?(i=(t=c.position()).top,u=t.left):(i=parseFloat(r)||0,u=parseFloat(a)||0),g.isFunction(l)&&(l=l.call(n,e,g.extend({},o))),null!=l.top&&(h.top=l.top-o.top+i),null!=l.left&&(h.left=l.left-o.left+u),"using"in l?l.using.call(n,h):c.css(h)}},g.fn.extend({offset:function(n){if(arguments.length)return void 0===n?this:this.each(function(l){g.offset.setOffset(this,n,l)});var l,e,t=this[0],u={top:0,left:0},r=t&&t.ownerDocument;return r?(l=r.documentElement,g.contains(l,t)?(u=t.getBoundingClientRect(),e=Ll(r),{top:u.top+e.pageYOffset-l.clientTop,left:u.left+e.pageXOffset-l.clientLeft}):u):void 0},position:function(){if(this[0]){var n,l,e=this[0],t={top:0,left:0};return"fixed"===g.css(e,"position")?l=e.getBoundingClientRect():(n=this.offsetParent(),l=this.offset(),g.nodeName(n[0],"html")||(t=n.offset()),t.top+=g.css(n[0],"borderTopWidth",!0),t.left+=g.css(n[0],"borderLeftWidth",!0)),{top:l.top-t.top-g.css(e,"marginTop",!0),left:l.left-t.left-g.css(e,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var n=this.offsetParent;n&&"static"===g.css(n,"position");)n=n.offsetParent;return n||An})}}),g.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(n,l){var e="pageYOffset"===l;g.fn[n]=function(t){return R(this,function(n,t,u){var r=Ll(n);if(void 0===u)return r?r[l]:n[t];r?r.scrollTo(e?r.pageXOffset:u,e?u:r.pageYOffset):n[t]=u},n,t,arguments.length)}}),g.each(["top","left"],function(n,l){g.cssHooks[l]=Mn(p.pixelPosition,function(n,e){if(e)return e=Pn(n,l),Nn.test(e)?g(n).position()[l]+"px":e})}),g.each({Height:"height",Width:"width"},function(n,l){g.each({padding:"inner"+n,content:l,"":"outer"+n},function(e,t){g.fn[t]=function(t,u){var r=arguments.length&&(e||"boolean"!=typeof t),i=e||(!0===t||!0===u?"margin":"border");return R(this,function(l,e,t){var u;return g.isWindow(l)?l.document.documentElement["client"+n]:9===l.nodeType?(u=l.documentElement,Math.max(l.body["scroll"+n],u["scroll"+n],l.body["offset"+n],u["offset"+n],u["client"+n])):void 0===t?g.css(l,e,i):g.style(l,e,t,i)},l,r?t:void 0,r,null)}})}),g.fn.extend({bind:function(n,l,e){return this.on(n,null,l,e)},unbind:function(n,l){return this.off(n,null,l)},delegate:function(n,l,e,t){return this.on(l,n,e,t)},undelegate:function(n,l,e){return 1===arguments.length?this.off(n,"**"):this.off(l,n||"**",e)},size:function(){return this.length}}),g.fn.andSelf=g.fn.addBack,void 0===(t=function(){return g}.apply(l,[]))||(n.exports=t);var Rl=e.jQuery,Fl=e.$;return g.noConflict=function(n){return e.$===g&&(e.$=Fl),n&&e.jQuery===g&&(e.jQuery=Rl),g},u||(e.jQuery=e.$=g),g},"object"==typeof n.exports?n.exports=u.document?r(u,!0):function(n){if(!n.document)throw new Error("jQuery requires a window with a document");return r(n)}:r(u)},function(n,l,e){n.exports=!e(16)&&!e(22)(function(){return 7!=Object.defineProperty(e(56)("div"),"a",{get:function(){return 7}}).a})},function(n,l,e){var t=e(23),u=e(25),r=e(59)("IE_PROTO"),i=Object.prototype;n.exports=Object.getPrototypeOf||function(n){return n=u(n),t(n,r)?n[r]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?i:null}},function(n,l,e){n.exports={default:e(138),__esModule:!0}},function(n,l,e){n.exports=e(18)},function(n,l,e){var t=e(23),u=e(19),r=e(142)(!1),i=e(59)("IE_PROTO");n.exports=function(n,l){var e,o=u(n),a=0,s=[];for(e in o)e!=i&&t(o,e)&&s.push(e);for(;l.length>a;)t(o,e=l[a++])&&(~r(s,e)||s.push(e));return s}},function(n,l,e){var t=e(8).document;n.exports=t&&t.documentElement},function(n,l){n.exports=function(n,l){return{value:l,done:!!n}}},function(n,l,e){var t=e(35);n.exports=Array.isArray||function(n){return"Array"==t(n)}},function(n,l,e){var t=e(87),u=e(64).concat("length","prototype");l.f=Object.getOwnPropertyNames||function(n){return t(n,u)}},function(n,l,e){n.exports={default:e(157),__esModule:!0}},function(n,l,e){var t=e(15);n.exports=function(n,l,e,u){try{return u?l(t(e)[0],e[1]):l(e)}catch(l){var r=n.return;throw void 0!==r&&t(r.call(n)),l}}},function(n,l,e){var t=e(27),u=e(9)("iterator"),r=Array.prototype;n.exports=function(n){return void 0!==n&&(t.Array===n||r[u]===n)}},function(n,l,e){var t=e(15),u=e(31),r=e(9)("species");n.exports=function(n,l){var e,i=t(n).constructor;return void 0===i||null==(e=t(i)[r])?l:u(e)}},function(n,l,e){var t,u,r,i=e(17),o=e(164),a=e(88),s=e(56),c=e(8),h=c.process,d=c.setImmediate,f=c.clearImmediate,p=c.MessageChannel,g=c.Dispatch,v=0,y={},m=function(){var n=+this;if(y.hasOwnProperty(n)){var l=y[n];delete y[n],l()}},b=function(n){m.call(n.data)};d&&f||(d=function(n){for(var l=[],e=1;arguments.length>e;)l.push(arguments[e++]);return y[++v]=function(){o("function"==typeof n?n:Function(n),l)},t(v),v},f=function(n){delete y[n]},"process"==e(35)(h)?t=function(n){h.nextTick(i(m,n,1))}:g&&g.now?t=function(n){g.now(i(m,n,1))}:p?(r=(u=new p).port2,u.port1.onmessage=b,t=i(r.postMessage,r,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(t=function(n){c.postMessage(n+"","*")},c.addEventListener("message",b,!1)):t="onreadystatechange"in s("script")?function(n){a.appendChild(s("script")).onreadystatechange=function(){a.removeChild(this),m.call(n)}}:function(n){setTimeout(i(m,n,1),0)}),n.exports={set:d,clear:f}},function(n,l){n.exports=function(n){try{return{e:!1,v:n()}}catch(n){return{e:!0,v:n}}}},function(n,l,e){var t=e(15),u=e(10),r=e(73);n.exports=function(n,l){if(t(n),u(l)&&l.constructor===n)return l;var e=r.f(n);return(0,e.resolve)(l),e.promise}},function(n,l,e){"use strict";var t=e(8),u=e(2),r=e(14),i=e(16),o=e(9)("species");n.exports=function(n){var l="function"==typeof u[n]?u[n]:t[n];i&&l&&!l[o]&&r.f(l,o,{configurable:!0,get:function(){return this}})}},function(n,l,e){var t=e(9)("iterator"),u=!1;try{var r=[7][t]();r.return=function(){u=!0},Array.from(r,function(){throw 2})}catch(n){}n.exports=function(n,l){if(!l&&!u)return!1;var e=!1;try{var r=[7],i=r[t]();i.next=function(){return{done:e=!0}},r[t]=function(){return i},n(r)}catch(n){}return e}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.statementType=void 0;var t=o(e(24)),u=o(e(0)),r=o(e(1)),i=e(13);function o(n){return n&&n.__esModule?n:{default:n}}var a=function(){function n(l,e,t){(0,u.default)(this,n),this.statement={text:l,parameters:e},this.statementType=t.type,this.counters=new h(t.stats||{}),this.updateStatistics=this.counters,this.plan=!(!t.plan&&!t.profile)&&new s(t.plan||t.profile),this.profile=!!t.profile&&new c(t.profile),this.notifications=this._buildNotifications(t.notifications),this.server=new f(t.server),this.resultConsumedAfter=t.result_consumed_after,this.resultAvailableAfter=t.result_available_after}return(0,r.default)(n,[{key:"_buildNotifications",value:function(n){return n?n.map(function(n){return new d(n)}):[]}},{key:"hasPlan",value:function(){return this.plan instanceof s}},{key:"hasProfile",value:function(){return this.profile instanceof c}}]),n}(),s=function n(l){(0,u.default)(this,n),this.operatorType=l.operatorType,this.identifiers=l.identifiers,this.arguments=l.args,this.children=l.children?l.children.map(function(l){return new n(l)}):[]},c=function n(l){(0,u.default)(this,n),this.operatorType=l.operatorType,this.identifiers=l.identifiers,this.arguments=l.args,this.dbHits=l.args.DbHits.toInt(),this.rows=l.args.Rows.toInt(),this.children=l.children?l.children.map(function(l){return new n(l)}):[]},h=function(){function n(l){var e=this;(0,u.default)(this,n),this._stats={nodesCreated:0,nodesDeleted:0,relationshipsCreated:0,relationshipsDeleted:0,propertiesSet:0,labelsAdded:0,labelsRemoved:0,indexesAdded:0,indexesRemoved:0,constraintsAdded:0,constraintsRemoved:0},(0,t.default)(l).forEach(function(n){e._stats[n.replace(/(\-\w)/g,function(n){return n[1].toUpperCase()})]=(0,i.isInt)(l[n])?l[n].toInt():l[n]})}return(0,r.default)(n,[{key:"containsUpdates",value:function(){var n=this;return(0,t.default)(this._stats).reduce(function(l,e){return l+n._stats[e]},0)>0}},{key:"nodesCreated",value:function(){return this._stats.nodesCreated}},{key:"nodesDeleted",value:function(){return this._stats.nodesDeleted}},{key:"relationshipsCreated",value:function(){return this._stats.relationshipsCreated}},{key:"relationshipsDeleted",value:function(){return this._stats.relationshipsDeleted}},{key:"propertiesSet",value:function(){return this._stats.propertiesSet}},{key:"labelsAdded",value:function(){return this._stats.labelsAdded}},{key:"labelsRemoved",value:function(){return this._stats.labelsRemoved}},{key:"indexesAdded",value:function(){return this._stats.indexesAdded}},{key:"indexesRemoved",value:function(){return this._stats.indexesRemoved}},{key:"constraintsAdded",value:function(){return this._stats.constraintsAdded}},{key:"constraintsRemoved",value:function(){return this._stats.constraintsRemoved}}]),n}(),d=function(){function n(l){(0,u.default)(this,n),this.code=l.code,this.title=l.title,this.description=l.description,this.severity=l.severity,this.position=n._constructPosition(l.position)}return(0,r.default)(n,null,[{key:"_constructPosition",value:function(n){return n?{offset:n.offset.toInt(),line:n.line.toInt(),column:n.column.toInt()}:{}}}]),n}(),f=function n(l){(0,u.default)(this,n),l&&(this.address=l.address,this.version=l.version)};l.statementType={READ_ONLY:"r",READ_WRITE:"rw",WRITE_ONLY:"w",SCHEMA_WRITE:"s"},l.default=a},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=i(e(0)),u=i(e(1)),r=e(3);function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(l,e){var u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;(0,t.default)(this,n),this.keys=l,this.length=l.length,this._fields=e,this._fieldLookup=u||function(n){var l={};return n.forEach(function(n,e){l[n]=e}),l}(l)}return(0,u.default)(n,[{key:"forEach",value:function(n){for(var l=0;l<this.keys.length;l++)n(this._fields[l],this.keys[l],this)}},{key:"toObject",value:function(){var n={};return this.forEach(function(l,e){n[e]=l}),n}},{key:"get",value:function(n){var l=void 0;if("number"!=typeof n){if(void 0===(l=this._fieldLookup[n]))throw(0,r.newError)("This record has no field with key '"+n+"', available key are: ["+this.keys+"].")}else l=n;if(l>this._fields.length-1||l<0)throw(0,r.newError)("This record has no field with index '"+l+"'. Remember that indexes start at `0`, and make sure your statement returns records in the shape you meant it to.");return this._fields[l]}},{key:"has",value:function(n){return"number"==typeof n?n>=0&&n<this._fields.length:void 0!==this._fieldLookup[n]}}]),n}();l.default=o},function(n,l,e){n.exports={default:e(174),__esModule:!0}},function(n,l,e){"use strict";l.__esModule=!0;var t,u=e(44),r=(t=u)&&t.__esModule?t:{default:t};l.default=function(n,l,e){return l in n?(0,r.default)(n,l,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[l]=e,n}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.DEFAULT_ACQUISITION_TIMEOUT=l.DEFAULT_MAX_SIZE=void 0;var t=r(e(0)),u=r(e(1));function r(n){return n&&n.__esModule?n:{default:n}}var i=100,o=6e4,a=function(){function n(l,e){(0,t.default)(this,n),this.maxSize=s(l,i),this.acquisitionTimeout=s(e,o)}return(0,u.default)(n,null,[{key:"defaultConfig",value:function(){return new n(i,o)}},{key:"fromDriverConfig",value:function(l){var e=c(l.connectionPoolSize),t=void 0;return c(l.maxConnectionPoolSize)?t=l.maxConnectionPoolSize:e?(console.warn('WARNING: neo4j-driver setting "connectionPoolSize" is deprecated, please use "maxConnectionPoolSize" instead'),t=l.connectionPoolSize):t=i,new n(t,c(l.connectionAcquisitionTimeout)?l.connectionAcquisitionTimeout:o)}}]),n}();function s(n,l){return 0===n||n?n:l}function c(n){return 0===n||n}l.default=a,l.DEFAULT_MAX_SIZE=i,l.DEFAULT_ACQUISITION_TIMEOUT=o},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=i(e(12)),u=i(e(0)),r=i(e(1));function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(){(0,u.default)(this,n)}return(0,r.default)(n,[{key:"resolve",value:function(){throw new Error("Abstract function")}},{key:"_resolveToItself",value:function(n){return t.default.resolve([n])}}]),n}();l.default=o},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.Dechunker=l.Chunker=void 0;var t=h(e(4)),u=h(e(0)),r=h(e(1)),i=h(e(5)),o=h(e(6)),a=h(e(78)),s=e(30),c=h(e(194));function h(n){return n&&n.__esModule?n:{default:n}}var d=1400,f=function(n){function l(n,e){(0,u.default)(this,l);var r=(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,0));return r._bufferSize=e||d,r._ch=n,r._buffer=(0,s.alloc)(r._bufferSize),r._currentChunkStart=0,r._chunkOpen=!1,r}return(0,o.default)(l,n),(0,r.default)(l,[{key:"putUInt8",value:function(n,l){this._ensure(1),this._buffer.writeUInt8(l)}},{key:"putInt8",value:function(n,l){this._ensure(1),this._buffer.writeInt8(l)}},{key:"putFloat64",value:function(n,l){this._ensure(8),this._buffer.writeFloat64(l)}},{key:"putBytes",value:function(n,l){for(;l.remaining()>0;)this._ensure(1),this._buffer.remaining()>l.remaining()?this._buffer.writeBytes(l):this._buffer.writeBytes(l.readSlice(this._buffer.remaining()));return this}},{key:"flush",value:function(){if(this._buffer.position>0){this._closeChunkIfOpen();var n=this._buffer;this._buffer=null,this._ch.write(n.getSlice(0,n.position)),this._buffer=(0,s.alloc)(this._bufferSize),this._chunkOpen=!1}return this}},{key:"messageBoundary",value:function(){this._closeChunkIfOpen(),this._buffer.remaining()<2&&this.flush(),this._buffer.writeInt16(0)}},{key:"_ensure",value:function(n){var l=this._chunkOpen?n:n+2;this._buffer.remaining()<l&&this.flush(),this._chunkOpen||(this._currentChunkStart=this._buffer.position,this._buffer.position=this._buffer.position+2,this._chunkOpen=!0)}},{key:"_closeChunkIfOpen",value:function(){if(this._chunkOpen){var n=this._buffer.position-(this._currentChunkStart+2);this._buffer.putUInt16(this._currentChunkStart,n),this._chunkOpen=!1}}}]),l}(a.default),p=function(){function n(){(0,u.default)(this,n),this._currentMessage=[],this._partialChunkHeader=0,this._state=this.AWAITING_CHUNK}return(0,r.default)(n,[{key:"AWAITING_CHUNK",value:function(n){return n.remaining()>=2?this._onHeader(n.readUInt16()):(this._partialChunkHeader=n.readUInt8()<<8,this.IN_HEADER)}},{key:"IN_HEADER",value:function(n){return this._onHeader(65535&(this._partialChunkHeader|n.readUInt8()))}},{key:"IN_CHUNK",value:function(n){return this._chunkSize<=n.remaining()?(this._currentMessage.push(n.readSlice(this._chunkSize)),this.AWAITING_CHUNK):(this._chunkSize-=n.remaining(),this._currentMessage.push(n.readSlice(n.remaining())),this.IN_CHUNK)}},{key:"CLOSED",value:function(n){}},{key:"_onHeader",value:function(n){if(0==n){var l=void 0;return l=1==this._currentMessage.length?this._currentMessage[0]:new c.default(this._currentMessage),this._currentMessage=[],this.onmessage(l),this.AWAITING_CHUNK}return this._chunkSize=n,this.IN_CHUNK}},{key:"write",value:function(n){for(;n.hasRemaining();)this._state=this._state(n)}}]),n}();l.Chunker=f,l.Dechunker=p},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t,u=e(0),r=(t=u)&&t.__esModule?t:{default:t},i=e(196),o=e(11);var a=7687,s=7474,c=7473,h=function n(l,e,t,u,i){(0,r.default)(this,n),this.scheme=l,this.host=e,this.port=t,this.hostAndPort=u,this.query=i};function d(n,l,e){if(!(n=(n||"").trim()))throw new Error("Illegal empty "+l+" in URL query '"+e+"'");return n}function f(n){var l="["===n.charAt(0),e="]"===n.charAt(n.length-1);if(l||e){if(l&&e)return n;throw new Error("Illegal IPv6 address "+n)}return"["+n+"]"}function p(n){return"http"===n?s:"https"===n?c:a}l.default={parseDatabaseUrl:function(n){(0,o.assertString)(n,"URL");var l=function(n){return-1===(n=n.trim()).indexOf("://")?{schemeMissing:!0,url:"none://"+n}:{schemeMissing:!1,url:n}}(n),e=(0,i.parse)(l.url),t=l.schemeMissing?null:function(n){return n?(":"===(n=n.trim()).charAt(n.length-1)&&(n=n.substring(0,n.length-1)),n):null}(e.scheme),u=function(n,l){if(!n)throw new Error("Unable to extract host from "+l);return n.trim()}(e.host),r=function(n){if(!n)throw new Error("Illegal host "+n);return n.indexOf(":")>=0?f(n):n}(u),a=function(n,l){var e=parseInt(n,10);return 0===e||e?e:p(l)}(e.port,t),s=r+":"+a,c=function(n,l){var e=function(n){return(n=(n||"").trim())&&"?"===n.charAt(0)&&(n=n.substring(1,n.length)),n}(n),t={};return e&&e.split("&").forEach(function(n){var e=n.split("=");if(2!==e.length)throw new Error("Invalid parameters: '"+e+"' in URL '"+l+"'.");var u=d(e[0],"key",l),r=d(e[1],"value",l);if(t[u])throw new Error("Duplicated query parameters with key '"+u+"' in URL '"+l+"'");t[u]=r}),t}(e.query,n);return new h(t,u,a,s,c)},defaultPortForScheme:p,formatIPv4Address:function(n,l){return n+":"+l},formatIPv6Address:function(n,l){return f(n)+":"+l}}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.VERSION_IN_DEV=l.VERSION_3_5_0=l.VERSION_3_4_0=l.VERSION_3_2_0=l.VERSION_3_1_0=l.ServerVersion=void 0;var t=o(e(52)),u=o(e(0)),r=o(e(1)),i=e(11);function o(n){return n&&n.__esModule?n:{default:n}}var a=new RegExp("^(Neo4j/)?(\\d+)\\.(\\d+)(?:\\.)?(\\d*)(\\.|-|\\+)?([0-9A-Za-z-.]*)?$"),s=function(){function n(l,e,t){(0,u.default)(this,n),this.major=l,this.minor=e,this.patch=t}return(0,r.default)(n,[{key:"compareTo",value:function(n){var l=h(this.major,n.major);return 0===l&&0===(l=h(this.minor,n.minor))&&(l=h(this.patch,n.patch)),l}}],[{key:"fromDriver",value:function(l){var e=l.session();return e.run("RETURN 1").then(function(l){return e.close(),n.fromString(l.summary.server.version)})}},{key:"fromString",value:function(l){if(!l)return new n(3,0,0);if((0,i.assertString)(l,"Neo4j version string"),l.toLowerCase()==="Neo4j/dev".toLowerCase())return y;var e=l.match(a);if(!e)throw new Error("Unparsable Neo4j version: "+l);return new n(c(e[2]),c(e[3]),c(e[4]||0))}}]),n}();function c(n,l){var e=parseInt(n,10);if(!e&&0!==e)throw new Error("Unparsable number "+l+": '"+n+"'");return e}function h(n,l){return n<l?-1:n===l?0:1}var d=new s(3,1,0),f=new s(3,2,0),p=new s(3,4,0),g=new s(3,5,0),v=t.default,y=new s(v,v,v);l.ServerVersion=s,l.VERSION_3_1_0=d,l.VERSION_3_2_0=f,l.VERSION_3_4_0=p,l.VERSION_3_5_0=g,l.VERSION_IN_DEV=y},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(0)),u=c(e(1)),r=c(e(79)),i=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(111)),o=e(3),a=c(e(41)),s=c(e(54));function c(n){return n&&n.__esModule?n:{default:n}}var h=function(){function n(l,e,u){(0,t.default)(this,n),this._connection=l,this._packer=this._createPacker(e),this._unpacker=this._createUnpacker(u)}return(0,u.default)(n,[{key:"packer",value:function(){return this._packer}},{key:"unpacker",value:function(){return this._unpacker}},{key:"transformMetadata",value:function(n){return n}},{key:"initialize",value:function(n,l,e){var t=r.default.init(n,l);this._connection.write(t,e,!0)}},{key:"prepareToClose",value:function(n){}},{key:"beginTransaction",value:function(n,l,e){d(l,this._connection,e);var t=r.default.run("BEGIN",n.asBeginTransactionParameters()),u=r.default.pullAll();this._connection.write(t,e,!1),this._connection.write(u,e,!1)}},{key:"commitTransaction",value:function(n){this.run("COMMIT",{},a.default.empty(),s.default.empty(),n)}},{key:"rollbackTransaction",value:function(n){this.run("ROLLBACK",{},a.default.empty(),s.default.empty(),n)}},{key:"run",value:function(n,l,e,t,u){d(t,this._connection,u);var i=r.default.run(n,l),o=r.default.pullAll();this._connection.write(i,u,!1),this._connection.write(o,u,!0)}},{key:"reset",value:function(n){var l=r.default.reset();this._connection.write(l,n,!0)}},{key:"_createPacker",value:function(n){return new i.Packer(n)}},{key:"_createUnpacker",value:function(n){return new i.Unpacker(n)}}]),n}();function d(n,l,e){if(!n.isEmpty()){var t=(0,o.newError)("Driver is connected to the database that does not support transaction configuration. Please upgrade to neo4j 3.5.0 or later in order to use this functionality");throw l._handleFatalError(t),e.onError(t),t}}l.default=h},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.Structure=l.Unpacker=l.Packer=void 0;var t=p(e(85)),u=p(e(42)),r=p(e(24)),i=p(e(34)),o=p(e(0)),a=p(e(1)),s=e(30),c=e(13),h=p(c),d=e(3),f=(e(107),e(70));function p(n){return n&&n.__esModule?n:{default:n}}var g=function(){function n(l,e){(0,o.default)(this,n),this.signature=l,this.fields=e}return(0,a.default)(n,[{key:"toString",value:function(){for(var n=0;n<this.fields.length;n++)n>0&&", ",this.fields[n];return"Structure("+this.signature+", ["+this.fields+"])"}}]),n}(),v=function(){function n(l){(0,o.default)(this,n),this._ch=l,this._byteArraysSupported=!0}return(0,a.default)(n,[{key:"packable",value:function(n,l){var e=this;if(null===n)return function(){return e._ch.writeUInt8(192)};if(!0===n)return function(){return e._ch.writeUInt8(195)};if(!1===n)return function(){return e._ch.writeUInt8(194)};if("number"==typeof n)return function(){return e.packFloat(n)};if("string"==typeof n)return function(){return e.packString(n,l)};if((0,c.isInt)(n))return function(){return e.packInteger(n)};if(n instanceof Int8Array)return function(){return e.packBytes(n,l)};if(n instanceof Array)return function(){e.packListHeader(n.length,l);for(var t=0;t<n.length;t++)e.packable(void 0===n[t]?null:n[t],l)()};if(function(n){if(null==n)return!1;return"function"==typeof n[t.default]}(n))return this.packableIterable(n,l);if(n instanceof f.Node)return this._nonPackableValue("It is not allowed to pass nodes in query parameters, given: "+n,l);if(n instanceof f.Relationship)return this._nonPackableValue("It is not allowed to pass relationships in query parameters, given: "+n,l);if(n instanceof f.Path)return this._nonPackableValue("It is not allowed to pass paths in query parameters, given: "+n,l);if(n instanceof g){for(var u=[],o=0;o<n.fields.length;o++)u[o]=this.packable(n.fields[o],l);return function(){return e.packStruct(n.signature,u)}}return"object"==(void 0===n?"undefined":(0,i.default)(n))?function(){for(var t=(0,r.default)(n),u=0,i=0;i<t.length;i++)void 0!==n[t[i]]&&u++;e.packMapHeader(u,l);for(var o=0;o<t.length;o++){var a=t[o];void 0!==n[a]&&(e.packString(a),e.packable(n[a],l)())}}:this._nonPackableValue("Unable to pack the given value: "+n,l)}},{key:"packableIterable",value:function(n,l){try{var e=(0,u.default)(n);return this.packable(e,l)}catch(e){l((0,d.newError)("Cannot pack given iterable, "+e.message+": "+n))}}},{key:"packStruct",value:function(n,l,e){l=l||[],this.packStructHeader(l.length,n,e);for(var t=0;t<l.length;t++)l[t]()}},{key:"packInteger",value:function(n){var l=n.high,e=n.low;n.greaterThanOrEqual(-16)&&n.lessThan(128)?this._ch.writeInt8(e):n.greaterThanOrEqual(-128)&&n.lessThan(-16)?(this._ch.writeUInt8(200),this._ch.writeInt8(e)):n.greaterThanOrEqual(-32768)&&n.lessThan(32768)?(this._ch.writeUInt8(201),this._ch.writeInt16(e)):n.greaterThanOrEqual(-2147483648)&&n.lessThan(2147483648)?(this._ch.writeUInt8(202),this._ch.writeInt32(e)):(this._ch.writeUInt8(203),this._ch.writeInt32(l),this._ch.writeInt32(e))}},{key:"packFloat",value:function(n){this._ch.writeUInt8(193),this._ch.writeFloat64(n)}},{key:"packString",value:function(n,l){var e=s.utf8.encode(n),t=e.length;t<16?(this._ch.writeUInt8(128|t),this._ch.writeBytes(e)):t<256?(this._ch.writeUInt8(208),this._ch.writeUInt8(t),this._ch.writeBytes(e)):t<65536?(this._ch.writeUInt8(209),this._ch.writeUInt8(t/256>>0),this._ch.writeUInt8(t%256),this._ch.writeBytes(e)):t<4294967296?(this._ch.writeUInt8(210),this._ch.writeUInt8((t/16777216>>0)%256),this._ch.writeUInt8((t/65536>>0)%256),this._ch.writeUInt8((t/256>>0)%256),this._ch.writeUInt8(t%256),this._ch.writeBytes(e)):l((0,d.newError)("UTF-8 strings of size "+t+" are not supported"))}},{key:"packListHeader",value:function(n,l){n<16?this._ch.writeUInt8(144|n):n<256?(this._ch.writeUInt8(212),this._ch.writeUInt8(n)):n<65536?(this._ch.writeUInt8(213),this._ch.writeUInt8((n/256>>0)%256),this._ch.writeUInt8(n%256)):n<4294967296?(this._ch.writeUInt8(214),this._ch.writeUInt8((n/16777216>>0)%256),this._ch.writeUInt8((n/65536>>0)%256),this._ch.writeUInt8((n/256>>0)%256),this._ch.writeUInt8(n%256)):l((0,d.newError)("Lists of size "+n+" are not supported"))}},{key:"packBytes",value:function(n,l){if(this._byteArraysSupported){this.packBytesHeader(n.length,l);for(var e=0;e<n.length;e++)this._ch.writeInt8(n[e])}else l((0,d.newError)("Byte arrays are not supported by the database this driver is connected to"))}},{key:"packBytesHeader",value:function(n,l){n<256?(this._ch.writeUInt8(204),this._ch.writeUInt8(n)):n<65536?(this._ch.writeUInt8(205),this._ch.writeUInt8((n/256>>0)%256),this._ch.writeUInt8(n%256)):n<4294967296?(this._ch.writeUInt8(206),this._ch.writeUInt8((n/16777216>>0)%256),this._ch.writeUInt8((n/65536>>0)%256),this._ch.writeUInt8((n/256>>0)%256),this._ch.writeUInt8(n%256)):l((0,d.newError)("Byte arrays of size "+n+" are not supported"))}},{key:"packMapHeader",value:function(n,l){n<16?this._ch.writeUInt8(160|n):n<256?(this._ch.writeUInt8(216),this._ch.writeUInt8(n)):n<65536?(this._ch.writeUInt8(217),this._ch.writeUInt8(n/256>>0),this._ch.writeUInt8(n%256)):n<4294967296?(this._ch.writeUInt8(218),this._ch.writeUInt8((n/16777216>>0)%256),this._ch.writeUInt8((n/65536>>0)%256),this._ch.writeUInt8((n/256>>0)%256),this._ch.writeUInt8(n%256)):l((0,d.newError)("Maps of size "+n+" are not supported"))}},{key:"packStructHeader",value:function(n,l,e){n<16?(this._ch.writeUInt8(176|n),this._ch.writeUInt8(l)):n<256?(this._ch.writeUInt8(220),this._ch.writeUInt8(n),this._ch.writeUInt8(l)):n<65536?(this._ch.writeUInt8(221),this._ch.writeUInt8(n/256>>0),this._ch.writeUInt8(n%256)):e((0,d.newError)("Structures of size "+n+" are not supported"))}},{key:"disableByteArrays",value:function(){this._byteArraysSupported=!1}},{key:"_nonPackableValue",value:function(n,l){return l&&l((0,d.newError)(n,d.PROTOCOL_ERROR)),function(){}}}]),n}(),y=function(){function n(){var l=arguments.length>0&&void 0!==arguments[0]&&arguments[0];(0,o.default)(this,n),this._disableLosslessIntegers=l}return(0,a.default)(n,[{key:"unpack",value:function(n){var l=n.readUInt8(),e=240&l,t=15&l;if(192==l)return null;var u=this._unpackBoolean(l);if(null!==u)return u;var r=this._unpackNumberOrInteger(l,n);if(null!==r)return this._disableLosslessIntegers&&(0,c.isInt)(r)?r.toNumberOrInfinity():r;var i=this._unpackString(l,e,t,n);if(null!==i)return i;var o=this._unpackList(l,e,t,n);if(null!==o)return o;var a=this._unpackByteArray(l,n);if(null!==a)return a;var s=this._unpackMap(l,e,t,n);if(null!==s)return s;var h=this._unpackStruct(l,e,t,n);if(null!==h)return h;throw(0,d.newError)("Unknown packed value with marker "+l.toString(16))}},{key:"unpackInteger",value:function(n){var l=n.readUInt8(),e=this._unpackInteger(l,n);if(null==e)throw(0,d.newError)("Unable to unpack integer value with marker "+l.toString(16));return e}},{key:"_unpackBoolean",value:function(n){return 195==n||194!=n&&null}},{key:"_unpackNumberOrInteger",value:function(n,l){return 193==n?l.readFloat64():this._unpackInteger(n,l)}},{key:"_unpackInteger",value:function(n,l){if(n>=0&&n<128)return(0,c.int)(n);if(n>=240&&n<256)return(0,c.int)(n-256);if(200==n)return(0,c.int)(l.readInt8());if(201==n)return(0,c.int)(l.readInt16());if(202==n){var e=l.readInt32();return(0,c.int)(e)}if(203==n){var t=l.readInt32(),u=l.readInt32();return new h.default(u,t)}return null}},{key:"_unpackString",value:function(n,l,e,t){return 128==l?s.utf8.decode(t,e):208==n?s.utf8.decode(t,t.readUInt8()):209==n?s.utf8.decode(t,t.readUInt16()):210==n?s.utf8.decode(t,t.readUInt32()):null}},{key:"_unpackList",value:function(n,l,e,t){return 144==l?this._unpackListWithSize(e,t):212==n?this._unpackListWithSize(t.readUInt8(),t):213==n?this._unpackListWithSize(t.readUInt16(),t):214==n?this._unpackListWithSize(t.readUInt32(),t):null}},{key:"_unpackListWithSize",value:function(n,l){for(var e=[],t=0;t<n;t++)e.push(this.unpack(l));return e}},{key:"_unpackByteArray",value:function(n,l){return 204==n?this._unpackByteArrayWithSize(l.readUInt8(),l):205==n?this._unpackByteArrayWithSize(l.readUInt16(),l):206==n?this._unpackByteArrayWithSize(l.readUInt32(),l):null}},{key:"_unpackByteArrayWithSize",value:function(n,l){for(var e=new Int8Array(n),t=0;t<n;t++)e[t]=l.readInt8();return e}},{key:"_unpackMap",value:function(n,l,e,t){return 160==l?this._unpackMapWithSize(e,t):216==n?this._unpackMapWithSize(t.readUInt8(),t):217==n?this._unpackMapWithSize(t.readUInt16(),t):218==n?this._unpackMapWithSize(t.readUInt32(),t):null}},{key:"_unpackMapWithSize",value:function(n,l){for(var e={},t=0;t<n;t++){e[this.unpack(l)]=this.unpack(l)}return e}},{key:"_unpackStruct",value:function(n,l,e,t){return 176==l?this._unpackStructWithSize(e,t):220==n?this._unpackStructWithSize(t.readUInt8(),t):221==n?this._unpackStructWithSize(t.readUInt16(),t):null}},{key:"_unpackStructWithSize",value:function(n,l){var e=l.readUInt8();return 78==e?this._unpackNode(n,l):82==e?this._unpackRelationship(n,l):114==e?this._unpackUnboundRelationship(n,l):80==e?this._unpackPath(n,l):this._unpackUnknownStruct(e,n,l)}},{key:"_unpackNode",value:function(n,l){return this._verifyStructSize("Node",3,n),new f.Node(this.unpack(l),this.unpack(l),this.unpack(l))}},{key:"_unpackRelationship",value:function(n,l){return this._verifyStructSize("Relationship",5,n),new f.Relationship(this.unpack(l),this.unpack(l),this.unpack(l),this.unpack(l),this.unpack(l))}},{key:"_unpackUnboundRelationship",value:function(n,l){return this._verifyStructSize("UnboundRelationship",3,n),new f.UnboundRelationship(this.unpack(l),this.unpack(l),this.unpack(l))}},{key:"_unpackPath",value:function(n,l){this._verifyStructSize("Path",3,n);for(var e=this.unpack(l),t=this.unpack(l),u=this.unpack(l),r=[],i=e[0],o=0;o<u.length;o+=2){var a=e[u[o+1]],s=u[o],c=void 0;s>0?(c=t[s-1])instanceof f.UnboundRelationship&&(t[s-1]=c=c.bind(i.identity,a.identity)):(c=t[-s-1])instanceof f.UnboundRelationship&&(t[-s-1]=c=c.bind(a.identity,i.identity)),r.push(new f.PathSegment(i,c,a)),i=a}return new f.Path(e[0],e[e.length-1],r)}},{key:"_unpackUnknownStruct",value:function(n,l,e){for(var t=new g(n,[]),u=0;u<l;u++)t.fields.push(this.unpack(e));return t}},{key:"_verifyStructSize",value:function(n,l,e){if(l!==e)throw(0,d.newError)("Wrong struct size for "+n+", expected "+l+" but was "+e,d.PROTOCOL_ERROR)}}]),n}();l.Packer=v,l.Unpacker=y,l.Structure=g},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(4)),u=c(e(0)),r=c(e(1)),i=c(e(5)),o=c(e(6)),a=c(e(110)),s=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(201));function c(n){return n&&n.__esModule?n:{default:n}}var h=function(n){function l(n,e,r){return(0,u.default)(this,l),(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,n,e,r))}return(0,o.default)(l,n),(0,r.default)(l,[{key:"_createPacker",value:function(n){return new s.Packer(n)}},{key:"_createUnpacker",value:function(n){return new s.Unpacker(n)}}]),l}(a.default);l.default=h},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=s(e(0)),u=s(e(1));l.normalizeSecondsForDuration=function(n,l){return(0,r.int)(n).add(A(l,_))},l.normalizeNanosecondsForDuration=function(n){return P(n,_)},l.localTimeToNanoOfDay=function(n,l,e,t){n=(0,r.int)(n),l=(0,r.int)(l),e=(0,r.int)(e),t=(0,r.int)(t);var u=n.multiply(T);return(u=(u=u.add(l.multiply(E))).add(e.multiply(_))).add(t)},l.nanoOfDayToLocalTime=I,l.localDateTimeToEpochSecond=function(n,l,e,t,u,i,o){var a=N(n,l,e),s=function(n,l,e){n=(0,r.int)(n),l=(0,r.int)(l),e=(0,r.int)(e);var t=n.multiply(w);return(t=t.add(l.multiply(b))).add(e)}(t,u,i);return a.multiply(S).add(s)},l.epochSecondAndNanoToLocalDateTime=function(n,l){var e=A(n,S),t=P(n,S).multiply(_).add(l),u=D(e),r=I(t);return new i.LocalDateTime(u.year,u.month,u.day,r.hour,r.minute,r.second,r.nanosecond)},l.dateToEpochDay=N,l.epochDayToDate=D,l.durationToIsoString=function(n,l,e,t){var u=L(n),i=L(l),o=function(n,l){n=(0,r.int)(n),l=(0,r.int)(l);var e=void 0,t=void 0,u=n.isNegative(),i=l.greaterThan(0);e=u&&i?n.equals(-1)?"-0":n.add(1).toString():n.toString();i&&(t=M(u?l.negate().add(2*_).modulo(_):l.add(_).modulo(_)));return t?e+t:e}(e,t);return"P"+u+"M"+i+"DT"+o+"S"},l.timeToIsoString=function(n,l,e,t){var u=L(n,2),r=L(l,2),i=L(e,2),o=M(t);return u+":"+r+":"+i+o},l.timeZoneOffsetToIsoString=function(n){if((n=(0,r.int)(n)).equals(0))return"Z";var l=n.isNegative();l&&(n=n.multiply(-1));var e=l?"-":"+",t=L(n.div(w),2),u=L(n.div(b).modulo(m),2),i=n.modulo(b),o=i.equals(0)?null:L(i,2);return o?""+e+t+":"+u+":"+o:""+e+t+":"+u},l.dateToIsoString=function(n,l,e){var t=(n=(0,r.int)(n)).isNegative();t&&(n=n.multiply(-1));var u=L(n,4);t&&(u="-"+u);var i=L(l,2),o=L(e,2);return u+"-"+i+"-"+o},l.totalNanoseconds=function(n,l){l=l||0;var e=n.getMilliseconds()*x;return(0,r.isInt)(l)?l.add(e):l+e},l.timeZoneOffsetInSeconds=function(n){var l=n.getTimezoneOffset();if(0===l)return 0;return-1*l*b},l.assertValidYear=function(n){return O(n,h,"Year")},l.assertValidMonth=function(n){return O(n,d,"Month")},l.assertValidDay=function(n){return O(n,f,"Day")},l.assertValidHour=function(n){return O(n,p,"Hour")},l.assertValidMinute=function(n){return O(n,g,"Minute")},l.assertValidSecond=function(n){return O(n,v,"Second")},l.assertValidNanosecond=function(n){return O(n,y,"Nanosecond")};var r=e(13),i=e(55),o=e(11),a=e(3);function s(n){return n&&n.__esModule?n:{default:n}}var c=function(){function n(l,e){(0,t.default)(this,n),this._minNumber=l,this._maxNumber=e,this._minInteger=(0,r.int)(l),this._maxInteger=(0,r.int)(e)}return(0,u.default)(n,[{key:"contains",value:function(n){return(0,r.isInt)(n)?n.greaterThanOrEqual(this._minInteger)&&n.lessThanOrEqual(this._maxInteger):n>=this._minNumber&&n<=this._maxNumber}},{key:"toString",value:function(){return"["+this._minNumber+", "+this._maxNumber+"]"}}]),n}(),h=new c(-999999999,999999999),d=new c(1,12),f=new c(1,31),p=new c(0,23),g=new c(0,59),v=new c(0,59),y=new c(0,999999999),m=60,b=60,w=b*m,_=1e9,x=1e6,E=_*b,T=E*m,k=719528,C=146097,S=86400;function I(n){var l=(n=(0,r.int)(n)).div(T),e=(n=n.subtract(l.multiply(T))).div(E),t=(n=n.subtract(e.multiply(E))).div(_),u=n.subtract(t.multiply(_));return new i.LocalTime(l,e,t,u)}function N(n,l,e){n=(0,r.int)(n),l=(0,r.int)(l),e=(0,r.int)(e);var t=n.multiply(365);return t=(t=(t=n.greaterThanOrEqual(0)?t.add(n.add(3).div(4).subtract(n.add(99).div(100)).add(n.add(399).div(400))):t.subtract(n.div(-4).subtract(n.div(-100)).add(n.div(-400)))).add(l.multiply(367).subtract(362).div(12))).add(e.subtract(1)),l.greaterThan(2)&&(t=t.subtract(1),function(n){return!!(n=(0,r.int)(n)).modulo(4).equals(0)&&(!n.modulo(100).equals(0)||!!n.modulo(400).equals(0))}(n)||(t=t.subtract(1))),t.subtract(k)}function D(n){var l=(n=(0,r.int)(n)).add(k).subtract(60),e=(0,r.int)(0);if(l.lessThan(0)){var t=l.add(1).div(C).subtract(1);e=t.multiply(400),l=l.add(t.multiply(-C))}var u=l.multiply(400).add(591).div(C),o=l.subtract(u.multiply(365).add(u.div(4)).subtract(u.div(100)).add(u.div(400)));o.lessThan(0)&&(u=u.subtract(1),o=l.subtract(u.multiply(365).add(u.div(4)).subtract(u.div(100)).add(u.div(400)))),u=u.add(e);var a=o,s=a.multiply(5).add(2).div(153),c=s.add(2).modulo(12).add(1),h=a.subtract(s.multiply(306).add(5).div(10)).add(1);return u=u.add(s.div(10)),new i.Date(u,c,h)}function O(n,l,e){if((0,o.assertNumberOrInteger)(n,e),!l.contains(n))throw(0,a.newError)(e+" is expected to be in range "+l+" but was: "+n);return n}function A(n,l){n=(0,r.int)(n),l=(0,r.int)(l);var e=n.div(l);return n.isPositive()!==l.isPositive()&&e.multiply(l).notEquals(n)&&(e=e.subtract(1)),e}function P(n,l){return n=(0,r.int)(n),l=(0,r.int)(l),n.subtract(A(n,l).multiply(l))}function M(n){return(n=(0,r.int)(n)).equals(0)?"":"."+L(n,9)}function L(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,e=(n=(0,r.int)(n)).isNegative();e&&(n=n.negate());var t=n.toString();if(l)for(;t.length<l;)t="0"+t;return e?"-"+t:t}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.SingleConnectionProvider=l.LoadBalancer=l.DirectConnectionProvider=void 0;var t=g(e(12)),u=g(e(4)),r=g(e(5)),i=g(e(6)),o=g(e(0)),a=g(e(1)),s=e(3),c=e(21),h=g(e(75)),d=g(e(115)),f=g(e(230)),p=g(e(231));function g(n){return n&&n.__esModule?n:{default:n}}var v=function(){function n(){(0,o.default)(this,n)}return(0,a.default)(n,[{key:"acquireConnection",value:function(n){throw new Error("Abstract function")}},{key:"_withAdditionalOnErrorCallback",value:function(n,l){return n.catch(function(n){l(n)}),n}}]),n}(),y=(l.DirectConnectionProvider=function(n){function l(n,e,t){(0,o.default)(this,l);var i=(0,r.default)(this,(l.__proto__||(0,u.default)(l)).call(this));return i._hostPort=n,i._connectionPool=e,i._driverOnErrorCallback=t,i}return(0,i.default)(l,n),(0,a.default)(l,[{key:"acquireConnection",value:function(n){var l=this._connectionPool.acquire(this._hostPort);return this._withAdditionalOnErrorCallback(l,this._driverOnErrorCallback)}}]),l}(v),l.LoadBalancer=function(n){function l(n,e,t,i,a,s,c){(0,o.default)(this,l);var h=(0,r.default)(this,(l.__proto__||(0,u.default)(l)).call(this));return h._seedRouter=n,h._routingTable=new d.default([h._seedRouter]),h._rediscovery=new f.default(new p.default(e)),h._connectionPool=t,h._driverOnErrorCallback=s,h._loadBalancingStrategy=i,h._hostNameResolver=a,h._log=c,h._useSeedRouter=!1,h}return(0,i.default)(l,n),(0,a.default)(l,[{key:"acquireConnection",value:function(n){var l=this,e=this._freshRoutingTable(n).then(function(e){if(n===c.READ){var t=l._loadBalancingStrategy.selectReader(e.readers);return l._acquireConnectionToServer(t,"read")}if(n===c.WRITE){var u=l._loadBalancingStrategy.selectWriter(e.writers);return l._acquireConnectionToServer(u,"write")}throw(0,s.newError)("Illegal mode "+n)});return this._withAdditionalOnErrorCallback(e,this._driverOnErrorCallback)}},{key:"forget",value:function(n){this._routingTable.forget(n),this._connectionPool.purge(n)}},{key:"forgetWriter",value:function(n){this._routingTable.forgetWriter(n)}},{key:"_acquireConnectionToServer",value:function(n,l){return n?this._connectionPool.acquire(n):t.default.reject((0,s.newError)("Failed to obtain connection towards "+l+" server. Known routing table is: "+this._routingTable,s.SESSION_EXPIRED))}},{key:"_freshRoutingTable",value:function(n){var l=this._routingTable;return l.isStaleFor(n)?(this._log.info("Routing table is stale for "+n+": "+l),this._refreshRoutingTable(l)):t.default.resolve(l)}},{key:"_refreshRoutingTable",value:function(n){var l=n.routers;return this._useSeedRouter?this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(l,n):this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(l,n)}},{key:"_fetchRoutingTableFromSeedRouterFallbackToKnownRouters",value:function(n,l){var e=this;return this._fetchRoutingTableUsingSeedRouter([],this._seedRouter).then(function(t){return t?(e._useSeedRouter=!1,t):e._fetchRoutingTableUsingKnownRouters(n,l)}).then(function(n){return e._applyRoutingTableIfPossible(n),n})}},{key:"_fetchRoutingTableFromKnownRoutersFallbackToSeedRouter",value:function(n,l){var e=this;return this._fetchRoutingTableUsingKnownRouters(n,l).then(function(l){return l||e._fetchRoutingTableUsingSeedRouter(n,e._seedRouter)}).then(function(n){return e._applyRoutingTableIfPossible(n),n})}},{key:"_fetchRoutingTableUsingKnownRouters",value:function(n,e){return this._fetchRoutingTable(n,e).then(function(t){if(t)return t;var u=n.length-1;return l._forgetRouter(e,n,u),null})}},{key:"_fetchRoutingTableUsingSeedRouter",value:function(n,l){var e=this;return this._hostNameResolver.resolve(l).then(function(l){var t=l.filter(function(l){return n.indexOf(l)<0});return e._fetchRoutingTable(t,null)})}},{key:"_fetchRoutingTable",value:function(n,e){var u=this;return n.reduce(function(t,r,i){return t.then(function(t){if(t)return t;var o=i-1;return l._forgetRouter(e,n,o),u._createSessionForRediscovery(r).then(function(n){return n?u._rediscovery.lookupRoutingTableOnRouter(n,r):null})})},t.default.resolve(null))}},{key:"_createSessionForRediscovery",value:function(n){return this._connectionPool.acquire(n).then(function(n){var l=new y(n);return new h.default(c.READ,l)}).catch(function(n){if(n&&"Neo.ClientError.Security.Unauthorized"===n.code)throw n;return null})}},{key:"_applyRoutingTableIfPossible",value:function(n){if(!n)throw(0,s.newError)("Could not perform discovery. No routing servers available. Known routing table: "+this._routingTable,s.SERVICE_UNAVAILABLE);0===n.writers.length&&(this._useSeedRouter=!0),this._updateRoutingTable(n)}},{key:"_updateRoutingTable",value:function(n){var l=this;this._routingTable.serversDiff(n).forEach(function(n){return l._connectionPool.purge(n)}),this._routingTable=n,this._log.info("Updated routing table "+n)}}],[{key:"_forgetRouter",value:function(n,l,e){var t=l[e];n&&t&&n.forgetRouter(t)}}]),l}(v),l.SingleConnectionProvider=function(n){function l(n){(0,o.default)(this,l);var e=(0,r.default)(this,(l.__proto__||(0,u.default)(l)).call(this));return e._connection=n,e}return(0,i.default)(l,n),(0,a.default)(l,[{key:"acquireConnection",value:function(n){var l=this._connection;return this._connection=null,t.default.resolve(l)}}]),l}(v))},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(116)),u=c(e(42)),r=c(e(117)),i=c(e(0)),o=c(e(1)),a=e(13),s=e(21);function c(n){return n&&n.__esModule?n:{default:n}}var h=function(){function n(l,e,t,u){(0,i.default)(this,n),this.routers=l||[],this.readers=e||[],this.writers=t||[],this.expirationTime=u||(0,a.int)(0)}return(0,o.default)(n,[{key:"forget",value:function(n){this.readers=d(this.readers,n),this.writers=d(this.writers,n)}},{key:"forgetRouter",value:function(n){this.routers=d(this.routers,n)}},{key:"forgetWriter",value:function(n){this.writers=d(this.writers,n)}},{key:"serversDiff",value:function(n){var l=new r.default(this._allServers());return n._allServers().forEach(function(n){return l.delete(n)}),(0,u.default)(l)}},{key:"isStaleFor",value:function(n){return this.expirationTime.lessThan(Date.now())||this.routers.length<1||n===s.READ&&0===this.readers.length||n===s.WRITE&&0===this.writers.length}},{key:"_allServers",value:function(){return[].concat((0,t.default)(this.routers),(0,t.default)(this.readers),(0,t.default)(this.writers))}},{key:"toString",value:function(){return"RoutingTable[expirationTime="+this.expirationTime+", currentTime="+Date.now()+", routers=["+this.routers+"], readers=["+this.readers+"], writers=["+this.writers+"]]"}}]),n}();function d(n,l){return n.filter(function(n){return n!==l})}l.default=h},function(n,l,e){"use strict";l.__esModule=!0;var t,u=e(42),r=(t=u)&&t.__esModule?t:{default:t};l.default=function(n){if(Array.isArray(n)){for(var l=0,e=Array(n.length);l<n.length;l++)e[l]=n[l];return e}return(0,r.default)(n)}},function(n,l,e){n.exports={default:e(216),__esModule:!0}},function(n,l,e){var t=e(10);n.exports=function(n,l){if(!t(n)||n._t!==l)throw TypeError("Incompatible receiver, "+l+" required!");return n}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=i(e(0)),u=i(e(1)),r=e(3);function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(l,e,u){(0,t.default)(this,n),this._errorCode=l,this._handleUnavailability=e||a,this._handleWriteFailure=u||a}return(0,u.default)(n,[{key:"errorCode",value:function(){return this._errorCode}},{key:"handleAndTransformError",value:function(n,l){return function(n){if(n)return n.code===r.SESSION_EXPIRED||n.code===r.SERVICE_UNAVAILABLE||"Neo.TransientError.General.DatabaseUnavailable"===n.code;return!1}(n)?this._handleUnavailability(n,l):function(n){if(n)return"Neo.ClientError.Cluster.NotALeader"===n.code||"Neo.ClientError.General.ForbiddenOnReadOnlyDatabase"===n.code;return!1}(n)?this._handleWriteFailure(n,l):n}}]),n}();function a(n){return n}l.default=o},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=i(e(52)),u=i(e(0)),r=i(e(1));function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(l){(0,u.default)(this,n),this._offset=l||0}return(0,r.default)(n,[{key:"next",value:function(n){if(0===n)return-1;var l=this._offset;return this._offset+=1,this._offset===t.default&&(this._offset=0),l%n}}]),n}();l.default=o},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=r(e(0)),u=r(e(1));function r(n){return n&&n.__esModule?n:{default:n}}var i=function(){function n(){(0,t.default)(this,n)}return(0,u.default)(n,[{key:"selectReader",value:function(n){throw new Error("Abstract function")}},{key:"selectWriter",value:function(n){throw new Error("Abstract function")}}]),n}();l.default=i},function(n,l,e){let t=e(123),u=e(130),r=e(131),i=e(82),o=e(243),a=e(244);t.use(u),o(t,i),a(t);let s=window.cyto=t({container:document.getElementById("cy"),elements:[{data:{id:"-1",name:"Actor"},classes:"Actor"},{data:{id:"-2",title:"Movie"},classes:"Movie"},{data:{id:"-3",source:"-1",target:"-2",directed:"false"}}],classes:["Actor","Movie"],style:[{selector:".Actor",style:{label:"data(name)","text-halign":"center","text-valign":"center","font-size":"9","background-color":"rgb(0, 214, 253)"}},{selector:".Movie",style:{shape:"round-rectangle",label:"data(title)","text-halign":"center","text-valign":"center","font-size":"9","background-color":"rgb(0, 191, 0)"}}],layout:{name:"cose-bilkent",fit:!0,padding:320}}),c={name:"cose-bilkent",nodeDimensionsIncludeLabels:!0,fit:!0,numIter:5e3},h={name:"cose-bilkent",randomize:!1,nodeDimensionsIncludeLabels:!0,fit:!0,numIter:2500},d={menuItems:[{id:"Show movies",content:"Show movies",selector:".Actor",onClickFunction:function(n){let l=n.target||n.cyTarget;l.id()>=0&&f(l.id())}},{id:"Show actors",content:"Show actors",selector:".Movie",onClickFunction:function(n){let l=n.target||n.cyTarget;l.id()>=0&&f(l.id())}}]};async function f(n){document.getElementById("loader").style.display="block",s.startBatch();let l=await r("MATCH ({id : {idParam}})-[:ACTS_IN]-(n) return n",{idParam:n});for(var e in l)0==s.nodes("[id = '"+l[e].id+"']").length&&(l[e].imdbId?s.add({data:l[e],classes:"Movie"}):s.add({data:l[e],classes:"Actor"})),0==s.edges("[id = '"+n+"-"+l[e].id+"']").length&&s.add({data:{id:n+"-"+l[e].id,source:n,target:l[e].id,directed:"false"}});s.endBatch(),document.getElementById("loader").style.display="none",s.layout(h).run(),p()}function p(){s.nodes(".Movie").forEach(function(n){var l;n.qtip({content:{text:(l=n,"<p><b>Genre:</b> "+l.data("genre")+"</p><p><b>Studio:</b> "+l.data("studio")+"</p><p><b>Run Time:</b> "+l.data("runtime")+"</p><p><b>Tag Line:</b> "+l.data("tagline")+"</p>"),title:n.data("title")},style:{classes:"qtip-bootstrap"},position:{my:"bottom center",at:"top center",target:n}})}),s.nodes(".Actor").forEach(function(n){var l;n.qtip({content:{text:(l=n,"<p><b>Birth Place:</b> "+l.data("birthplace")+"</p><p><b>Biography:</b> "+l.data("biography")+"</p>"),title:n.data("name")},style:{classes:"qtip-bootstrap"},position:{my:"bottom center",at:"top center",target:n}})})}s.contextMenus(d),document.getElementById("submitButton").addEventListener("click",function(){let n=document.getElementById("actor_textfield").value,l=parseInt(document.getElementById("actor_number").value);n?async function(n,l=0){let e=[],t=await r("MATCH (n:Actor {name : {nameParam}}) return n",{nameParam:n});if(s.startBatch(),0==t.length)return void window.alert("The name you entered is not valid");s.elements().remove(),document.getElementById("loader").style.display="block",s.add({data:t[0],classes:"Actor"}),e.push({id:t[0].id,depth:0});for(;e.length>0;){let n=e.shift(),t=await r("MATCH ({id : {idParam}})-[:ACTS_IN]-(n) return n",{idParam:n.id});for(var u in t){if(0==s.nodes("[id = '"+t[u].id+"']").length){t[u].imdbId?s.add({data:t[u],classes:"Movie"}):s.add({data:t[u],classes:"Actor"});let r=parseInt(n.depth)+1;r<2*l&&e.push({id:t[u].id,depth:r})}0==s.edges("[id = '"+n.id+"-"+t[u].id+"']").length&&s.add({data:{id:n.id+"-"+t[u].id,source:n.id,target:t[u].id,directed:"false"}})}}document.getElementById("loader").style.display="none",s.endBatch(),s.layout(c).run(),p()}(n,l):window.alert("Please enter a name")})},function(n,l,e){"use strict";(function(l){function t(n){return n&&"object"==typeof n&&"default"in n?n.default:n}var u=t(e(127)),r=t(e(128));function i(n){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,l){if(!(n instanceof l))throw new TypeError("Cannot call a class as a function")}function a(n,l){for(var e=0;e<l.length;e++){var t=l[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function s(n,l,e){return l&&a(n.prototype,l),e&&a(n,e),n}function c(n,l){return function(n){if(Array.isArray(n))return n}(n)||function(n,l){var e=[],t=!0,u=!1,r=void 0;try{for(var i,o=n[Symbol.iterator]();!(t=(i=o.next()).done)&&(e.push(i.value),!l||e.length!==l);t=!0);}catch(n){u=!0,r=n}finally{try{t||null==o.return||o.return()}finally{if(u)throw r}}return e}(n,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var h="undefined"==typeof window?null:window,d=h?h.navigator:null,f=(h&&h.document,i("")),p=i({}),g=i(function(){}),v="undefined"==typeof HTMLElement?"undefined":i(HTMLElement),y=function(n){return n&&n.instanceString&&b(n.instanceString)?n.instanceString():null},m=function(n){return null!=n&&i(n)==f},b=function(n){return null!=n&&i(n)===g},w=function(n){return Array.isArray?Array.isArray(n):null!=n&&n instanceof Array},_=function(n){return null!=n&&i(n)===p&&!w(n)&&n.constructor===Object},x=function(n){return null!=n&&i(n)===i(1)&&!isNaN(n)},E=function(n){return"undefined"===v?void 0:null!=n&&n instanceof HTMLElement},T=function(n){return k(n)||C(n)},k=function(n){return"collection"===y(n)&&n._private.single},C=function(n){return"collection"===y(n)&&!n._private.single},S=function(n){return"core"===y(n)},I=function(n){return"stylesheet"===y(n)},N=function(n){return null==n||!(""!==n&&!n.match(/^\s+$/))},D=function(n){return function(n){return null!=n&&i(n)===p}(n)&&b(n.then)},O=function(){return d&&d.userAgent.match(/msie|trident|edge/i)},A=function(n,l){l||(l=function(){if(1===arguments.length)return arguments[0];if(0===arguments.length)return"undefined";for(var n=[],l=0;l<arguments.length;l++)n.push(arguments[l]);return n.join("$")});var e=function e(){var t,u=arguments,r=l.apply(this,u),i=e.cache;return(t=i[r])||(t=i[r]=n.apply(this,u)),t};return e.cache={},e},P=A(function(n){return n.replace(/([A-Z])/g,function(n){return"-"+n.toLowerCase()})}),M=A(function(n){return n.replace(/(-\w)/g,function(n){return n[1].toUpperCase()})}),L=A(function(n,l){return n+l[0].toUpperCase()+l.substring(1)},function(n,l){return n+"$"+l}),R=function(n){return N(n)?n:n.charAt(0).toUpperCase()+n.substring(1)},F="(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))",B=function(n,l){return n<l?-1:n>l?1:0},j=null!=Object.assign?Object.assign.bind(Object):function(n){for(var l=arguments,e=1;e<l.length;e++){var t=l[e];if(null!=t)for(var u=Object.keys(t),r=0;r<u.length;r++){var i=u[r];n[i]=t[i]}}return n},U=function(n){return(w(n)?n:null)||function(n){return z[n.toLowerCase()]}(n)||function(n){if((4===n.length||7===n.length)&&"#"===n[0]){var l,e,t;return 4===n.length?(l=parseInt(n[1]+n[1],16),e=parseInt(n[2]+n[2],16),t=parseInt(n[3]+n[3],16)):(l=parseInt(n[1]+n[2],16),e=parseInt(n[3]+n[4],16),t=parseInt(n[5]+n[6],16)),[l,e,t]}}(n)||function(n){var l,e=new RegExp("^rgb[a]?\\(((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)(?:\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)$").exec(n);if(e){l=[];for(var t=[],u=1;u<=3;u++){var r=e[u];if("%"===r[r.length-1]&&(t[u]=!0),r=parseFloat(r),t[u]&&(r=r/100*255),r<0||r>255)return;l.push(Math.floor(r))}var i=t[1]||t[2]||t[3],o=t[1]&&t[2]&&t[3];if(i&&!o)return;var a=e[4];if(void 0!==a){if((a=parseFloat(a))<0||a>1)return;l.push(a)}}return l}(n)||function(n){var l,e,t,u,r,i,o,a;function s(n,l,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?n+6*(l-n)*e:e<.5?l:e<2/3?n+(l-n)*(2/3-e)*6:n}var c=new RegExp("^hsl[a]?\\(((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?)))\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])(?:\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)$").exec(n);if(c){if((e=parseInt(c[1]))<0?e=(360- -1*e%360)%360:e>360&&(e%=360),e/=360,(t=parseFloat(c[2]))<0||t>100)return;if(t/=100,(u=parseFloat(c[3]))<0||u>100)return;if(u/=100,void 0!==(r=c[4])&&((r=parseFloat(r))<0||r>1))return;if(0===t)i=o=a=Math.round(255*u);else{var h=u<.5?u*(1+t):u+t-u*t,d=2*u-h;i=Math.round(255*s(d,h,e+1/3)),o=Math.round(255*s(d,h,e)),a=Math.round(255*s(d,h,e-1/3))}l=[i,o,a,r]}return l}(n)},z={transparent:[0,0,0,0],aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],grey:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},q=function(n){for(var l=n.map,e=n.keys,t=e.length,u=0;u<t;u++){var r=e[u];if(_(r))throw Error("Tried to set map with object key");u<e.length-1?(null==l[r]&&(l[r]={}),l=l[r]):l[r]=n.value}},V=function(n){for(var l=n.map,e=n.keys,t=e.length,u=0;u<t;u++){var r=e[u];if(_(r))throw Error("Tried to get map with object key");if(null==(l=l[r]))return l}return l},H=h?h.performance:null,G=H&&H.now?function(){return H.now()}:function(){return Date.now()},Y=function(){if(h){if(h.requestAnimationFrame)return function(n){h.requestAnimationFrame(n)};if(h.mozRequestAnimationFrame)return function(n){h.mozRequestAnimationFrame(n)};if(h.webkitRequestAnimationFrame)return function(n){h.webkitRequestAnimationFrame(n)};if(h.msRequestAnimationFrame)return function(n){h.msRequestAnimationFrame(n)}}return function(n){n&&setTimeout(function(){n(G())},1e3/60)}}(),W=function(n){return Y(n)},X=G,K=function(n){for(var l,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5381;!(l=n.next()).done;)e=33*e^l.value;return e>>>0},$=function(n){return(33*(arguments.length>1&&void 0!==arguments[1]?arguments[1]:5381)^n)>>>0},Z=function(n,l){var e={value:0,done:!1},t=0,u=n.length;return K({next:function(){return t<u?e.value=n[t++]:e.done=!0,e}},l)},Q=function(n,l){var e={value:0,done:!1},t=0,u=n.length;return K({next:function(){return t<u?e.value=n.charCodeAt(t++):e.done=!0,e}},l)},J=function(){return nn(arguments)},nn=function(n){for(var l,e=0;e<n.length;e++){var t=n[e];l=0===e?Q(t):Q(t,l)}return l},ln=null!=console.warn,en=null!=console.trace,tn=Number.MAX_SAFE_INTEGER||9007199254740991,un=function(){return!0},rn=function(){return!1},on=function(){return 0},an=function(){},sn=function(n){throw new Error(n)},cn=function(n){ln?console.warn(n):(console.log(n),en&&console.trace())},hn=function(n){return null==n?n:w(n)?n.slice():_(n)?function(n){return j({},n)}(n):n},dn=function(n,l){for(l=n="";n++<36;l+=51*n&52?(15^n?8^Math.random()*(20^n?16:4):4).toString(16):"-");return l},fn={},pn=function(){return fn},gn=function(n){var l=Object.keys(n);return function(e){for(var t={},u=0;u<l.length;u++){var r=l[u],i=null==e?void 0:e[r];t[r]=void 0===i?n[r]:i}return t}},vn=function(n,l,e){for(var t=n.length;t>=0&&(n[t]!==l||(n.splice(t,1),e));t--);},yn=function(n){n.splice(0,n.length)},mn=function(n,l,e){return e&&(l=L(e,l)),n[l]},bn=function(n,l,e,t){e&&(l=L(e,l)),n[l]=t},wn="undefined"!=typeof Map?Map:function(){function n(){o(this,n),this._obj={}}return s(n,[{key:"set",value:function(n,l){return this._obj[n]=l,this}},{key:"delete",value:function(n){return this._obj[n]=void 0,this}},{key:"clear",value:function(){this._obj={}}},{key:"has",value:function(n){return void 0!==this._obj[n]}},{key:"get",value:function(n){return this._obj[n]}}]),n}(),_n=function(){function n(l){if(o(this,n),this._obj=Object.create(null),this.size=0,null!=l){var e;e=null!=l.instanceString&&l.instanceString()===this.instanceString()?l.toArray():l;for(var t=0;t<e.length;t++)this.add(e[t])}}return s(n,[{key:"instanceString",value:function(){return"set"}},{key:"add",value:function(n){var l=this._obj;1!==l[n]&&(l[n]=1,this.size++)}},{key:"delete",value:function(n){var l=this._obj;1===l[n]&&(l[n]=0,this.size--)}},{key:"clear",value:function(){this._obj=Object.create(null)}},{key:"has",value:function(n){return 1===this._obj[n]}},{key:"toArray",value:function(){var n=this;return Object.keys(this._obj).filter(function(l){return n.has(l)})}},{key:"forEach",value:function(n,l){return this.toArray().forEach(n,l)}}]),n}(),xn="undefined"!==("undefined"==typeof Set?"undefined":i(Set))?Set:_n,En=function(n,l,e){if(e=!(void 0!==e&&!e),void 0!==n&&void 0!==l&&S(n)){var t=l.group;if(null==t&&(t=l.data&&null!=l.data.source&&null!=l.data.target?"edges":"nodes"),"nodes"===t||"edges"===t){this.length=1,this[0]=this;var u=this._private={cy:n,single:!0,data:l.data||{},position:l.position||{x:0,y:0},autoWidth:void 0,autoHeight:void 0,autoPadding:void 0,compoundBoundsClean:!1,listeners:[],group:t,style:{},rstyle:{},styleCxts:[],styleKeys:{},removed:!0,selected:!!l.selected,selectable:void 0===l.selectable||!!l.selectable,locked:!!l.locked,grabbed:!1,grabbable:void 0===l.grabbable||!!l.grabbable,active:!1,classes:new xn,animation:{current:[],queue:[]},rscratch:{},scratch:l.scratch||{},edges:[],children:[],parent:null,traversalCache:{},backgrounding:!1,bbCache:null,bbCacheShift:{x:0,y:0}};if(null==u.position.x&&(u.position.x=0),null==u.position.y&&(u.position.y=0),l.renderedPosition){var r=l.renderedPosition,i=n.pan(),o=n.zoom();u.position={x:(r.x-i.x)/o,y:(r.y-i.y)/o}}var a=[];w(l.classes)?a=l.classes:m(l.classes)&&(a=l.classes.split(/\s+/));for(var s=0,c=a.length;s<c;s++){var h=a[s];h&&""!==h&&u.classes.add(h)}var d=l.style||l.css;d&&(cn("Setting a `style` bypass at element creation is deprecated"),n.style().applyBypass(this,d)),this.createEmitter(),(void 0===e||e)&&this.restore()}else sn("An element must be of type `nodes` or `edges`; you specified `"+t+"`")}else sn("An element must have a core reference and parameters set")},Tn=function(n){return n={bfs:n.bfs||!n.dfs,dfs:n.dfs||!n.bfs},function(l,e,t){var u;_(l)&&!T(l)&&(l=(u=l).roots||u.root,e=u.visit,t=u.directed),t=2!==arguments.length||b(e)?t:e,e=b(e)?e:function(){};for(var r,i=this._private.cy,o=l=m(l)?this.filter(l):l,a=[],s=[],c={},h={},d={},f=0,p=this.byGroup(),g=p.nodes,v=p.edges,y=0;y<o.length;y++){var w=o[y],x=w.id();w.isNode()&&(a.unshift(w),n.bfs&&(d[x]=!0,s.push(w)),h[x]=0)}var E=function(){var l=n.bfs?a.shift():a.pop(),u=l.id();if(n.dfs){if(d[u])return"continue";d[u]=!0,s.push(l)}var i,o=h[u],p=c[u],y=null!=p?p.source():null,m=null!=p?p.target():null,b=null==p?void 0:l.same(y)?m[0]:y[0];if(!0===(i=e(l,p,b,f++,o)))return r=l,"break";if(!1===i)return"break";for(var w=l.connectedEdges().filter(function(n){return(!t||n.source().same(l))&&v.has(n)}),_=0;_<w.length;_++){var x=w[_],E=x.connectedNodes().filter(function(n){return!n.same(l)&&g.has(n)}),T=E.id();0===E.length||d[T]||(E=E[0],a.push(E),n.bfs&&(d[T]=!0,s.push(E)),c[T]=x,h[T]=h[u]+1)}};n:for(;0!==a.length;){switch(E()){case"continue":continue;case"break":break n}}for(var k=i.collection(),C=0;C<s.length;C++){var S=s[C],I=c[S.id()];null!=I&&k.merge(I),k.merge(S)}return{path:i.collection(k),found:i.collection(r)}}},kn={breadthFirstSearch:Tn({bfs:!0}),depthFirstSearch:Tn({dfs:!0})};kn.bfs=kn.breadthFirstSearch,kn.dfs=kn.depthFirstSearch;var Cn=gn({root:null,weight:function(n){return 1},directed:!1}),Sn={dijkstra:function(n){if(!_(n)){var l=arguments;n={root:l[0],weight:l[1],directed:l[2]}}var e=Cn(n),t=e.root,u=e.weight,i=e.directed,o=this,a=u,s=m(t)?this.filter(t)[0]:t[0],c={},h={},d={},f=this.byGroup(),p=f.nodes,g=f.edges;g.unmergeBy(function(n){return n.isLoop()});for(var v=function(n){return c[n.id()]},y=function(n,l){c[n.id()]=l,b.updateItem(n)},b=new r(function(n,l){return v(n)-v(l)}),w=0;w<p.length;w++){var x=p[w];c[x.id()]=x.same(s)?0:1/0,b.push(x)}for(var E=function(n,l){for(var e,t=(i?n.edgesTo(l):n.edgesWith(l)).intersect(g),u=1/0,r=0;r<t.length;r++){var o=t[r],s=a(o);(s<u||!e)&&(u=s,e=o)}return{edge:e,dist:u}};b.size()>0;){var T=b.pop(),k=v(T),C=T.id();if(d[C]=k,k!==1/0)for(var S=T.neighborhood().intersect(p),I=0;I<S.length;I++){var N=S[I],D=N.id(),O=E(T,N),A=k+O.dist;A<v(N)&&(y(N,A),h[D]={node:T,edge:O.edge})}}return{distanceTo:function(n){var l=m(n)?p.filter(n)[0]:n[0];return d[l.id()]},pathTo:function(n){var l=m(n)?p.filter(n)[0]:n[0],e=[],t=l,u=t.id();if(l.length>0)for(e.unshift(l);h[u];){var r=h[u];e.unshift(r.edge),e.unshift(r.node),u=(t=r.node).id()}return o.spawn(e)}}}},In={kruskal:function(n){n=n||function(n){return 1};for(var l=this.byGroup(),e=l.nodes,t=l.edges,u=e.length,r=new Array(u),i=e,o=function(n){for(var l=0;l<r.length;l++){if(r[l].has(n))return l}},a=0;a<u;a++)r[a]=this.spawn(e[a]);for(var s=t.sort(function(l,e){return n(l)-n(e)}),c=0;c<s.length;c++){var h=s[c],d=h.source()[0],f=h.target()[0],p=o(d),g=o(f),v=r[p],y=r[g];p!==g&&(i.merge(h),v.merge(y),r.splice(g,1))}return i}},Nn=gn({root:null,goal:null,weight:function(n){return 1},heuristic:function(n){return 0},directed:!1}),Dn={aStar:function(n){var l=this.cy(),e=Nn(n),t=e.root,u=e.goal,i=e.heuristic,o=e.directed,a=e.weight;t=l.collection(t)[0],u=l.collection(u)[0];var s,c,h=t.id(),d=u.id(),f={},p={},g={},v=new r(function(n,l){return p[n.id()]-p[l.id()]}),y=new xn,m={},b={},w=function(n,l){v.push(n),y.add(l)};w(t,h),f[h]=0,p[h]=i(t);for(var _,x=0;v.size()>0;){if(s=v.pop(),c=s.id(),y.delete(c),x++,c===d){for(var E=[],T=u,k=d,C=b[k];E.unshift(T),null!=C&&E.unshift(C),null!=(T=m[k]);)C=b[k=T.id()];return{found:!0,distance:f[c],path:this.spawn(E),steps:x}}g[c]=!0;for(var S=s._private.edges,I=0;I<S.length;I++){var N=S[I];if(this.hasElementWithId(N.id())&&(!o||N.data("source")===c)){var D=N.source(),O=N.target(),A=D.id()!==c?D:O,P=A.id();if(this.hasElementWithId(P)&&!g[P]){var M=f[c]+a(N);_=P,y.has(_)?M<f[P]&&(f[P]=M,p[P]=M+i(A),m[P]=s):(f[P]=M,p[P]=M+i(A),w(A,P),m[P]=s,b[P]=N)}}}}return{found:!1,distance:void 0,path:void 0,steps:x}}},On=gn({weight:function(n){return 1},directed:!1}),An={floydWarshall:function(n){for(var l=this.cy(),e=On(n),t=e.weight,u=e.directed,r=t,i=this.byGroup(),o=i.nodes,a=i.edges,s=o.length,c=s*s,h=function(n){return o.indexOf(n)},d=function(n){return o[n]},f=new Array(c),p=0;p<c;p++){var g=p%s,v=(p-g)/s;f[p]=v===g?0:1/0}for(var y=new Array(c),b=new Array(c),w=0;w<a.length;w++){var _=a[w],x=_.source()[0],E=_.target()[0];if(x!==E){var T=h(x),k=h(E),C=T*s+k,S=r(_);if(f[C]>S&&(f[C]=S,y[C]=k,b[C]=_),!u){var I=k*s+T;!u&&f[I]>S&&(f[I]=S,y[I]=T,b[I]=_)}}}for(var N=0;N<s;N++)for(var D=0;D<s;D++)for(var O=D*s+N,A=0;A<s;A++){var P=D*s+A,M=N*s+A;f[O]+f[M]<f[P]&&(f[P]=f[O]+f[M],y[P]=y[O])}var L=function(n){return h(function(n){return(m(n)?l.filter(n):n)[0]}(n))};return{distance:function(n,l){var e=L(n),t=L(l);return f[e*s+t]},path:function(n,e){var t=L(n),u=L(e),r=d(t);if(t===u)return r.collection();if(null==y[t*s+u])return l.collection();var i,o=l.collection(),a=t;for(o.merge(r);t!==u;)a=t,t=y[t*s+u],i=b[a*s+t],o.merge(i),o.merge(d(t));return o}}}},Pn=gn({weight:function(n){return 1},directed:!1,root:null}),Mn={bellmanFord:function(n){var l=this,e=Pn(n),t=e.weight,u=e.directed,r=e.root,i=t,o=this,a=this.cy(),s=this.byGroup(),c=s.edges,h=s.nodes,d=h.length,f=new wn,p=!1;r=a.collection(r)[0],c.unmergeBy(function(n){return n.isLoop()});for(var g=c.length,v=function(n){var l=f.get(n.id());return l||(l={},f.set(n.id(),l)),l},y=function(n){return(m(n)?a.$(n):n)[0]},b=0;b<d;b++){var w=h[b],_=v(w);w.same(r)?_.dist=0:_.dist=1/0,_.pred=null,_.edge=null}for(var x=!1,E=function(n,l,e,t,u,r){var i=t.dist+r;i<u.dist&&!e.same(t.edge)&&(u.dist=i,u.pred=n,u.edge=e,x=!0)},T=1;T<d;T++){x=!1;for(var k=0;k<g;k++){var C=c[k],S=C.source(),I=C.target(),N=i(C),D=v(S),O=v(I);E(S,0,C,D,O,N),u||E(I,0,C,O,D,N)}if(!x)break}if(x)for(var A=0;A<g;A++){var P=c[A],M=P.source(),L=P.target(),R=i(P),F=v(M).dist,B=v(L).dist;if(F+R<B||!u&&B+R<F){cn("Graph contains a negative weight cycle for Bellman-Ford"),p=!0;break}}return{distanceTo:function(n){return v(y(n)).dist},pathTo:function(n){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r,t=[],u=y(n);;){if(null==u)return l.spawn();var i=v(u),a=i.edge,s=i.pred;if(t.unshift(u[0]),u.same(e)&&t.length>0)break;null!=a&&t.unshift(a),u=s}return o.spawn(t)},hasNegativeWeightCycle:p,negativeWeightCycles:[]}}},Ln=Math.sqrt(2),Rn=function(n,l,e){0===e.length&&sn("Karger-Stein must be run on a connected (sub)graph");for(var t=e[n],u=t[1],r=t[2],i=l[u],o=l[r],a=e,s=a.length-1;s>=0;s--){var c=a[s],h=c[1],d=c[2];(l[h]===i&&l[d]===o||l[h]===o&&l[d]===i)&&a.splice(s,1)}for(var f=0;f<a.length;f++){var p=a[f];p[1]===o?(a[f]=p.slice(),a[f][1]=i):p[2]===o&&(a[f]=p.slice(),a[f][2]=i)}for(var g=0;g<l.length;g++)l[g]===o&&(l[g]=i);return a},Fn=function(n,l,e,t){for(;e>t;){var u=Math.floor(Math.random()*l.length);l=Rn(u,n,l),e--}return l},Bn={kargerStein:function(){var n=this.byGroup(),l=n.nodes,e=n.edges;e.unmergeBy(function(n){return n.isLoop()});var t=l.length,u=e.length,r=Math.ceil(Math.pow(Math.log(t)/Math.LN2,2)),i=Math.floor(t/Ln);if(!(t<2)){for(var o=[],a=0;a<u;a++){var s=e[a];o.push([a,l.indexOf(s.source()),l.indexOf(s.target())])}for(var c=1/0,h=[],d=new Array(t),f=new Array(t),p=new Array(t),g=function(n,l){for(var e=0;e<t;e++)l[e]=n[e]},v=0;v<=r;v++){for(var y=0;y<t;y++)f[y]=y;var m=Fn(f,o.slice(),t,i),b=m.slice();g(f,p);var w=Fn(f,m,i,2),_=Fn(p,b,i,2);w.length<=_.length&&w.length<c?(c=w.length,h=w,g(f,d)):_.length<=w.length&&_.length<c&&(c=_.length,h=_,g(p,d))}for(var x=this.spawn(h.map(function(n){return e[n[0]]})),E=this.spawn(),T=this.spawn(),k=d[0],C=0;C<d.length;C++){var S=d[C],I=l[C];S===k?E.merge(I):T.merge(I)}return{cut:x,partition1:E,partition2:T}}sn("At least 2 nodes are required for Karger-Stein algorithm")}},jn=function(n,l,e){return{x:n.x*l+e.x,y:n.y*l+e.y}},Un=function(n,l,e){return{x:(n.x-e.x)/l,y:(n.y-e.y)/l}},zn=function(n){return{x:n[0],y:n[1]}},qn=function(n,l){return Math.atan2(l,n)-Math.PI/2},Vn=Math.log2||function(n){return Math.log(n)/Math.log(2)},Hn=function(n,l){return Math.sqrt(Gn(n,l))},Gn=function(n,l){var e=l.x-n.x,t=l.y-n.y;return e*e+t*t},Yn=function(n){for(var l=n.length,e=0,t=0;t<l;t++)e+=n[t];for(var u=0;u<l;u++)n[u]=n[u]/e;return n},Wn=function(n,l,e,t){return(1-t)*(1-t)*n+2*(1-t)*t*l+t*t*e},Xn=function(n,l,e,t){return{x:Wn(n.x,l.x,e.x,t),y:Wn(n.y,l.y,e.y,t)}},Kn=function(n,l,e){return Math.max(n,Math.min(e,l))},$n=function(n){if(null==n)return{x1:1/0,y1:1/0,x2:-1/0,y2:-1/0,w:0,h:0};if(null!=n.x1&&null!=n.y1){if(null!=n.x2&&null!=n.y2&&n.x2>=n.x1&&n.y2>=n.y1)return{x1:n.x1,y1:n.y1,x2:n.x2,y2:n.y2,w:n.x2-n.x1,h:n.y2-n.y1};if(null!=n.w&&null!=n.h&&n.w>=0&&n.h>=0)return{x1:n.x1,y1:n.y1,x2:n.x1+n.w,y2:n.y1+n.h,w:n.w,h:n.h}}},Zn=function(n,l,e){n.x1=Math.min(n.x1,l),n.x2=Math.max(n.x2,l),n.w=n.x2-n.x1,n.y1=Math.min(n.y1,e),n.y2=Math.max(n.y2,e),n.h=n.y2-n.y1},Qn=function(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return n.x1-=l,n.x2+=l,n.y1-=l,n.y2+=l,n.w=n.x2-n.x1,n.h=n.y2-n.y1,n},Jn=function(n,l){n.x1=l.x1,n.y1=l.y1,n.x2=l.x2,n.y2=l.y2,n.w=n.x2-n.x1,n.h=n.y2-n.y1},nl=function(n,l){n.x1+=l.x,n.x2+=l.x,n.y1+=l.y,n.y2+=l.y},ll=function(n,l){return!(n.x1>l.x2)&&(!(l.x1>n.x2)&&(!(n.x2<l.x1)&&(!(l.x2<n.x1)&&(!(n.y2<l.y1)&&(!(l.y2<n.y1)&&(!(n.y1>l.y2)&&!(l.y1>n.y2)))))))},el=function(n,l,e){return n.x1<=l&&l<=n.x2&&n.y1<=e&&e<=n.y2},tl=function(n,l){return el(n,l.x1,l.y1)&&el(n,l.x2,l.y2)},ul=function(n,l,e,t,u,r,i){var o,a=xl(u,r),s=u/2,c=r/2,h=t-c-i;if((o=vl(n,l,e,t,e-s+a-i,h,e+s-a+i,h,!1)).length>0)return o;var d=e+s+i;if((o=vl(n,l,e,t,d,t-c+a-i,d,t+c-a+i,!1)).length>0)return o;var f=t+c+i;if((o=vl(n,l,e,t,e-s+a-i,f,e+s-a+i,f,!1)).length>0)return o;var p,g=e-s-i;if((o=vl(n,l,e,t,g,t-c+a-i,g,t+c-a+i,!1)).length>0)return o;var v=e-s+a,y=t-c+a;if((p=pl(n,l,e,t,v,y,a+i)).length>0&&p[0]<=v&&p[1]<=y)return[p[0],p[1]];var m=e+s-a,b=t-c+a;if((p=pl(n,l,e,t,m,b,a+i)).length>0&&p[0]>=m&&p[1]<=b)return[p[0],p[1]];var w=e+s-a,_=t+c-a;if((p=pl(n,l,e,t,w,_,a+i)).length>0&&p[0]>=w&&p[1]>=_)return[p[0],p[1]];var x=e-s+a,E=t+c-a;return(p=pl(n,l,e,t,x,E,a+i)).length>0&&p[0]<=x&&p[1]>=E?[p[0],p[1]]:[]},rl=function(n,l,e,t,u,r,i){var o=i,a=Math.min(e,u),s=Math.max(e,u),c=Math.min(t,r),h=Math.max(t,r);return a-o<=n&&n<=s+o&&c-o<=l&&l<=h+o},il=function(n,l,e,t,u,r,i,o,a){var s=Math.min(e,i,u)-a,c=Math.max(e,i,u)+a,h=Math.min(t,o,r)-a,d=Math.max(t,o,r)+a;return!(n<s||n>c||l<h||l>d)},ol=function(n,l,e,t,u,r,i,o){var a=[];!function(n,l,e,t,u){var r,i,o,a,s,c,h,d;o=-27*(t/=n)+(l/=n)*(9*(e/=n)-l*l*2),r=(i=(3*e-l*l)/9)*i*i+(o/=54)*o,u[1]=0,h=l/3,r>0?(s=(s=o+Math.sqrt(r))<0?-Math.pow(-s,1/3):Math.pow(s,1/3),c=(c=o-Math.sqrt(r))<0?-Math.pow(-c,1/3):Math.pow(c,1/3),u[0]=-h+s+c,h+=(s+c)/2,u[4]=u[2]=-h,h=Math.sqrt(3)*(-c+s)/2,u[3]=h,u[5]=-h):(u[5]=u[3]=0,0===r?(d=o<0?-Math.pow(-o,1/3):Math.pow(o,1/3),u[0]=2*d-h,u[4]=u[2]=-(d+h)):(a=(i=-i)*i*i,a=Math.acos(o/Math.sqrt(a)),d=2*Math.sqrt(i),u[0]=-h+d*Math.cos(a/3),u[2]=-h+d*Math.cos((a+2*Math.PI)/3),u[4]=-h+d*Math.cos((a+4*Math.PI)/3)))}(1*e*e-4*e*u+2*e*i+4*u*u-4*u*i+i*i+t*t-4*t*r+2*t*o+4*r*r-4*r*o+o*o,9*e*u-3*e*e-3*e*i-6*u*u+3*u*i+9*t*r-3*t*t-3*t*o-6*r*r+3*r*o,3*e*e-6*e*u+e*i-e*n+2*u*u+2*u*n-i*n+3*t*t-6*t*r+t*o-t*l+2*r*r+2*r*l-o*l,1*e*u-e*e+e*n-u*n+t*r-t*t+t*l-r*l,a);for(var s=[],c=0;c<6;c+=2)Math.abs(a[c+1])<1e-7&&a[c]>=0&&a[c]<=1&&s.push(a[c]);s.push(1),s.push(0);for(var h,d,f,p=-1,g=0;g<s.length;g++)h=Math.pow(1-s[g],2)*e+2*(1-s[g])*s[g]*u+s[g]*s[g]*i,d=Math.pow(1-s[g],2)*t+2*(1-s[g])*s[g]*r+s[g]*s[g]*o,f=Math.pow(h-n,2)+Math.pow(d-l,2),p>=0?f<p&&(p=f):p=f;return p},al=function(n,l,e,t,u,r){var i=[n-e,l-t],o=[u-e,r-t],a=o[0]*o[0]+o[1]*o[1],s=i[0]*i[0]+i[1]*i[1],c=i[0]*o[0]+i[1]*o[1],h=c*c/a;return c<0?s:h>a?(n-u)*(n-u)+(l-r)*(l-r):s-h},sl=function(n,l,e){for(var t,u,r,i,o=0,a=0;a<e.length/2;a++)if(t=e[2*a],u=e[2*a+1],a+1<e.length/2?(r=e[2*(a+1)],i=e[2*(a+1)+1]):(r=e[2*(a+1-e.length/2)],i=e[2*(a+1-e.length/2)+1]),t==n&&r==n);else{if(!(t>=n&&n>=r||t<=n&&n<=r))continue;(n-t)/(r-t)*(i-u)+u>l&&o++}return o%2!=0},cl=function(n,l,e,t,u,r,i,o,a){var s,c=new Array(e.length);null!=o[0]?(s=Math.atan(o[1]/o[0]),o[0]<0?s+=Math.PI/2:s=-s-Math.PI/2):s=o;for(var h,d=Math.cos(-s),f=Math.sin(-s),p=0;p<c.length/2;p++)c[2*p]=r/2*(e[2*p]*d-e[2*p+1]*f),c[2*p+1]=i/2*(e[2*p+1]*d+e[2*p]*f),c[2*p]+=t,c[2*p+1]+=u;if(a>0){var g=dl(c,-a);h=hl(g)}else h=c;return sl(n,l,h)},hl=function(n){for(var l,e,t,u,r,i,o,a,s=new Array(n.length/2),c=0;c<n.length/4;c++){l=n[4*c],e=n[4*c+1],t=n[4*c+2],u=n[4*c+3],c<n.length/4-1?(r=n[4*(c+1)],i=n[4*(c+1)+1],o=n[4*(c+1)+2],a=n[4*(c+1)+3]):(r=n[0],i=n[1],o=n[2],a=n[3]);var h=vl(l,e,t,u,r,i,o,a,!0);s[2*c]=h[0],s[2*c+1]=h[1]}return s},dl=function(n,l){for(var e,t,u,r,i=new Array(2*n.length),o=0;o<n.length/2;o++){e=n[2*o],t=n[2*o+1],o<n.length/2-1?(u=n[2*(o+1)],r=n[2*(o+1)+1]):(u=n[0],r=n[1]);var a=r-t,s=-(u-e),c=Math.sqrt(a*a+s*s),h=a/c,d=s/c;i[4*o]=e+h*l,i[4*o+1]=t+d*l,i[4*o+2]=u+h*l,i[4*o+3]=r+d*l}return i},fl=function(n,l,e,t,u,r,i){return n-=u,l-=r,(n/=e/2+i)*n+(l/=t/2+i)*l<=1},pl=function(n,l,e,t,u,r,i){var o=[e-n,t-l],a=[n-u,l-r],s=o[0]*o[0]+o[1]*o[1],c=2*(a[0]*o[0]+a[1]*o[1]),h=c*c-4*s*(a[0]*a[0]+a[1]*a[1]-i*i);if(h<0)return[];var d=(-c+Math.sqrt(h))/(2*s),f=(-c-Math.sqrt(h))/(2*s),p=Math.min(d,f),g=Math.max(d,f),v=[];if(p>=0&&p<=1&&v.push(p),g>=0&&g<=1&&v.push(g),0===v.length)return[];var y=v[0]*o[0]+n,m=v[0]*o[1]+l;return v.length>1?v[0]==v[1]?[y,m]:[y,m,v[1]*o[0]+n,v[1]*o[1]+l]:[y,m]},gl=function(n,l,e){return l<=n&&n<=e||e<=n&&n<=l?n:n<=l&&l<=e||e<=l&&l<=n?l:e},vl=function(n,l,e,t,u,r,i,o,a){var s=n-u,c=e-n,h=i-u,d=l-r,f=t-l,p=o-r,g=h*d-p*s,v=c*d-f*s,y=p*c-h*f;if(0!==y){var m=g/y,b=v/y;return-.001<=m&&m<=1.001&&-.001<=b&&b<=1.001?[n+m*c,l+m*f]:a?[n+m*c,l+m*f]:[]}return 0===g||0===v?gl(n,e,i)===i?[i,o]:gl(n,e,u)===u?[u,r]:gl(u,i,e)===e?[e,t]:[]:[]},yl=function(n,l,e,t,u,r,i,o){var a,s,c,h,d,f,p=[],g=new Array(e.length),v=!0;if(null==r&&(v=!1),v){for(var y=0;y<g.length/2;y++)g[2*y]=e[2*y]*r+t,g[2*y+1]=e[2*y+1]*i+u;if(o>0){var m=dl(g,-o);s=hl(m)}else s=g}else s=e;for(var b=0;b<s.length/2;b++)c=s[2*b],h=s[2*b+1],b<s.length/2-1?(d=s[2*(b+1)],f=s[2*(b+1)+1]):(d=s[0],f=s[1]),0!==(a=vl(n,l,t,u,c,h,d,f)).length&&p.push(a[0],a[1]);return p},ml=function(n,l,e){var t=[n[0]-l[0],n[1]-l[1]],u=Math.sqrt(t[0]*t[0]+t[1]*t[1]),r=(u-e)/u;return r<0&&(r=1e-5),[l[0]+r*t[0],l[1]+r*t[1]]},bl=function(n,l){var e=_l(n,l);return e=wl(e)},wl=function(n){for(var l,e,t=n.length/2,u=1/0,r=1/0,i=-1/0,o=-1/0,a=0;a<t;a++)l=n[2*a],e=n[2*a+1],u=Math.min(u,l),i=Math.max(i,l),r=Math.min(r,e),o=Math.max(o,e);for(var s=2/(i-u),c=2/(o-r),h=0;h<t;h++)l=n[2*h]=n[2*h]*s,e=n[2*h+1]=n[2*h+1]*c,u=Math.min(u,l),i=Math.max(i,l),r=Math.min(r,e),o=Math.max(o,e);if(r<-1)for(var d=0;d<t;d++)e=n[2*d+1]=n[2*d+1]+(-1-r);return n},_l=function(n,l){var e=1/n*2*Math.PI,t=n%2==0?Math.PI/2+e/2:Math.PI/2;t+=l;for(var u,r=new Array(2*n),i=0;i<n;i++)u=i*e+t,r[2*i]=Math.cos(u),r[2*i+1]=Math.sin(-u);return r},xl=function(n,l){return Math.min(n/4,l/4,8)},El=function(n,l){return{heightOffset:Math.min(15,.05*l),widthOffset:Math.min(100,.25*n),ctrlPtOffsetPct:.05}},Tl=gn({dampingFactor:.8,precision:1e-6,iterations:200,weight:function(n){return 1}}),kl={pageRank:function(n){for(var l=Tl(n),e=l.dampingFactor,t=l.precision,u=l.iterations,r=l.weight,i=this._private.cy,o=this.byGroup(),a=o.nodes,s=o.edges,c=a.length,h=c*c,d=s.length,f=new Array(h),p=new Array(c),g=(1-e)/c,v=0;v<c;v++){for(var y=0;y<c;y++){f[v*c+y]=0}p[v]=0}for(var m=0;m<d;m++){var b=s[m],w=b.data("source"),_=b.data("target");if(w!==_){var x=a.indexOfId(w),E=a.indexOfId(_),T=r(b);f[E*c+x]+=T,p[x]+=T}}for(var k=1/c+g,C=0;C<c;C++)if(0===p[C])for(var S=0;S<c;S++){f[S*c+C]=k}else for(var I=0;I<c;I++){var N=I*c+C;f[N]=f[N]/p[C]+g}for(var D,O=new Array(c),A=new Array(c),P=0;P<c;P++)O[P]=1;for(var M=0;M<u;M++){for(var L=0;L<c;L++)A[L]=0;for(var R=0;R<c;R++)for(var F=0;F<c;F++){var B=R*c+F;A[R]+=f[B]*O[F]}Yn(A),D=O,O=A,A=D;for(var j=0,U=0;U<c;U++){var z=D[U]-O[U];j+=z*z}if(j<t)break}return{rank:function(n){return n=i.collection(n)[0],O[a.indexOf(n)]}}}},Cl=gn({root:null,weight:function(n){return 1},directed:!1,alpha:0}),Sl={degreeCentralityNormalized:function(n){n=Cl(n);var l=this.cy(),e=this.nodes(),t=e.length;if(n.directed){for(var u={},r={},i=0,o=0,a=0;a<t;a++){var s=e[a],c=s.id();n.root=s;var h=this.degreeCentrality(n);i<h.indegree&&(i=h.indegree),o<h.outdegree&&(o=h.outdegree),u[c]=h.indegree,r[c]=h.outdegree}return{indegree:function(n){return 0==i?0:(m(n)&&(n=l.filter(n)),u[n.id()]/i)},outdegree:function(n){return 0===o?0:(m(n)&&(n=l.filter(n)),r[n.id()]/o)}}}for(var d={},f=0,p=0;p<t;p++){var g=e[p];n.root=g;var v=this.degreeCentrality(n);f<v.degree&&(f=v.degree),d[g.id()]=v.degree}return{degree:function(n){return 0===f?0:(m(n)&&(n=l.filter(n)),d[n.id()]/f)}}},degreeCentrality:function(n){n=Cl(n);var l=this.cy(),e=this,t=n,u=t.root,r=t.weight,i=t.directed,o=t.alpha;if(u=l.collection(u)[0],i){for(var a=u.connectedEdges(),s=a.filter(function(n){return n.target().same(u)&&e.has(n)}),c=a.filter(function(n){return n.source().same(u)&&e.has(n)}),h=s.length,d=c.length,f=0,p=0,g=0;g<s.length;g++)f+=r(s[g]);for(var v=0;v<c.length;v++)p+=r(c[v]);return{indegree:Math.pow(h,1-o)*Math.pow(f,o),outdegree:Math.pow(d,1-o)*Math.pow(p,o)}}for(var y=u.connectedEdges().intersection(e),m=y.length,b=0,w=0;w<y.length;w++)b+=r(y[w]);return{degree:Math.pow(m,1-o)*Math.pow(b,o)}}};Sl.dc=Sl.degreeCentrality,Sl.dcn=Sl.degreeCentralityNormalised=Sl.degreeCentralityNormalized;var Il=gn({harmonic:!0,weight:function(){return 1},directed:!1,root:null}),Nl={closenessCentralityNormalized:function(n){for(var l=Il(n),e=l.harmonic,t=l.weight,u=l.directed,r=this.cy(),i={},o=0,a=this.nodes(),s=this.floydWarshall({weight:t,directed:u}),c=0;c<a.length;c++){for(var h=0,d=a[c],f=0;f<a.length;f++)if(c!==f){var p=s.distance(d,a[f]);h+=e?1/p:p}e||(h=1/h),o<h&&(o=h),i[d.id()]=h}return{closeness:function(n){return 0==o?0:(n=m(n)?r.filter(n)[0].id():n.id(),i[n]/o)}}},closenessCentrality:function(n){var l=Il(n),e=l.root,t=l.weight,u=l.directed,r=l.harmonic;e=this.filter(e)[0];for(var i=this.dijkstra({root:e,weight:t,directed:u}),o=0,a=this.nodes(),s=0;s<a.length;s++){var c=a[s];if(!c.same(e)){var h=i.distanceTo(c);o+=r?1/h:h}}return r?o:1/o}};Nl.cc=Nl.closenessCentrality,Nl.ccn=Nl.closenessCentralityNormalised=Nl.closenessCentralityNormalized;var Dl=gn({weight:null,directed:!1}),Ol={betweennessCentrality:function(n){for(var l=Dl(n),e=l.directed,t=l.weight,u=null!=t,i=this.cy(),o=this.nodes(),a={},s={},c=0,h=function(n,l){s[n]=l,l>c&&(c=l)},d=function(n){return s[n]},f=0;f<o.length;f++){var p=o[f],g=p.id();a[g]=e?p.outgoers().nodes():p.openNeighborhood().nodes(),h(g,0)}for(var v=function(n){for(var l=o[n].id(),e=[],s={},c={},f={},p=new r(function(n,l){return f[n]-f[l]}),g=0;g<o.length;g++){var v=o[g].id();s[v]=[],c[v]=0,f[v]=1/0}for(c[l]=1,f[l]=0,p.push(l);!p.empty();){var y=p.pop();if(e.push(y),u)for(var m=0;m<a[y].length;m++){var b=a[y][m],w=i.getElementById(y),_=void 0;_=w.edgesTo(b).length>0?w.edgesTo(b)[0]:b.edgesTo(w)[0];var x=t(_);b=b.id(),f[b]>f[y]+x&&(f[b]=f[y]+x,p.nodes.indexOf(b)<0?p.push(b):p.updateItem(b),c[b]=0,s[b]=[]),f[b]==f[y]+x&&(c[b]=c[b]+c[y],s[b].push(y))}else for(var E=0;E<a[y].length;E++){var T=a[y][E].id();f[T]==1/0&&(p.push(T),f[T]=f[y]+1),f[T]==f[y]+1&&(c[T]=c[T]+c[y],s[T].push(y))}}for(var k={},C=0;C<o.length;C++)k[o[C].id()]=0;for(;e.length>0;)for(var S=e.pop(),I=0;I<s[S].length;I++){var N=s[S][I];k[N]=k[N]+c[N]/c[S]*(1+k[S]),S!=o[n].id()&&h(S,d(S)+k[S])}},y=0;y<o.length;y++)v(y);var m={betweenness:function(n){var l=i.collection(n).id();return d(l)},betweennessNormalized:function(n){if(0==c)return 0;var l=i.collection(n).id();return d(l)/c}};return m.betweennessNormalised=m.betweennessNormalized,m}};Ol.bc=Ol.betweennessCentrality;var Al=gn({expandFactor:2,inflateFactor:2,multFactor:1,maxIterations:20,attributes:[function(n){return 1}]}),Pl=function(n,l){for(var e=0,t=0;t<l.length;t++)e+=l[t](n);return e},Ml=function(n,l){for(var e,t=0;t<l;t++){e=0;for(var u=0;u<l;u++)e+=n[u*l+t];for(var r=0;r<l;r++)n[r*l+t]=n[r*l+t]/e}},Ll=function(n,l,e){for(var t=new Array(e*e),u=0;u<e;u++){for(var r=0;r<e;r++)t[u*e+r]=0;for(var i=0;i<e;i++)for(var o=0;o<e;o++)t[u*e+o]+=n[u*e+i]*l[i*e+o]}return t},Rl=function(n,l,e){for(var t=n.slice(0),u=1;u<e;u++)n=Ll(n,t,l);return n},Fl=function(n,l,e){for(var t=new Array(l*l),u=0;u<l*l;u++)t[u]=Math.pow(n[u],e);return Ml(t,l),t},Bl=function(n,l,e,t){for(var u=0;u<e;u++){if(Math.round(n[u]*Math.pow(10,t))/Math.pow(10,t)!==Math.round(l[u]*Math.pow(10,t))/Math.pow(10,t))return!1}return!0},jl=function(n,l){for(var e=0;e<n.length;e++)if(!l[e]||n[e].id()!==l[e].id())return!1;return!0},Ul=function(n){for(var l=this.nodes(),e=this.edges(),t=this.cy(),u=function(n){return Al(n)}(n),r={},i=0;i<l.length;i++)r[l[i].id()]=i;for(var o,a=l.length,s=a*a,c=new Array(s),h=0;h<s;h++)c[h]=0;for(var d=0;d<e.length;d++){var f=e[d],p=r[f.source().id()],g=r[f.target().id()],v=Pl(f,u.attributes);c[p*a+g]+=v,c[g*a+p]+=v}!function(n,l,e){for(var t=0;t<l;t++)n[t*l+t]=e}(c,a,u.multFactor),Ml(c,a);for(var y=!0,m=0;y&&m<u.maxIterations;)y=!1,o=Rl(c,a,u.expandFactor),c=Fl(o,a,u.inflateFactor),Bl(c,o,s,4)||(y=!0),m++;var b=function(n,l,e,t){for(var u=[],r=0;r<l;r++){for(var i=[],o=0;o<l;o++)Math.round(1e3*n[r*l+o])/1e3>0&&i.push(e[o]);0!==i.length&&u.push(t.collection(i))}return u}(c,a,l,t);return b=function(n){for(var l=0;l<n.length;l++)for(var e=0;e<n.length;e++)l!=e&&jl(n[l],n[e])&&n.splice(e,1);return n}(b)},zl={markovClustering:Ul,mcl:Ul},ql=function(n){return n},Vl=function(n,l){return Math.abs(l-n)},Hl=function(n,l,e){return n+Vl(l,e)},Gl=function(n,l,e){return n+Math.pow(e-l,2)},Yl=function(n){return Math.sqrt(n)},Wl=function(n,l,e){return Math.max(n,Vl(l,e))},Xl=function(n,l,e,t,u){for(var r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:ql,i=t,o=0;o<n;o++)i=u(i,l(o),e(o));return r(i)},Kl={euclidean:function(n,l,e){return n>=2?Xl(n,l,e,0,Gl,Yl):Xl(n,l,e,0,Hl)},squaredEuclidean:function(n,l,e){return Xl(n,l,e,0,Gl)},manhattan:function(n,l,e){return Xl(n,l,e,0,Hl)},max:function(n,l,e){return Xl(n,l,e,-1/0,Wl)}};function $l(n,l,e,t,u,r){var i;return i=b(n)?n:Kl[n]||Kl.euclidean,0===l&&b(n)?i(u,r):i(l,e,t,u,r)}Kl["squared-euclidean"]=Kl.squaredEuclidean,Kl.squaredeuclidean=Kl.squaredEuclidean;var Zl=gn({k:2,m:2,sensitivityThreshold:1e-4,distance:"euclidean",maxIterations:10,attributes:[],testMode:!1,testCentroids:null}),Ql=function(n){return Zl(n)},Jl=function(n,l,e,t,u){var r="kMedoids"===u?function(n){return t[n](e)}:function(n){return e[n]};return $l(n,t.length,r,function(n){return t[n](l)})},ne=function(n,l,e){for(var t=e.length,u=new Array(t),r=new Array(t),i=new Array(l),o=null,a=0;a<t;a++)u[a]=n.min(e[a]).value,r[a]=n.max(e[a]).value;for(var s=0;s<l;s++){o=[];for(var c=0;c<t;c++)o[c]=Math.random()*(r[c]-u[c])+u[c];i[s]=o}return i},le=function(n,l,e,t,u){for(var r=1/0,i=0,o=0;o<l.length;o++){var a=Jl(e,n,l[o],t,u);a<r&&(r=a,i=o)}return i},ee=function(n,l,e){for(var t=[],u=null,r=0;r<l.length;r++)e[(u=l[r]).id()]===n&&t.push(u);return t},te=function(n,l,e){for(var t=0;t<n.length;t++)for(var u=0;u<n[t].length;u++){if(Math.abs(n[t][u]-l[t][u])>e)return!1}return!0},ue=function(n,l,e){for(var t=0;t<e;t++)if(n===l[t])return!0;return!1},re=function(n,l){var e=new Array(l);if(n.length<50)for(var t=0;t<l;t++){for(var u=n[Math.floor(Math.random()*n.length)];ue(u,e,t);)u=n[Math.floor(Math.random()*n.length)];e[t]=u}else for(var r=0;r<l;r++)e[r]=n[Math.floor(Math.random()*n.length)];return e},ie=function(n,l,e){for(var t=0,u=0;u<l.length;u++)t+=Jl("manhattan",l[u],n,e,"kMedoids");return t},oe=function(n,l,e,t,u){for(var r,i,o=0;o<l.length;o++)for(var a=0;a<n.length;a++)t[o][a]=Math.pow(e[o][a],u.m);for(var s=0;s<n.length;s++)for(var c=0;c<u.attributes.length;c++){r=0,i=0;for(var h=0;h<l.length;h++)r+=t[h][s]*u.attributes[c](l[h]),i+=t[h][s];n[s][c]=r/i}},ae=function(n,l,e,t,u){for(var r=0;r<n.length;r++)l[r]=n[r].slice();for(var i,o,a,s=2/(u.m-1),c=0;c<e.length;c++)for(var h=0;h<t.length;h++){i=0;for(var d=0;d<e.length;d++)o=Jl(u.distance,t[h],e[c],u.attributes,"cmeans"),a=Jl(u.distance,t[h],e[d],u.attributes,"cmeans"),i+=Math.pow(o/a,s);n[h][c]=1/i}},se=function(n){var l,e,t,u,r=this.cy(),i=this.nodes(),o=Ql(n);t=new Array(i.length);for(var a=0;a<i.length;a++)t[a]=new Array(o.k);e=new Array(i.length);for(var s=0;s<i.length;s++)e[s]=new Array(o.k);for(var c=0;c<i.length;c++){for(var h=0,d=0;d<o.k;d++)e[c][d]=Math.random(),h+=e[c][d];for(var f=0;f<o.k;f++)e[c][f]=e[c][f]/h}l=new Array(o.k);for(var p=0;p<o.k;p++)l[p]=new Array(o.attributes.length);u=new Array(i.length);for(var g=0;g<i.length;g++)u[g]=new Array(o.k);for(var v=!0,y=0;v&&y<o.maxIterations;)v=!1,oe(l,i,e,u,o),ae(e,t,l,i,o),te(e,t,o.sensitivityThreshold)||(v=!0),y++;return{clusters:function(n,l,e,t){for(var u,r,i=new Array(e.k),o=0;o<i.length;o++)i[o]=[];for(var a=0;a<l.length;a++){u=-1/0,r=-1;for(var s=0;s<l[0].length;s++)l[a][s]>u&&(u=l[a][s],r=s);i[r].push(n[a])}for(var c=0;c<i.length;c++)i[c]=t.collection(i[c]);return i}(i,e,o,r),degreeOfMembership:e}},ce={kMeans:function(n){var l,e=this.cy(),t=this.nodes(),u=null,r=Ql(n),o=new Array(r.k),a={};r.testMode?"number"==typeof r.testCentroids?(r.testCentroids,l=ne(t,r.k,r.attributes)):l="object"===i(r.testCentroids)?r.testCentroids:ne(t,r.k,r.attributes):l=ne(t,r.k,r.attributes);for(var s,c,h,d=!0,f=0;d&&f<r.maxIterations;){for(var p=0;p<t.length;p++)a[(u=t[p]).id()]=le(u,l,r.distance,r.attributes,"kMeans");d=!1;for(var g=0;g<r.k;g++){var v=ee(g,t,a);if(0!==v.length){for(var y=r.attributes.length,m=l[g],b=new Array(y),w=new Array(y),_=0;_<y;_++){w[_]=0;for(var x=0;x<v.length;x++)u=v[x],w[_]+=r.attributes[_](u);b[_]=w[_]/v.length,s=b[_],c=m[_],h=r.sensitivityThreshold,Math.abs(c-s)<=h||(d=!0)}l[g]=b,o[g]=e.collection(v)}}f++}return o},kMedoids:function(n){var l,e,t=this.cy(),u=this.nodes(),r=null,o=Ql(n),a=new Array(o.k),s={},c=new Array(o.k);o.testMode?"number"==typeof o.testCentroids||(l="object"===i(o.testCentroids)?o.testCentroids:re(u,o.k)):l=re(u,o.k);for(var h=!0,d=0;h&&d<o.maxIterations;){for(var f=0;f<u.length;f++)s[(r=u[f]).id()]=le(r,l,o.distance,o.attributes,"kMedoids");h=!1;for(var p=0;p<l.length;p++){var g=ee(p,u,s);if(0!==g.length){c[p]=ie(l[p],g,o.attributes);for(var v=0;v<g.length;v++)(e=ie(g[v],g,o.attributes))<c[p]&&(c[p]=e,l[p]=g[v],h=!0);a[p]=t.collection(g)}}d++}return a},fuzzyCMeans:se,fcm:se},he=gn({distance:"euclidean",linkage:"min",mode:"threshold",threshold:1/0,addDendrogram:!1,dendrogramDepth:0,attributes:[]}),de={single:"min",complete:"max"},fe=function(n,l,e,t,u){for(var r,i=0,o=1/0,a=u.attributes,s=function(n,l){return $l(u.distance,a.length,function(l){return a[l](n)},function(n){return a[n](l)})},c=0;c<n.length;c++){var h=n[c].key,d=e[h][t[h]];d<o&&(i=h,o=d)}if("threshold"===u.mode&&o>=u.threshold||"dendrogram"===u.mode&&1===n.length)return!1;var f,p=l[i],g=l[t[i]];f="dendrogram"===u.mode?{left:p,right:g,key:p.key}:{value:p.value.concat(g.value),key:p.key},n[p.index]=f,n.splice(g.index,1),l[p.key]=f;for(var v=0;v<n.length;v++){var y=n[v];p.key===y.key?r=1/0:"min"===u.linkage?(r=e[p.key][y.key],e[p.key][y.key]>e[g.key][y.key]&&(r=e[g.key][y.key])):"max"===u.linkage?(r=e[p.key][y.key],e[p.key][y.key]<e[g.key][y.key]&&(r=e[g.key][y.key])):r="mean"===u.linkage?(e[p.key][y.key]*p.size+e[g.key][y.key]*g.size)/(p.size+g.size):"dendrogram"===u.mode?s(y.value,p.value):s(y.value[0],p.value[0]),e[p.key][y.key]=e[y.key][p.key]=r}for(var m=0;m<n.length;m++){var b=n[m].key;if(t[b]===p.key||t[b]===g.key){for(var w=b,_=0;_<n.length;_++){var x=n[_].key;e[b][x]<e[b][w]&&(w=x)}t[b]=w}n[m].index=m}return p.key=g.key=p.index=g.index=null,!0},pe=function n(l,e,t){l&&(l.value?e.push(l.value):(l.left&&n(l.left,e,t),l.right&&n(l.right,e,t)))},ge=function(n){for(var l=this.cy(),e=this.nodes(),t=function(n){var l=he(n),e=de[l.linkage];return null!=e&&(l.linkage=e),l}(n),u=t.attributes,r=function(n,l){return $l(t.distance,u.length,function(l){return u[l](n)},function(n){return u[n](l)})},i=[],o=[],a=[],s=[],c=0;c<e.length;c++){var h={value:"dendrogram"===t.mode?e[c]:[e[c]],key:c,index:c};i[c]=h,s[c]=h,o[c]=[],a[c]=0}for(var d=0;d<i.length;d++)for(var f=0;f<=d;f++){var p=void 0;p="dendrogram"===t.mode?d===f?1/0:r(i[d].value,i[f].value):d===f?1/0:r(i[d].value[0],i[f].value[0]),o[d][f]=p,o[f][d]=p,p<o[d][a[d]]&&(a[d]=f)}for(var g,v=fe(i,s,o,a,t);v;)v=fe(i,s,o,a,t);return"dendrogram"===t.mode?(g=function n(l,e,t){if(!l)return[];var u=[],r=[],i=[];return 0===e?(l.left&&pe(l.left,u,t),l.right&&pe(l.right,r,t),i=u.concat(r),[t.collection(i)]):1===e?l.value?[t.collection(l.value)]:(l.left&&pe(l.left,u,t),l.right&&pe(l.right,r,t),[t.collection(u),t.collection(r)]):l.value?[t.collection(l.value)]:(l.left&&(u=n(l.left,e-1,t)),l.right&&(r=n(l.right,e-1,t)),u.concat(r))}(i[0],t.dendrogramDepth,l),t.addDendrogram&&function n(l,e){if(!l)return"";if(l.left&&l.right){var t=n(l.left,e),u=n(l.right,e),r=e.add({group:"nodes",data:{id:t+","+u}});return e.add({group:"edges",data:{source:t,target:r.id()}}),e.add({group:"edges",data:{source:u,target:r.id()}}),r.id()}return l.value?l.value.id():void 0}(i[0],l)):(g=new Array(i.length),i.forEach(function(n,e){n.key=n.index=null,g[e]=l.collection(n.value)})),g},ve={hierarchicalClustering:ge,hca:ge},ye=gn({distance:"euclidean",preference:"median",damping:.8,maxIterations:1e3,minIterations:100,attributes:[]}),me=function(n,l,e,t){var u=function(n,l){return t[l](n)};return-$l(n,t.length,function(n){return u(l,n)},function(n){return u(e,n)},l,e)},be=function(n,l){return"median"===l?function(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n.length,t=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],u=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];t?n=n.slice(l,e):(e<n.length&&n.splice(e,n.length-e),l>0&&n.splice(0,l));for(var i=0,o=n.length-1;o>=0;o--){var a=n[o];r?isFinite(a)||(n[o]=-1/0,i++):n.splice(o,1)}u&&n.sort(function(n,l){return n-l});var s=n.length,c=Math.floor(s/2);return s%2!=0?n[c+1+i]:(n[c-1+i]+n[c+i])/2}(n):"mean"===l?function(n){for(var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n.length,t=0,u=0,r=l;r<e;r++){var i=n[r];isFinite(i)&&(t+=i,u++)}return t/u}(n):"min"===l?function(n){for(var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n.length,t=1/0,u=l;u<e;u++){var r=n[u];isFinite(r)&&(t=Math.min(r,t))}return t}(n):"max"===l?function(n){for(var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n.length,t=-1/0,u=l;u<e;u++){var r=n[u];isFinite(r)&&(t=Math.max(r,t))}return t}(n):l},we=function(n,l,e){for(var t=[],u=0;u<n;u++){for(var r=-1,i=-1/0,o=0;o<e.length;o++){var a=e[o];l[u*n+a]>i&&(r=a,i=l[u*n+a])}r>0&&t.push(r)}for(var s=0;s<e.length;s++)t[e[s]]=e[s];return t},_e=function(n){for(var l,e,t,u,r,i,o=this.cy(),a=this.nodes(),s=function(n){var l=n.damping,e=n.preference;.5<=l&&l<1||sn("Damping must range on [0.5, 1).  Got: ".concat(l));var t=["median","mean","min","max"];return t.some(function(n){return n===e})||x(e)||sn("Preference must be one of [".concat(t.map(function(n){return"'".concat(n,"'")}).join(", "),"] or a number.  Got: ").concat(e)),ye(n)}(n),c={},h=0;h<a.length;h++)c[a[h].id()]=h;e=(l=a.length)*l,t=new Array(e);for(var d=0;d<e;d++)t[d]=-1/0;for(var f=0;f<l;f++)for(var p=0;p<l;p++)f!==p&&(t[f*l+p]=me(s.distance,a[f],a[p],s.attributes));u=be(t,s.preference);for(var g=0;g<l;g++)t[g*l+g]=u;r=new Array(e);for(var v=0;v<e;v++)r[v]=0;i=new Array(e);for(var y=0;y<e;y++)i[y]=0;for(var m=new Array(l),b=new Array(l),w=new Array(l),_=0;_<l;_++)m[_]=0,b[_]=0,w[_]=0;for(var E,T=new Array(l*s.minIterations),k=0;k<T.length;k++)T[k]=0;for(E=0;E<s.maxIterations;E++){for(var C=0;C<l;C++){for(var S=-1/0,I=-1/0,N=-1,D=0,O=0;O<l;O++)m[O]=r[C*l+O],(D=i[C*l+O]+t[C*l+O])>=S?(I=S,S=D,N=O):D>I&&(I=D);for(var A=0;A<l;A++)r[C*l+A]=(1-s.damping)*(t[C*l+A]-S)+s.damping*m[A];r[C*l+N]=(1-s.damping)*(t[C*l+N]-I)+s.damping*m[N]}for(var P=0;P<l;P++){for(var M=0,L=0;L<l;L++)m[L]=i[L*l+P],b[L]=Math.max(0,r[L*l+P]),M+=b[L];M-=b[P],b[P]=r[P*l+P],M+=b[P];for(var R=0;R<l;R++)i[R*l+P]=(1-s.damping)*Math.min(0,M-b[R])+s.damping*m[R];i[P*l+P]=(1-s.damping)*(M-b[P])+s.damping*m[P]}for(var F=0,B=0;B<l;B++){var j=i[B*l+B]+r[B*l+B]>0?1:0;T[E%s.minIterations*l+B]=j,F+=j}if(F>0&&(E>=s.minIterations-1||E==s.maxIterations-1)){for(var U=0,z=0;z<l;z++){w[z]=0;for(var q=0;q<s.minIterations;q++)w[z]+=T[q*l+z];0!==w[z]&&w[z]!==s.minIterations||U++}if(U===l)break}}for(var V=function(n,l,e){for(var t=[],u=0;u<n;u++)l[u*n+u]+e[u*n+u]>0&&t.push(u);return t}(l,r,i),H=function(n,l,e){for(var t=we(n,l,e),u=0;u<e.length;u++){for(var r=[],i=0;i<t.length;i++)t[i]===e[u]&&r.push(i);for(var o=-1,a=-1/0,s=0;s<r.length;s++){for(var c=0,h=0;h<r.length;h++)c+=l[r[h]*n+r[s]];c>a&&(o=s,a=c)}e[u]=r[o]}return t=we(n,l,e)}(l,t,V),G={},Y=0;Y<V.length;Y++)G[V[Y]]=[];for(var W=0;W<a.length;W++){var X=H[c[a[W].id()]];null!=X&&G[X].push(a[W])}for(var K=new Array(V.length),$=0;$<V.length;$++)K[$]=o.collection(G[V[$]]);return K},xe={};[kn,Sn,In,Dn,An,Mn,Bn,kl,Sl,Nl,Ol,zl,ce,ve,{affinityPropagation:_e,ap:_e}].forEach(function(n){j(xe,n)});
/*!
Embeddable Minimum Strictly-Compliant Promises/A+ 1.1.1 Thenable
Copyright (c) 2013-2014 Ralf S. Engelschall (http://engelschall.com)
Licensed under The MIT License (http://opensource.org/licenses/MIT)
*/
var Ee=function n(l){if(!(this instanceof n))return new n(l);this.id="Thenable/1.0.7",this.state=0,this.fulfillValue=void 0,this.rejectReason=void 0,this.onFulfilled=[],this.onRejected=[],this.proxy={then:this.then.bind(this)},"function"==typeof l&&l.call(this,this.fulfill.bind(this),this.reject.bind(this))};Ee.prototype={fulfill:function(n){return Te(this,1,"fulfillValue",n)},reject:function(n){return Te(this,2,"rejectReason",n)},then:function(n,l){var e=new Ee;return this.onFulfilled.push(Se(n,e,"fulfill")),this.onRejected.push(Se(l,e,"reject")),ke(this),e.proxy}};var Te=function(n,l,e,t){return 0===n.state&&(n.state=l,n[e]=t,ke(n)),n},ke=function(n){1===n.state?Ce(n,"onFulfilled",n.fulfillValue):2===n.state&&Ce(n,"onRejected",n.rejectReason)},Ce=function(n,e,t){if(0!==n[e].length){var u=n[e];n[e]=[];var r=function(){for(var n=0;n<u.length;n++)u[n](t)};"function"==typeof l?l(r):setTimeout(r,0)}},Se=function(n,l,e){return function(t){if("function"!=typeof n)l[e].call(l,t);else{var u;try{u=n(t)}catch(n){return void l.reject(n)}Ie(l,u)}}},Ie=function n(l,e){if(l!==e&&l.proxy!==e){var t;if("object"===i(e)&&null!==e||"function"==typeof e)try{t=e.then}catch(n){return void l.reject(n)}if("function"!=typeof t)l.fulfill(e);else{var u=!1;try{t.call(e,function(t){u||(u=!0,t===e?l.reject(new TypeError("circular thenable chain")):n(l,t))},function(n){u||(u=!0,l.reject(n))})}catch(n){u||l.reject(n)}}}else l.reject(new TypeError("cannot resolve promise with itself"))};Ee.all=function(n){return new Ee(function(l,e){for(var t=new Array(n.length),u=0,r=function(e,r){t[e]=r,++u===n.length&&l(t)},i=0;i<n.length;i++)!function(l){var t=n[l];null!=t&&null!=t.then?t.then(function(n){r(l,n)},function(n){e(n)}):r(l,t)}(i)})},Ee.resolve=function(n){return new Ee(function(l,e){l(n)})},Ee.reject=function(n){return new Ee(function(l,e){e(n)})};var Ne="undefined"!=typeof Promise?Promise:Ee,De=function(n,l,e){var t=S(n),u=!t,r=this._private=j({duration:1e3},l,e);if(r.target=n,r.style=r.style||r.css,r.started=!1,r.playing=!1,r.hooked=!1,r.applying=!1,r.progress=0,r.completes=[],r.frames=[],r.complete&&b(r.complete)&&r.completes.push(r.complete),u){var i=n.position();r.startPosition=r.startPosition||{x:i.x,y:i.y},r.startStyle=r.startStyle||n.cy().style().getAnimationStartStyle(n,r.style)}if(t){var o=n.pan();r.startPan={x:o.x,y:o.y},r.startZoom=n.zoom()}this.length=1,this[0]=this},Oe=De.prototype;j(Oe,{instanceString:function(){return"animation"},hook:function(){var n=this._private;if(!n.hooked){var l=n.target._private.animation;(n.queue?l.queue:l.current).push(this),T(n.target)&&n.target.cy().addToAnimationPool(n.target),n.hooked=!0}return this},play:function(){var n=this._private;return 1===n.progress&&(n.progress=0),n.playing=!0,n.started=!1,n.stopped=!1,this.hook(),this},playing:function(){return this._private.playing},apply:function(){var n=this._private;return n.applying=!0,n.started=!1,n.stopped=!1,this.hook(),this},applying:function(){return this._private.applying},pause:function(){var n=this._private;return n.playing=!1,n.started=!1,this},stop:function(){var n=this._private;return n.playing=!1,n.started=!1,n.stopped=!0,this},rewind:function(){return this.progress(0)},fastforward:function(){return this.progress(1)},time:function(n){var l=this._private;return void 0===n?l.progress*l.duration:this.progress(n/l.duration)},progress:function(n){var l=this._private,e=l.playing;return void 0===n?l.progress:(e&&this.pause(),l.progress=n,l.started=!1,e&&this.play(),this)},completed:function(){return 1===this._private.progress},reverse:function(){var n=this._private,l=n.playing;l&&this.pause(),n.progress=1-n.progress,n.started=!1;var e=function(l,e){var t=n[l];null!=t&&(n[l]=n[e],n[e]=t)};if(e("zoom","startZoom"),e("pan","startPan"),e("position","startPosition"),n.style)for(var t=0;t<n.style.length;t++){var u=n.style[t],r=u.name,i=n.startStyle[r];n.startStyle[r]=u,n.style[t]=i}return l&&this.play(),this},promise:function(n){var l,e=this._private;switch(n){case"frame":l=e.frames;break;default:case"complete":case"completed":l=e.completes}return new Ne(function(n,e){l.push(function(){n()})})}}),Oe.complete=Oe.completed,Oe.run=Oe.play,Oe.running=Oe.playing;var Ae={};[{animated:function(){return function(){var n=void 0!==this.length?this:[this];if(!(this._private.cy||this).styleEnabled())return!1;var l=n[0];return l?l._private.animation.current.length>0:void 0}},clearQueue:function(){return function(){var n=void 0!==this.length?this:[this];if(!(this._private.cy||this).styleEnabled())return this;for(var l=0;l<n.length;l++){n[l]._private.animation.queue=[]}return this}},delay:function(){return function(n,l){return(this._private.cy||this).styleEnabled()?this.animate({delay:n,duration:n,complete:l}):this}},delayAnimation:function(){return function(n,l){return(this._private.cy||this).styleEnabled()?this.animation({delay:n,duration:n,complete:l}):this}},animation:function(){return function(n,l){var e=void 0!==this.length,t=e?this:[this],u=this._private.cy||this,r=!e,i=!r;if(!u.styleEnabled())return this;var o=u.style();if(n=j({},n,l),0===Object.keys(n).length)return new De(t[0],n);switch(void 0===n.duration&&(n.duration=400),n.duration){case"slow":n.duration=600;break;case"fast":n.duration=200}if(i&&(n.style=o.getPropsList(n.style||n.css),n.css=void 0),i&&null!=n.renderedPosition){var a=n.renderedPosition,s=u.pan(),c=u.zoom();n.position=Un(a,c,s)}if(r&&null!=n.panBy){var h=n.panBy,d=u.pan();n.pan={x:d.x+h.x,y:d.y+h.y}}var f=n.center||n.centre;if(r&&null!=f){var p=u.getCenterPan(f.eles,n.zoom);null!=p&&(n.pan=p)}if(r&&null!=n.fit){var g=n.fit,v=u.getFitViewport(g.eles||g.boundingBox,g.padding);null!=v&&(n.pan=v.pan,n.zoom=v.zoom)}if(r&&_(n.zoom)){var y=u.getZoomedViewport(n.zoom);null!=y&&(y.zoomed&&(n.zoom=y.zoom),y.panned&&(n.pan=y.pan))}return new De(t[0],n)}},animate:function(){return function(n,l){var e=void 0!==this.length?this:[this];if(!(this._private.cy||this).styleEnabled())return this;l&&(n=j({},n,l));for(var t=0;t<e.length;t++){var u=e[t],r=u.animated()&&(void 0===n.queue||n.queue);u.animation(n,r?{queue:!0}:void 0).play()}return this}},stop:function(){return function(n,l){var e=void 0!==this.length?this:[this],t=this._private.cy||this;if(!t.styleEnabled())return this;for(var u=0;u<e.length;u++){for(var r=e[u]._private,i=r.animation.current,o=0;o<i.length;o++){var a=i[o]._private;l&&(a.duration=0)}n&&(r.animation.queue=[]),l||(r.animation.current=[])}return t.notify("draw"),this}}},{data:function(n){return n=j({},{field:"data",bindingEvent:"data",allowBinding:!1,allowSetting:!1,allowGetting:!1,settingEvent:"data",settingTriggersEvent:!1,triggerFnName:"trigger",immutableKeys:{},updateStyle:!1,beforeGet:function(n){},beforeSet:function(n,l){},onSet:function(n){},canSet:function(n){return!0}},n),function(l,e){var t=n,u=void 0!==this.length,r=u?this:[this],i=u?this[0]:this;if(m(l)){var o;if(t.allowGetting&&void 0===e)return i&&(t.beforeGet(i),o=i._private[t.field][l]),o;if(t.allowSetting&&void 0!==e&&!t.immutableKeys[l]){var a=function(n,l,e){return l in n?Object.defineProperty(n,l,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[l]=e,n}({},l,e);t.beforeSet(this,a);for(var s=0,c=r.length;s<c;s++){var h=r[s];t.canSet(h)&&(h._private[t.field][l]=e)}t.updateStyle&&this.updateStyle(),t.onSet(this),t.settingTriggersEvent&&this[t.triggerFnName](t.settingEvent)}}else if(t.allowSetting&&_(l)){var d,f,p=l,g=Object.keys(p);t.beforeSet(this,p);for(var v=0;v<g.length;v++){if(f=p[d=g[v]],!t.immutableKeys[d])for(var y=0;y<r.length;y++){var w=r[y];t.canSet(w)&&(w._private[t.field][d]=f)}}t.updateStyle&&this.updateStyle(),t.onSet(this),t.settingTriggersEvent&&this[t.triggerFnName](t.settingEvent)}else if(t.allowBinding&&b(l)){var x=l;this.on(t.bindingEvent,x)}else if(t.allowGetting&&void 0===l){var E;return i&&(t.beforeGet(i),E=i._private[t.field]),E}return this}},removeData:function(n){return n=j({},{field:"data",event:"data",triggerFnName:"trigger",triggerEvent:!1,immutableKeys:{}},n),function(l){var e=n,t=void 0!==this.length?this:[this];if(m(l)){for(var u=l.split(/\s+/),r=u.length,i=0;i<r;i++){var o=u[i];if(!N(o))if(!e.immutableKeys[o])for(var a=0,s=t.length;a<s;a++)t[a]._private[e.field][o]=void 0}e.triggerEvent&&this[e.triggerFnName](e.event)}else if(void 0===l){for(var c=0,h=t.length;c<h;c++)for(var d=t[c]._private[e.field],f=Object.keys(d),p=0;p<f.length;p++){var g=f[p];!e.immutableKeys[g]&&(d[g]=void 0)}e.triggerEvent&&this[e.triggerFnName](e.event)}return this}}},{eventAliasesOn:function(n){var l=n;l.addListener=l.listen=l.bind=l.on,l.unlisten=l.unbind=l.off=l.removeListener,l.trigger=l.emit,l.pon=l.promiseOn=function(n,l){var e=this,t=Array.prototype.slice.call(arguments,0);return new Ne(function(n,l){var u=t.concat([function(l){e.off.apply(e,r),n(l)}]),r=u.concat([]);e.on.apply(e,u)})}}}].forEach(function(n){j(Ae,n)});var Pe={animate:Ae.animate(),animation:Ae.animation(),animated:Ae.animated(),clearQueue:Ae.clearQueue(),delay:Ae.delay(),delayAnimation:Ae.delayAnimation(),stop:Ae.stop()},Me={classes:function(n){w(n)||(n=(n||"").match(/\S+/g)||[]);for(var l=[],e=new xn(n),t=0;t<this.length;t++){for(var u=this[t],r=u._private,i=r.classes,o=!1,a=0;a<n.length;a++){var s=n[a];if(!i.has(s)){o=!0;break}}o||(o=i.size!==n.length),o&&(r.classes=e,l.push(u))}return l.length>0&&this.spawn(l).updateStyle().emit("class"),this},addClass:function(n){return this.toggleClass(n,!0)},hasClass:function(n){var l=this[0];return null!=l&&l._private.classes.has(n)},toggleClass:function(n,l){w(n)||(n=n.match(/\S+/g)||[]);for(var e=void 0===l,t=[],u=0,r=this.length;u<r;u++)for(var i=this[u],o=i._private.classes,a=!1,s=0;s<n.length;s++){var c=n[s],h=o.has(c),d=!1;l||e&&!h?(o.add(c),d=!0):(!l||e&&h)&&(o.delete(c),d=!0),!a&&d&&(t.push(i),a=!0)}return t.length>0&&this.spawn(t).updateStyle().emit("class"),this},removeClass:function(n){return this.toggleClass(n,!1)},flashClass:function(n,l){var e=this;if(null==l)l=250;else if(0===l)return e;return e.addClass(n),setTimeout(function(){e.removeClass(n)},l),e}},Le={metaChar:"[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\|\\}\\~]",comparatorOp:"=|\\!=|>|>=|<|<=|\\$=|\\^=|\\*=",boolOp:"\\?|\\!|\\^",string:'"(?:\\\\"|[^"])*"|'+"'(?:\\\\'|[^'])*'",number:F,meta:"degree|indegree|outdegree",separator:"\\s*,\\s*",descendant:"\\s+",child:"\\s+>\\s+",subject:"\\$",group:"node|edge|\\*",directedEdge:"\\s+->\\s+",undirectedEdge:"\\s+<->\\s+"};Le.variable="(?:[\\w-]|(?:\\\\"+Le.metaChar+"))+",Le.value=Le.string+"|"+Le.number,Le.className=Le.variable,Le.id=Le.variable,function(){var n,l,e;for(n=Le.comparatorOp.split("|"),e=0;e<n.length;e++)l=n[e],Le.comparatorOp+="|@"+l;for(n=Le.comparatorOp.split("|"),e=0;e<n.length;e++)(l=n[e]).indexOf("!")>=0||"="!==l&&(Le.comparatorOp+="|\\!"+l)}();var Re=0,Fe=1,Be=2,je=3,Ue=4,ze=5,qe=6,Ve=7,He=8,Ge=9,Ye=10,We=11,Xe=12,Ke=13,$e=14,Ze=15,Qe=16,Je=17,nt=18,lt=19,et=20,tt=[{selector:":selected",matches:function(n){return n.selected()}},{selector:":unselected",matches:function(n){return!n.selected()}},{selector:":selectable",matches:function(n){return n.selectable()}},{selector:":unselectable",matches:function(n){return!n.selectable()}},{selector:":locked",matches:function(n){return n.locked()}},{selector:":unlocked",matches:function(n){return!n.locked()}},{selector:":visible",matches:function(n){return n.visible()}},{selector:":hidden",matches:function(n){return!n.visible()}},{selector:":transparent",matches:function(n){return n.transparent()}},{selector:":grabbed",matches:function(n){return n.grabbed()}},{selector:":free",matches:function(n){return!n.grabbed()}},{selector:":removed",matches:function(n){return n.removed()}},{selector:":inside",matches:function(n){return!n.removed()}},{selector:":grabbable",matches:function(n){return n.grabbable()}},{selector:":ungrabbable",matches:function(n){return!n.grabbable()}},{selector:":animated",matches:function(n){return n.animated()}},{selector:":unanimated",matches:function(n){return!n.animated()}},{selector:":parent",matches:function(n){return n.isParent()}},{selector:":childless",matches:function(n){return n.isChildless()}},{selector:":child",matches:function(n){return n.isChild()}},{selector:":orphan",matches:function(n){return n.isOrphan()}},{selector:":nonorphan",matches:function(n){return n.isChild()}},{selector:":compound",matches:function(n){return n.isNode()?n.isParent():n.source().isParent()||n.target().isParent()}},{selector:":loop",matches:function(n){return n.isLoop()}},{selector:":simple",matches:function(n){return n.isSimple()}},{selector:":active",matches:function(n){return n.active()}},{selector:":inactive",matches:function(n){return!n.active()}},{selector:":backgrounding",matches:function(n){return n.backgrounding()}},{selector:":nonbackgrounding",matches:function(n){return!n.backgrounding()}}].sort(function(n,l){return function(n,l){return-1*B(n,l)}(n.selector,l.selector)}),ut=function(){for(var n,l={},e=0;e<tt.length;e++)l[(n=tt[e]).selector]=n.matches;return l}(),rt="("+tt.map(function(n){return n.selector}).join("|")+")",it=function(n){return n.replace(new RegExp("\\\\("+Le.metaChar+")","g"),function(n,l){return l})},ot=function(n,l,e){n[n.length-1]=e},at=[{name:"group",query:!0,regex:"("+Le.group+")",populate:function(n,l,e){var t=c(e,1)[0];l.checks.push({type:Re,value:"*"===t?t:t+"s"})}},{name:"state",query:!0,regex:rt,populate:function(n,l,e){var t=c(e,1)[0];l.checks.push({type:Ve,value:t})}},{name:"id",query:!0,regex:"\\#("+Le.id+")",populate:function(n,l,e){var t=c(e,1)[0];l.checks.push({type:He,value:it(t)})}},{name:"className",query:!0,regex:"\\.("+Le.className+")",populate:function(n,l,e){var t=c(e,1)[0];l.checks.push({type:Ge,value:it(t)})}},{name:"dataExists",query:!0,regex:"\\[\\s*("+Le.variable+")\\s*\\]",populate:function(n,l,e){var t=c(e,1)[0];l.checks.push({type:Ue,field:it(t)})}},{name:"dataCompare",query:!0,regex:"\\[\\s*("+Le.variable+")\\s*("+Le.comparatorOp+")\\s*("+Le.value+")\\s*\\]",populate:function(n,l,e){var t=c(e,3),u=t[0],r=t[1],i=t[2];i=null!=new RegExp("^"+Le.string+"$").exec(i)?i.substring(1,i.length-1):parseFloat(i),l.checks.push({type:je,field:it(u),operator:r,value:i})}},{name:"dataBool",query:!0,regex:"\\[\\s*("+Le.boolOp+")\\s*("+Le.variable+")\\s*\\]",populate:function(n,l,e){var t=c(e,2),u=t[0],r=t[1];l.checks.push({type:ze,field:it(r),operator:u})}},{name:"metaCompare",query:!0,regex:"\\[\\[\\s*("+Le.meta+")\\s*("+Le.comparatorOp+")\\s*("+Le.number+")\\s*\\]\\]",populate:function(n,l,e){var t=c(e,3),u=t[0],r=t[1],i=t[2];l.checks.push({type:qe,field:it(u),operator:r,value:parseFloat(i)})}},{name:"nextQuery",separator:!0,regex:Le.separator,populate:function(n,l){var e=n.currentSubject,t=n.edgeCount,u=n.compoundCount,r=n[n.length-1];return null!=e&&(r.subject=e,n.currentSubject=null),r.edgeCount=t,r.compoundCount=u,n.edgeCount=0,n.compoundCount=0,n[n.length++]={checks:[]}}},{name:"directedEdge",separator:!0,regex:Le.directedEdge,populate:function(n,l){if(null==n.currentSubject){var e={checks:[]},t=l,u={checks:[]};return e.checks.push({type:We,source:t,target:u}),ot(n,0,e),n.edgeCount++,u}var r={checks:[]},i=l,o={checks:[]};return r.checks.push({type:Xe,source:i,target:o}),ot(n,0,r),n.edgeCount++,o}},{name:"undirectedEdge",separator:!0,regex:Le.undirectedEdge,populate:function(n,l){if(null==n.currentSubject){var e={checks:[]},t=l,u={checks:[]};return e.checks.push({type:Ye,nodes:[t,u]}),ot(n,0,e),n.edgeCount++,u}var r={checks:[]},i=l,o={checks:[]};return r.checks.push({type:$e,node:i,neighbor:o}),ot(n,0,r),o}},{name:"child",separator:!0,regex:Le.child,populate:function(n,l){if(null==n.currentSubject){var e={checks:[]},t={checks:[]},u=n[n.length-1];return e.checks.push({type:Ze,parent:u,child:t}),ot(n,0,e),n.compoundCount++,t}if(n.currentSubject===l){var r={checks:[]},i=n[n.length-1],o={checks:[]},a={checks:[]},s={checks:[]},c={checks:[]};return r.checks.push({type:lt,left:i,right:o,subject:a}),a.checks=l.checks,l.checks=[{type:et}],c.checks.push({type:et}),o.checks.push({type:Je,parent:c,child:s}),ot(n,0,r),n.currentSubject=a,n.compoundCount++,s}var h={checks:[]},d={checks:[]},f=[{type:Je,parent:h,child:d}];return h.checks=l.checks,l.checks=f,n.compoundCount++,d}},{name:"descendant",separator:!0,regex:Le.descendant,populate:function(n,l){if(null==n.currentSubject){var e={checks:[]},t={checks:[]},u=n[n.length-1];return e.checks.push({type:Qe,ancestor:u,descendant:t}),ot(n,0,e),n.compoundCount++,t}if(n.currentSubject===l){var r={checks:[]},i=n[n.length-1],o={checks:[]},a={checks:[]},s={checks:[]},c={checks:[]};return r.checks.push({type:lt,left:i,right:o,subject:a}),a.checks=l.checks,l.checks=[{type:et}],c.checks.push({type:et}),o.checks.push({type:nt,ancestor:c,descendant:s}),ot(n,0,r),n.currentSubject=a,n.compoundCount++,s}var h={checks:[]},d={checks:[]},f=[{type:nt,ancestor:h,descendant:d}];return h.checks=l.checks,l.checks=f,n.compoundCount++,d}},{name:"subject",modifier:!0,regex:Le.subject,populate:function(n,l){if(null!=n.currentSubject&&n.currentSubject!==l)return cn("Redefinition of subject in selector `"+n.toString()+"`"),!1;n.currentSubject=l;var e=n[n.length-1].checks[0],t=null==e?null:e.type;t===We?e.type=Ke:t===Ye&&(e.type=$e,e.node=e.nodes[1],e.neighbor=e.nodes[0],e.nodes=null)}}];at.forEach(function(n){return n.regexObj=new RegExp("^"+n.regex)});var st=function(n){for(var l,e,t,u=0;u<at.length;u++){var r=at[u],i=r.name,o=n.match(r.regexObj);if(null!=o){e=o,l=r,t=i;var a=o[0];n=n.substring(a.length);break}}return{expr:l,match:e,name:t,remaining:n}},ct={parse:function(n){var l=this.inputText=n,e=this[0]={checks:[]};for(this.length=1,l=function(n){var l=n.match(/^\s+/);if(l){var e=l[0];n=n.substring(e.length)}return n}(l);;){var t=st(l);if(null==t.expr)return cn("The selector `"+n+"`is invalid"),!1;var u=t.match.slice(1),r=t.expr.populate(this,e,u);if(!1===r)return!1;if(null!=r&&(e=r),(l=t.remaining).match(/^\s*$/))break}var i=this[this.length-1];null!=this.currentSubject&&(i.subject=this.currentSubject),i.edgeCount=this.edgeCount,i.compoundCount=this.compoundCount;for(var o=0;o<this.length;o++){var a=this[o];if(a.compoundCount>0&&a.edgeCount>0)return cn("The selector `"+n+"` is invalid because it uses both a compound selector and an edge selector"),!1;if(a.edgeCount>1)return cn("The selector `"+n+"` is invalid because it uses multiple edge selectors"),!1;1===a.edgeCount&&cn("The selector `"+n+"` is deprecated.  Edge selectors do not take effect on changes to source and target nodes after an edge is added, for performance reasons.  Use a class or data selector on edges instead, updating the class or data of an edge when your app detects a change in source or target nodes.")}return!0},toString:function(){if(null!=this.toStringCache)return this.toStringCache;for(var n=function(n){return null==n?"":n},l=function(l){return m(l)?'"'+l+'"':n(l)},e=function(n){return" "+n+" "},t=function(t,r){var i=t.type,o=t.value;switch(i){case Re:var a=n(o);return a.substring(0,a.length-1);case je:var s=t.field,c=t.operator;return"["+s+e(n(c))+l(o)+"]";case ze:var h=t.operator,d=t.field;return"["+n(h)+d+"]";case Ue:return"["+t.field+"]";case qe:var f=t.operator;return"[["+t.field+e(n(f))+l(o)+"]]";case Ve:return o;case He:return"#"+o;case Ge:return"."+o;case Je:case Ze:return u(t.parent,r)+e(">")+u(t.child,r);case nt:case Qe:return u(t.ancestor,r)+" "+u(t.descendant,r);case lt:var p=u(t.left,r),g=u(t.subject,r),v=u(t.right,r);return p+(p.length>0?" ":"")+g+v;case et:return""}},u=function(n,l){return n.checks.reduce(function(e,u,r){return e+(l===n&&0===r?"$":"")+t(u,l)},"")},r="",i=0;i<this.length;i++){var o=this[i];r+=u(o,o.subject),this.length>1&&i<this.length-1&&(r+=", ")}return this.toStringCache=r,r}},ht=function(n,l,e){var t,u,r,i=m(n),o=x(n),a=m(e),s=!1,c=!1,h=!1;switch(l.indexOf("!")>=0&&(l=l.replace("!",""),c=!0),l.indexOf("@")>=0&&(l=l.replace("@",""),s=!0),(i||a||s)&&(u=i||o?""+n:"",r=""+e),s&&(n=u=u.toLowerCase(),e=r=r.toLowerCase()),l){case"*=":t=u.indexOf(r)>=0;break;case"$=":t=u.indexOf(r,u.length-r.length)>=0;break;case"^=":t=0===u.indexOf(r);break;case"=":t=n===e;break;case">":h=!0,t=n>e;break;case">=":h=!0,t=n>=e;break;case"<":h=!0,t=n<e;break;case"<=":h=!0,t=n<=e;break;default:t=!1}return!c||null==n&&h||(t=!t),t},dt=function(n,l){return n.data(l)},ft=[],pt=function(n,l){return n.checks.every(function(n){return ft[n.type](n,l)})};ft[Re]=function(n,l){var e=n.value;return"*"===e||e===l.group()},ft[Ve]=function(n,l){return function(n,l){return ut[n](l)}(n.value,l)},ft[He]=function(n,l){var e=n.value;return l.id()===e},ft[Ge]=function(n,l){var e=n.value;return l.hasClass(e)},ft[qe]=function(n,l){var e=n.field,t=n.operator,u=n.value;return ht(function(n,l){return n[l]()}(l,e),t,u)},ft[je]=function(n,l){var e=n.field,t=n.operator,u=n.value;return ht(dt(l,e),t,u)},ft[ze]=function(n,l){var e=n.field,t=n.operator;return function(n,l){switch(l){case"?":return!!n;case"!":return!n;case"^":return void 0===n}}(dt(l,e),t)},ft[Ue]=function(n,l){var e=n.field;n.operator;return void 0!==dt(l,e)},ft[Ye]=function(n,l){var e=n.nodes[0],t=n.nodes[1],u=l.source(),r=l.target();return pt(e,u)&&pt(t,r)||pt(t,u)&&pt(e,r)},ft[$e]=function(n,l){return pt(n.node,l)&&l.neighborhood().some(function(l){return l.isNode()&&pt(n.neighbor,l)})},ft[We]=function(n,l){return pt(n.source,l.source())&&pt(n.target,l.target())},ft[Xe]=function(n,l){return pt(n.source,l)&&l.outgoers().some(function(l){return l.isNode()&&pt(n.target,l)})},ft[Ke]=function(n,l){return pt(n.target,l)&&l.incomers().some(function(l){return l.isNode()&&pt(n.source,l)})},ft[Ze]=function(n,l){return pt(n.child,l)&&pt(n.parent,l.parent())},ft[Je]=function(n,l){return pt(n.parent,l)&&l.children().some(function(l){return pt(n.child,l)})},ft[Qe]=function(n,l){return pt(n.descendant,l)&&l.ancestors().some(function(l){return pt(n.ancestor,l)})},ft[nt]=function(n,l){return pt(n.ancestor,l)&&l.descendants().some(function(l){return pt(n.descendant,l)})},ft[lt]=function(n,l){return pt(n.subject,l)&&pt(n.left,l)&&pt(n.right,l)},ft[et]=function(){return!0},ft[Fe]=function(n,l){return n.value.has(l)},ft[Be]=function(n,l){return(0,n.value)(l)};var gt=function(n){this.inputText=n,this.currentSubject=null,this.compoundCount=0,this.edgeCount=0,this.length=0,null==n||m(n)&&n.match(/^\s*$/)||(T(n)?this.addQuery({checks:[{type:Fe,value:n.collection()}]}):b(n)?this.addQuery({checks:[{type:Be,value:n}]}):m(n)?this.parse(n)||(this.invalid=!0):sn("A selector must be created from a string; found ",n))},vt=gt.prototype;[ct,{matches:function(n){for(var l=0;l<this.length;l++){var e=this[l];if(pt(e,n))return!0}return!1},filter:function(n){var l=this;if(1===l.length&&1===l[0].checks.length&&l[0].checks[0].type===He)return n.getElementById(l[0].checks[0].value).collection();var e=function(n){for(var e=0;e<l.length;e++){var t=l[e];if(pt(t,n))return!0}return!1};return null==l.text()&&(e=function(){return!0}),n.filter(e)}}].forEach(function(n){return j(vt,n)}),vt.text=function(){return this.inputText},vt.size=function(){return this.length},vt.eq=function(n){return this[n]},vt.sameText=function(n){return!this.invalid&&!n.invalid&&this.text()===n.text()},vt.addQuery=function(n){this[this.length++]=n},vt.selector=vt.toString;var yt={allAre:function(n){var l=new gt(n);return this.every(function(n){return l.matches(n)})},is:function(n){var l=new gt(n);return this.some(function(n){return l.matches(n)})},some:function(n,l){for(var e=0;e<this.length;e++){if(l?n.apply(l,[this[e],e,this]):n(this[e],e,this))return!0}return!1},every:function(n,l){for(var e=0;e<this.length;e++){if(!(l?n.apply(l,[this[e],e,this]):n(this[e],e,this)))return!1}return!0},same:function(n){if(this===n)return!0;n=this.cy().collection(n);var l=this.length;return l===n.length&&(1===l?this[0]===n[0]:this.every(function(l){return n.hasElementWithId(l.id())}))},anySame:function(n){return n=this.cy().collection(n),this.some(function(l){return n.hasElementWithId(l.id())})},allAreNeighbors:function(n){n=this.cy().collection(n);var l=this.neighborhood();return n.every(function(n){return l.hasElementWithId(n.id())})},contains:function(n){n=this.cy().collection(n);var l=this;return n.every(function(n){return l.hasElementWithId(n.id())})}};yt.allAreNeighbours=yt.allAreNeighbors,yt.has=yt.contains,yt.equal=yt.equals=yt.same;var mt,bt,wt=function(n,l){return function(e,t,u,r){var i,o=e;if(null==o?i="":T(o)&&1===o.length&&(i=o.id()),1===this.length&&i){var a=this[0]._private,s=a.traversalCache=a.traversalCache||{},c=s[l]=s[l]||[],h=Q(i),d=c[h];return d||(c[h]=n.call(this,e,t,u,r))}return n.call(this,e,t,u,r)}},_t={parent:function(n){var l=[];if(1===this.length){var e=this[0]._private.parent;if(e)return e}for(var t=0;t<this.length;t++){var u=this[t]._private.parent;u&&l.push(u)}return this.spawn(l,{unique:!0}).filter(n)},parents:function(n){for(var l=[],e=this.parent();e.nonempty();){for(var t=0;t<e.length;t++){var u=e[t];l.push(u)}e=e.parent()}return this.spawn(l,{unique:!0}).filter(n)},commonAncestors:function(n){for(var l,e=0;e<this.length;e++){var t=this[e].parents();l=(l=l||t).intersect(t)}return l.filter(n)},orphans:function(n){return this.stdFilter(function(n){return n.isOrphan()}).filter(n)},nonorphans:function(n){return this.stdFilter(function(n){return n.isChild()}).filter(n)},children:wt(function(n){for(var l=[],e=0;e<this.length;e++)for(var t=this[e]._private.children,u=0;u<t.length;u++)l.push(t[u]);return this.spawn(l,{unique:!0}).filter(n)},"children"),siblings:function(n){return this.parent().children().not(this).filter(n)},isParent:function(){var n=this[0];if(n)return n.isNode()&&0!==n._private.children.length},isChildless:function(){var n=this[0];if(n)return n.isNode()&&0===n._private.children.length},isChild:function(){var n=this[0];if(n)return n.isNode()&&null!=n._private.parent},isOrphan:function(){var n=this[0];if(n)return n.isNode()&&null==n._private.parent},descendants:function(n){var l=[];return function n(e){for(var t=0;t<e.length;t++){var u=e[t];l.push(u),u.children().nonempty()&&n(u.children())}}(this.children()),this.spawn(l,{unique:!0}).filter(n)}};function xt(n,l,e,t){for(var u=[],r=new xn,i=n.cy().hasCompoundNodes(),o=0;o<n.length;o++){var a=n[o];e?u.push(a):i&&t(u,r,a)}for(;u.length>0;){var s=u.shift();l(s),r.add(s.id()),i&&t(u,r,s)}return n}function Et(n,l,e){if(e.isParent())for(var t=e._private.children,u=0;u<t.length;u++){var r=t[u];l.has(r.id())||n.push(r)}}function Tt(n,l,e){if(e.isChild()){var t=e._private.parent;l.has(t.id())||n.push(t)}}function kt(n,l,e){Tt(n,l,e),Et(n,l,e)}_t.forEachDown=function(n){return xt(this,n,!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Et)},_t.forEachUp=function(n){return xt(this,n,!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Tt)},_t.forEachUpAndDown=function(n){return xt(this,n,!(arguments.length>1&&void 0!==arguments[1])||arguments[1],kt)},_t.ancestors=_t.parents,(mt=bt={data:Ae.data({field:"data",bindingEvent:"data",allowBinding:!0,allowSetting:!0,settingEvent:"data",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0,immutableKeys:{id:!0,source:!0,target:!0,parent:!0},updateStyle:!0}),removeData:Ae.removeData({field:"data",event:"data",triggerFnName:"trigger",triggerEvent:!0,immutableKeys:{id:!0,source:!0,target:!0,parent:!0},updateStyle:!0}),scratch:Ae.data({field:"scratch",bindingEvent:"scratch",allowBinding:!0,allowSetting:!0,settingEvent:"scratch",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0,updateStyle:!0}),removeScratch:Ae.removeData({field:"scratch",event:"scratch",triggerFnName:"trigger",triggerEvent:!0,updateStyle:!0}),rscratch:Ae.data({field:"rscratch",allowBinding:!1,allowSetting:!0,settingTriggersEvent:!1,allowGetting:!0}),removeRscratch:Ae.removeData({field:"rscratch",triggerEvent:!1}),id:function(){var n=this[0];if(n)return n._private.data.id}}).attr=mt.data,mt.removeAttr=mt.removeData;var Ct,St,It=bt,Nt={};function Dt(n){return function(l){if(void 0===l&&(l=!0),0!==this.length&&this.isNode()&&!this.removed()){for(var e=0,t=this[0],u=t._private.edges,r=0;r<u.length;r++){var i=u[r];!l&&i.isLoop()||(e+=n(t,i))}return e}}}function Ot(n,l){return function(e){for(var t,u=this.nodes(),r=0;r<u.length;r++){var i=u[r][n](e);void 0===i||void 0!==t&&!l(i,t)||(t=i)}return t}}j(Nt,{degree:Dt(function(n,l){return l.source().same(l.target())?2:1}),indegree:Dt(function(n,l){return l.target().same(n)?1:0}),outdegree:Dt(function(n,l){return l.source().same(n)?1:0})}),j(Nt,{minDegree:Ot("degree",function(n,l){return n<l}),maxDegree:Ot("degree",function(n,l){return n>l}),minIndegree:Ot("indegree",function(n,l){return n<l}),maxIndegree:Ot("indegree",function(n,l){return n>l}),minOutdegree:Ot("outdegree",function(n,l){return n<l}),maxOutdegree:Ot("outdegree",function(n,l){return n>l})}),j(Nt,{totalDegree:function(n){for(var l=0,e=this.nodes(),t=0;t<e.length;t++)l+=e[t].degree(n);return l}});var At=function(n,l,e){for(var t=0;t<n.length;t++){var u=n[t];if(!u.locked()){var r=u._private.position,i={x:null!=l.x?l.x-r.x:0,y:null!=l.y?l.y-r.y:0};!u.isParent()||0===i.x&&0===i.y||u.children().shift(i,e),u.shiftCachedBoundingBox(i)}}},Pt={field:"position",bindingEvent:"position",allowBinding:!0,allowSetting:!0,settingEvent:"position",settingTriggersEvent:!0,triggerFnName:"emitAndNotify",allowGetting:!0,validKeys:["x","y"],beforeGet:function(n){n.updateCompoundBounds()},beforeSet:function(n,l){At(n,l,!1)},onSet:function(n){n.dirtyCompoundBoundsCache()},canSet:function(n){return!n.locked()}};(Ct=St={position:Ae.data(Pt),silentPosition:Ae.data(j({},Pt,{allowBinding:!1,allowSetting:!0,settingTriggersEvent:!1,allowGetting:!1,beforeSet:function(n,l){At(n,l,!0)}})),positions:function(n,l){if(_(n))l?this.silentPosition(n):this.position(n);else if(b(n)){var e=n,t=this.cy();t.startBatch();for(var u=0;u<this.length;u++){var r,i=this[u];(r=e(i,u))&&(l?i.silentPosition(r):i.position(r))}t.endBatch()}return this},silentPositions:function(n){return this.positions(n,!0)},shift:function(n,l,e){var t;if(_(n)?(t=n,e=l):m(n)&&x(l)&&((t={x:0,y:0})[n]=l),null!=t){var u=this.cy();u.startBatch();for(var r=0;r<this.length;r++){var i=this[r],o=i.position(),a={x:o.x+t.x,y:o.y+t.y};e?i.silentPosition(a):i.position(a)}u.endBatch()}return this},silentShift:function(n,l){return _(n)?this.shift(n,!0):m(n)&&x(l)&&this.shift(n,l,!0),this},renderedPosition:function(n,l){var e=this[0],t=this.cy(),u=t.zoom(),r=t.pan(),i=_(n)?n:void 0,o=void 0!==i||void 0!==l&&m(n);if(e&&e.isNode()){if(!o){var a=e.position();return i=jn(a,u,r),void 0===n?i:i[n]}for(var s=0;s<this.length;s++){var c=this[s];void 0!==l?c.position(n,(l-r[n])/u):void 0!==i&&c.position(Un(i,u,r))}}else if(!o)return;return this},relativePosition:function(n,l){var e=this[0],t=this.cy(),u=_(n)?n:void 0,r=void 0!==u||void 0!==l&&m(n),i=t.hasCompoundNodes();if(e&&e.isNode()){if(!r){var o=e.position(),a=i?e.parent():null,s=a&&a.length>0,c=s;s&&(a=a[0]);var h=c?a.position():{x:0,y:0};return u={x:o.x-h.x,y:o.y-h.y},void 0===n?u:u[n]}for(var d=0;d<this.length;d++){var f=this[d],p=i?f.parent():null,g=p&&p.length>0,v=g;g&&(p=p[0]);var y=v?p.position():{x:0,y:0};void 0!==l?f.position(n,l+y[n]):void 0!==u&&f.position({x:u.x+y.x,y:u.y+y.y})}}else if(!r)return;return this}}).modelPosition=Ct.point=Ct.position,Ct.modelPositions=Ct.points=Ct.positions,Ct.renderedPoint=Ct.renderedPosition,Ct.relativePoint=Ct.relativePosition;var Mt,Lt,Rt=St;Mt=Lt={},Lt.renderedBoundingBox=function(n){var l=this.boundingBox(n),e=this.cy(),t=e.zoom(),u=e.pan(),r=l.x1*t+u.x,i=l.x2*t+u.x,o=l.y1*t+u.y,a=l.y2*t+u.y;return{x1:r,x2:i,y1:o,y2:a,w:i-r,h:a-o}},Lt.dirtyCompoundBoundsCache=function(){var n=this.cy();return n.styleEnabled()&&n.hasCompoundNodes()?(this.forEachUp(function(n){if(n.isParent()){var l=n._private;l.compoundBoundsClean=!1,l.bbCache=null,n.emitAndNotify("bounds")}}),this):this},Lt.updateCompoundBounds=function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],l=this.cy();if(!l.styleEnabled()||!l.hasCompoundNodes())return this;if(!n&&l.batching())return this;function e(n){if(n.isParent()){var l=n._private,e=n.children(),t="include"===n.pstyle("compound-sizing-wrt-labels").value,u={width:{val:n.pstyle("min-width").pfValue,left:n.pstyle("min-width-bias-left"),right:n.pstyle("min-width-bias-right")},height:{val:n.pstyle("min-height").pfValue,top:n.pstyle("min-height-bias-top"),bottom:n.pstyle("min-height-bias-bottom")}},r=e.boundingBox({includeLabels:t,includeOverlays:!1,useCache:!1}),i=l.position;0!==r.w&&0!==r.h||((r={w:n.pstyle("width").pfValue,h:n.pstyle("height").pfValue}).x1=i.x-r.w/2,r.x2=i.x+r.w/2,r.y1=i.y-r.h/2,r.y2=i.y+r.h/2);var o=u.width.left.value;"px"===u.width.left.units&&u.width.val>0&&(o=100*o/u.width.val);var a=u.width.right.value;"px"===u.width.right.units&&u.width.val>0&&(a=100*a/u.width.val);var s=u.height.top.value;"px"===u.height.top.units&&u.height.val>0&&(s=100*s/u.height.val);var c=u.height.bottom.value;"px"===u.height.bottom.units&&u.height.val>0&&(c=100*c/u.height.val);var h=y(u.width.val-r.w,o,a),d=h.biasDiff,f=h.biasComplementDiff,p=y(u.height.val-r.h,s,c),g=p.biasDiff,v=p.biasComplementDiff;l.autoPadding=function(n,l,e,t){if("%"!==e.units)return"px"===e.units?e.pfValue:0;switch(t){case"width":return n>0?e.pfValue*n:0;case"height":return l>0?e.pfValue*l:0;case"average":return n>0&&l>0?e.pfValue*(n+l)/2:0;case"min":return n>0&&l>0?n>l?e.pfValue*l:e.pfValue*n:0;case"max":return n>0&&l>0?n>l?e.pfValue*n:e.pfValue*l:0;default:return 0}}(r.w,r.h,n.pstyle("padding"),n.pstyle("padding-relative-to").value),l.autoWidth=Math.max(r.w,u.width.val),i.x=(-d+r.x1+r.x2+f)/2,l.autoHeight=Math.max(r.h,u.height.val),i.y=(-g+r.y1+r.y2+v)/2}function y(n,l,e){var t=0,u=0,r=l+e;return n>0&&r>0&&(t=l/r*n,u=e/r*n),{biasDiff:t,biasComplementDiff:u}}}for(var t=0;t<this.length;t++){var u=this[t],r=u._private;r.compoundBoundsClean||(e(u),l.batching()||(r.compoundBoundsClean=!0))}return this};var Ft=function(n){return n===1/0||n===-1/0?0:n},Bt=function(n,l,e,t,u){t-l!=0&&u-e!=0&&null!=l&&null!=e&&null!=t&&null!=u&&(n.x1=l<n.x1?l:n.x1,n.x2=t>n.x2?t:n.x2,n.y1=e<n.y1?e:n.y1,n.y2=u>n.y2?u:n.y2,n.w=n.x2-n.x1,n.h=n.y2-n.y1)},jt=function(n,l){return Bt(n,l.x1,l.y1,l.x2,l.y2)},Ut=function(n,l,e){return mn(n,l,e)},zt=function(n,l,e){if(!l.cy().headless()){var t,u,r=l._private,i=r.rstyle,o=i.arrowWidth/2;if("none"!==l.pstyle(e+"-arrow-shape").value){"source"===e?(t=i.srcX,u=i.srcY):"target"===e?(t=i.tgtX,u=i.tgtY):(t=i.midX,u=i.midY);var a=r.arrowBounds=r.arrowBounds||{},s=a[e]=a[e]||{};s.x1=t-o,s.y1=u-o,s.x2=t+o,s.y2=u+o,s.w=s.x2-s.x1,s.h=s.y2-s.y1,Qn(s,1),Bt(n,s.x1,s.y1,s.x2,s.y2)}}},qt=function(n,l,e){if(!l.cy().headless()){var t;t=e?e+"-":"";var u=l._private,r=u.rstyle;if(l.pstyle(t+"label").strValue){var i,o,a,s,c=l.pstyle("text-halign"),h=l.pstyle("text-valign"),d=Ut(r,"labelWidth",e),f=Ut(r,"labelHeight",e),p=Ut(r,"labelX",e),g=Ut(r,"labelY",e),v=l.pstyle(t+"text-margin-x").pfValue,y=l.pstyle(t+"text-margin-y").pfValue,m=l.isEdge(),b=l.pstyle(t+"text-rotation"),w=l.pstyle("text-outline-width").pfValue,_=l.pstyle("text-border-width").pfValue/2,x=l.pstyle("text-background-padding").pfValue,E=f+2*x,T=d+2*x,k=T/2,C=E/2;if(m)i=p-k,o=p+k,a=g-C,s=g+C;else{switch(c.value){case"left":i=p-T,o=p;break;case"center":i=p-k,o=p+k;break;case"right":i=p,o=p+T}switch(h.value){case"top":a=g-E,s=g;break;case"center":a=g-C,s=g+C;break;case"bottom":a=g,s=g+E}}i+=v-Math.max(w,_),o+=v+Math.max(w,_),a+=y-Math.max(w,_),s+=y+Math.max(w,_);var S=e||"main",I=u.labelBounds,N=I[S]=I[S]||{};N.x1=i,N.y1=a,N.x2=o,N.y2=s,N.w=o-i,N.h=s-a,Qn(N,1);var D=m&&"autorotate"===b.strValue,O=null!=b.pfValue&&0!==b.pfValue;if(D||O){var A=D?Ut(u.rstyle,"labelAngle",e):b.pfValue,P=Math.cos(A),M=Math.sin(A),L=(i+o)/2,R=(a+s)/2;if(!m){switch(c.value){case"left":L=o;break;case"right":L=i}switch(h.value){case"top":R=s;break;case"bottom":R=a}}var F=function(n,l){return{x:(n-=L)*P-(l-=R)*M+L,y:n*M+l*P+R}},B=F(i,a),j=F(i,s),U=F(o,a),z=F(o,s);i=Math.min(B.x,j.x,U.x,z.x),o=Math.max(B.x,j.x,U.x,z.x),a=Math.min(B.y,j.y,U.y,z.y),s=Math.max(B.y,j.y,U.y,z.y)}Bt(n,i,a,o,s),Bt(u.labelBounds.all,i,a,o,s)}return n}},Vt=function(n){var l=0,e=function(n){return(n?1:0)<<l++},t=0;return t+=e(n.incudeNodes),t+=e(n.includeEdges),t+=e(n.includeLabels),t+=e(n.includeOverlays)},Ht=function(n){if(n.isEdge()){var l=n.source().position(),e=n.target().position(),t=function(n){return Math.round(n)};return Z([t(l.x),t(l.y),t(e.x),t(e.y)])}return 0},Gt=function(n,l){var e,t=n._private,u=(null==l?Wt:Vt(l))===Wt,r=Ht(n),i=t.bbCachePosKey===r,o=!(l.useCache&&i)||null==t.bbCache;if(o?(i||n.recalculateRenderedStyle(!1),e=function(n,l){var e,t,u,r,i,o,a,s=n._private.cy,c=s.styleEnabled(),h=s.headless(),d=$n(),f=n._private,p=c?n.pstyle("display").value:"element",g=n.isNode(),v=n.isEdge(),y="none"!==p,m=f.rstyle,b=g&&c?n.pstyle("bounds-expansion").pfValue:0;if(y){var w=0;c&&l.includeOverlays&&0!==n.pstyle("overlay-opacity").value&&(w=n.pstyle("overlay-padding").value);var _=0;if(c&&(_=n.pstyle("width").pfValue/2),g&&l.includeNodes){var x=n.position();i=x.x,o=x.y;var E=n.outerWidth()/2,T=n.outerHeight()/2;Bt(d,e=i-E,u=o-T,t=i+E,r=o+T)}else if(v&&l.includeEdges)if(c&&!h&&(e=Math.min(m.srcX,m.midX,m.tgtX),t=Math.max(m.srcX,m.midX,m.tgtX),u=Math.min(m.srcY,m.midY,m.tgtY),r=Math.max(m.srcY,m.midY,m.tgtY),Bt(d,e-=_,u-=_,t+=_,r+=_)),c&&!h&&"haystack"===n.pstyle("curve-style").strValue){var k=m.haystackPts||[];if(e=k[0].x,u=k[0].y,e>(t=k[1].x)){var C=e;e=t,t=C}if(u>(r=k[1].y)){var S=u;u=r,r=S}Bt(d,e-_,u-_,t+_,r+_)}else{for(var I=m.bezierPts||m.linePts||[],N=0;N<I.length;N++){var D=I[N];e=D.x-_,t=D.x+_,u=D.y-_,r=D.y+_,Bt(d,e,u,t,r)}if(0===I.length){var O=n.source().position(),A=n.target().position();if((e=O.x)>(t=A.x)){var P=e;e=t,t=P}if((u=O.y)>(r=A.y)){var M=u;u=r,r=M}Bt(d,e-=_,u-=_,t+=_,r+=_)}}if(c&&l.includeEdges&&v&&(zt(d,n,"mid-source"),zt(d,n,"mid-target"),zt(d,n,"source"),zt(d,n,"target")),c&&"yes"===n.pstyle("ghost").value){var L=n.pstyle("ghost-offset-x").pfValue,R=n.pstyle("ghost-offset-y").pfValue;Bt(d,d.x1+L,d.y1+R,d.x2+L,d.y2+R)}var F=f.bodyBounds=f.bodyBounds||{};Jn(F,d),Qn(F,b),Qn(F,1),c&&(e=d.x1,t=d.x2,u=d.y1,r=d.y2,Bt(d,e-w,u-w,t+w,r+w));var B=f.overlayBounds=f.overlayBounds||{};Jn(B,d),Qn(B,b),Qn(B,1);var j=f.labelBounds=f.labelBounds||{};null!=j.all?((a=j.all).x1=1/0,a.y1=1/0,a.x2=-1/0,a.y2=-1/0,a.w=0,a.h=0):j.all=$n(),c&&l.includeLabels&&(qt(d,n,null),v&&(qt(d,n,"source"),qt(d,n,"target")))}return d.x1=Ft(d.x1),d.y1=Ft(d.y1),d.x2=Ft(d.x2),d.y2=Ft(d.y2),d.w=Ft(d.x2-d.x1),d.h=Ft(d.y2-d.y1),d.w>0&&d.h>0&&y&&(Qn(d,b),Qn(d,1)),d}(n,Yt),t.bbCache=e,t.bbCacheShift.x=t.bbCacheShift.y=0,t.bbCachePosKey=r):e=t.bbCache,!o&&(0!==t.bbCacheShift.x||0!==t.bbCacheShift.y)){var a=nl,s=t.bbCacheShift,c=function(n,l){null!=n&&a(n,l)};a(e,s);var h=t.bodyBounds,d=t.overlayBounds,f=t.labelBounds,p=t.arrowBounds;c(h,s),c(d,s),null!=p&&(c(p.source,s),c(p.target,s),c(p["mid-source"],s),c(p["mid-target"],s)),null!=f&&(c(f.main,s),c(f.all,s),c(f.source,s),c(f.target,s))}if(t.bbCacheShift.x=t.bbCacheShift.y=0,!u){var g=n.isNode();e=$n(),(l.includeNodes&&g||l.includeEdges&&!g)&&(l.includeOverlays?jt(e,t.overlayBounds):jt(e,t.bodyBounds)),l.includeLabels&&jt(e,t.labelBounds.all),e.w=e.x2-e.x1,e.h=e.y2-e.y1}return e},Yt={includeNodes:!0,includeEdges:!0,includeLabels:!0,includeOverlays:!0,useCache:!0},Wt=Vt(Yt),Xt=gn(Yt);Lt.boundingBox=function(n){if(1===this.length&&null!=this[0]._private.bbCache&&(void 0===n||void 0===n.useCache||!0===n.useCache))return n=void 0===n?Yt:Xt(n),Gt(this[0],n);var l=$n(),e=Xt(n=n||Yt);if(this.cy().styleEnabled())for(var t=0;t<this.length;t++){var u=this[t],r=u._private,i=Ht(u),o=r.bbCachePosKey===i,a=e.useCache&&o;u.recalculateRenderedStyle(a)}this.updateCompoundBounds();for(var s=0;s<this.length;s++){var c=this[s];jt(l,Gt(c,e))}return l.x1=Ft(l.x1),l.y1=Ft(l.y1),l.x2=Ft(l.x2),l.y2=Ft(l.y2),l.w=Ft(l.x2-l.x1),l.h=Ft(l.y2-l.y1),l},Lt.dirtyBoundingBoxCache=function(){for(var n=0;n<this.length;n++){var l=this[n]._private;l.bbCache=null,l.bbCacheShift.x=l.bbCacheShift.y=0,l.bbCachePosKey=null}return this.emitAndNotify("bounds"),this},Lt.shiftCachedBoundingBox=function(n){for(var l=0;l<this.length;l++){var e=this[l]._private;null!=e.bbCache&&(e.bbCacheShift.x+=n.x,e.bbCacheShift.y+=n.y)}return this.emitAndNotify("bounds"),this},Lt.boundingBoxAt=function(n){var l=this.nodes(),e=this.cy(),t=e.hasCompoundNodes();if(t&&(l=l.filter(function(n){return!n.isParent()})),_(n)){var u=n;n=function(){return u}}e.startBatch(),l.forEach(function(l,e){return l._private.bbAtOldPos=n(l,e)}).silentPositions(n),t&&this.updateCompoundBounds(!0);var r=this.boundingBox({useCache:!1});return l.silentPositions(function(n){return n._private.bbAtOldPos}),e.endBatch(),r},Mt.boundingbox=Mt.bb=Mt.boundingBox,Mt.renderedBoundingbox=Mt.renderedBoundingBox;var Kt,$t,Zt=Lt;Kt=$t={};var Qt=function(n){n.uppercaseName=R(n.name),n.autoName="auto"+n.uppercaseName,n.labelName="label"+n.uppercaseName,n.outerName="outer"+n.uppercaseName,n.uppercaseOuterName=R(n.outerName),Kt[n.name]=function(){var l=this[0],e=l._private,t=e.cy._private.styleEnabled;if(l){if(!t)return 1;if(l.isParent())return l.updateCompoundBounds(),e[n.autoName]||0;var u=l.pstyle(n.name);switch(u.strValue){case"label":return l.recalculateRenderedStyle(),e.rstyle[n.labelName]||0;default:return u.pfValue}}},Kt["outer"+n.uppercaseName]=function(){var l=this[0],e=l._private.cy._private.styleEnabled;if(l)return e?l[n.name]()+l.pstyle("border-width").pfValue+2*l.padding():1},Kt["rendered"+n.uppercaseName]=function(){var l=this[0];if(l)return l[n.name]()*this.cy().zoom()},Kt["rendered"+n.uppercaseOuterName]=function(){var l=this[0];if(l)return l[n.outerName]()*this.cy().zoom()}};Qt({name:"width"}),Qt({name:"height"}),$t.padding=function(){var n=this[0],l=n._private;return n.isParent()?(n.updateCompoundBounds(),void 0!==l.autoPadding?l.autoPadding:n.pstyle("padding").pfValue):n.pstyle("padding").pfValue};var Jt=$t,nu={controlPoints:{get:function(n){return n.renderer().getControlPoints(n)},mult:!0},segmentPoints:{get:function(n){return n.renderer().getSegmentPoints(n)},mult:!0},sourceEndpoint:{get:function(n){return n.renderer().getSourceEndpoint(n)}},targetEndpoint:{get:function(n){return n.renderer().getTargetEndpoint(n)}},midpoint:{get:function(n){return n.renderer().getEdgeMidpoint(n)}}},lu=Object.keys(nu).reduce(function(n,l){var e=nu[l],t=function(n){return"rendered"+n[0].toUpperCase()+n.substr(1)}(l);return n[l]=function(){return function(n,l){if(n.isEdge())return l(n)}(this,e.get)},e.mult?n[t]=function(){return function(n,l){if(n.isEdge()){var e=n.cy(),t=e.pan(),u=e.zoom();return l(n).map(function(n){return jn(n,u,t)})}}(this,e.get)}:n[t]=function(){return function(n,l){if(n.isEdge()){var e=n.cy();return jn(l(n),e.zoom(),e.pan())}}(this,e.get)},n},{}),eu=j({},Rt,Zt,Jt,lu),tu=function(n,l){this.recycle(n,l)};function uu(){return!1}function ru(){return!0}tu.prototype={instanceString:function(){return"event"},recycle:function(n,l){if(this.isImmediatePropagationStopped=this.isPropagationStopped=this.isDefaultPrevented=uu,null!=n&&n.preventDefault?(this.type=n.type,this.isDefaultPrevented=n.defaultPrevented?ru:uu):null!=n&&n.type?l=n:this.type=n,null!=l&&(this.originalEvent=l.originalEvent,this.type=null!=l.type?l.type:this.type,this.cy=l.cy,this.target=l.target,this.position=l.position,this.renderedPosition=l.renderedPosition,this.namespace=l.namespace,this.layout=l.layout),null!=this.cy&&null!=this.position&&null==this.renderedPosition){var e=this.position,t=this.cy.zoom(),u=this.cy.pan();this.renderedPosition={x:e.x*t+u.x,y:e.y*t+u.y}}this.timeStamp=n&&n.timeStamp||Date.now()},preventDefault:function(){this.isDefaultPrevented=ru;var n=this.originalEvent;n&&n.preventDefault&&n.preventDefault()},stopPropagation:function(){this.isPropagationStopped=ru;var n=this.originalEvent;n&&n.stopPropagation&&n.stopPropagation()},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=ru,this.stopPropagation()},isDefaultPrevented:uu,isPropagationStopped:uu,isImmediatePropagationStopped:uu};var iu=/^([^.]+)(\.(?:[^.]+))?$/,ou={qualifierCompare:function(n,l){return n===l},eventMatches:function(){return!0},addEventFields:function(){},callbackContext:function(n){return n},beforeEmit:function(){},afterEmit:function(){},bubble:function(){return!1},parent:function(){return null},context:null},au=Object.keys(ou);function su(n,l){for(var e=0;e<au.length;e++){var t=au[e];this[t]=n[t]||ou[t]}this.context=l||this.context,this.listeners=[],this.emitting=0}var cu=su.prototype,hu=function(n,l,e,t,u,r,i){b(t)&&(u=t,t=null),i&&(r=null==r?i:j({},r,i));for(var o=w(e)?e:e.split(/\s+/),a=0;a<o.length;a++){var s=o[a];if(!N(s)){var c=s.match(iu);if(c)if(!1===l(n,s,c[1],c[2]?c[2]:null,t,u,r))break}}},du=function(n,l){return n.addEventFields(n.context,l),new tu(l.type,l)},fu=function(n,l,e){if("event"!==y(e))if(_(e))l(n,du(n,e));else for(var t=w(e)?e:e.split(/\s+/),u=0;u<t.length;u++){var r=t[u];if(!N(r)){var i=r.match(iu);if(i){var o=i[1],a=i[2]?i[2]:null;l(n,du(n,{type:o,namespace:a,target:n.context}))}}}else l(n,e)};cu.on=cu.addListener=function(n,l,e,t,u){return hu(this,function(n,l,e,t,u,r,i){b(r)&&n.listeners.push({event:l,callback:r,type:e,namespace:t,qualifier:u,conf:i})},n,l,e,t,u),this},cu.one=function(n,l,e,t){return this.on(n,l,e,t,{one:!0})},cu.removeListener=cu.off=function(n,l,e,t){var u=this;0!==this.emitting&&(this.listeners=this.listeners.slice());for(var r=this.listeners,i=function(i){var o=r[i];hu(u,function(n,l,e,t,u,a){if(o.type===e&&(!t||o.namespace===t)&&(!u||n.qualifierCompare(o.qualifier,u))&&(!a||o.callback===a))return r.splice(i,1),!1},n,l,e,t)},o=r.length-1;o>=0;o--)i(o);return this},cu.emit=cu.trigger=function(n,l,e){var t=this.listeners,u=t.length;return this.emitting++,w(l)||(l=[l]),fu(this,function(n,r){null!=e&&(t=[{event:r.event,type:r.type,namespace:r.namespace,callback:e}],u=t.length);for(var i=function(e){var u=t[e];if(u.type===r.type&&(!u.namespace||u.namespace===r.namespace||".*"===u.namespace)&&n.eventMatches(n.context,u,r)){var i=[r];null!=l&&function(n,l){for(var e=0;e<l.length;e++){var t=l[e];n.push(t)}}(i,l),n.beforeEmit(n.context,u,r),u.conf&&u.conf.one&&(n.listeners=n.listeners.filter(function(n){return n!==u}));var o=n.callbackContext(n.context,u,r),a=u.callback.apply(o,i);n.afterEmit(n.context,u,r),!1===a&&(r.stopPropagation(),r.preventDefault())}},o=0;o<u;o++)i(o);n.bubble(n.context)&&!r.isPropagationStopped()&&n.parent(n.context).emit(r,l)},n),this.emitting--,this};var pu={qualifierCompare:function(n,l){return null==n||null==l?null==n&&null==l:n.sameText(l)},eventMatches:function(n,l,e){var t=l.qualifier;return null==t||n!==e.target&&k(e.target)&&t.matches(e.target)},addEventFields:function(n,l){l.cy=n.cy(),l.target=n},callbackContext:function(n,l,e){return null!=l.qualifier?e.target:n},beforeEmit:function(n,l){l.conf&&l.conf.once&&l.conf.onceCollection.removeListener(l.event,l.qualifier,l.callback)},bubble:function(){return!0},parent:function(n){return n.isChild()?n.parent():n.cy()}},gu=function(n){return m(n)?new gt(n):n},vu={createEmitter:function(){for(var n=0;n<this.length;n++){var l=this[n],e=l._private;e.emitter||(e.emitter=new su(pu,l))}return this},emitter:function(){return this._private.emitter},on:function(n,l,e){for(var t=gu(l),u=0;u<this.length;u++){this[u].emitter().on(n,t,e)}return this},removeListener:function(n,l,e){for(var t=gu(l),u=0;u<this.length;u++){this[u].emitter().removeListener(n,t,e)}return this},one:function(n,l,e){for(var t=gu(l),u=0;u<this.length;u++){this[u].emitter().one(n,t,e)}return this},once:function(n,l,e){for(var t=gu(l),u=0;u<this.length;u++){this[u].emitter().on(n,t,e,{once:!0,onceCollection:this})}},emit:function(n,l){for(var e=0;e<this.length;e++){this[e].emitter().emit(n,l)}return this},emitAndNotify:function(n,l){if(0!==this.length)return this.cy().notify(n,this),this.emit(n,l),this}};Ae.eventAliasesOn(vu);var yu={nodes:function(n){return this.filter(function(n){return n.isNode()}).filter(n)},edges:function(n){return this.filter(function(n){return n.isEdge()}).filter(n)},byGroup:function(){for(var n=this.spawn(),l=this.spawn(),e=0;e<this.length;e++){var t=this[e];t.isNode()?n.merge(t):l.merge(t)}return{nodes:n,edges:l}},filter:function(n,l){if(void 0===n)return this;if(m(n)||T(n))return new gt(n).filter(this);if(b(n)){for(var e=this.spawn(),t=0;t<this.length;t++){var u=this[t];(l?n.apply(l,[u,t,this]):n(u,t,this))&&e.merge(u)}return e}return this.spawn()},not:function(n){if(n){m(n)&&(n=this.filter(n));for(var l=[],e=n._private.map,t=0;t<this.length;t++){var u=this[t];e.has(u.id())||l.push(u)}return this.spawn(l)}return this},absoluteComplement:function(){return this.cy().mutableElements().not(this)},intersect:function(n){if(m(n)){var l=n;return this.filter(l)}for(var e=[],t=n,u=this.length<n.length,r=u?t._private.map:this._private.map,i=u?this:t,o=0;o<i.length;o++){var a=i[o]._private.data.id,s=r.get(a);s&&e.push(s.ele)}return this.spawn(e)},xor:function(n){var l=this._private.cy;m(n)&&(n=l.$(n));var e=[],t=n,u=function(n,l){for(var t=0;t<n.length;t++){var u=n[t],r=u._private.data.id;l.hasElementWithId(r)||e.push(u)}};return u(this,t),u(t,this),this.spawn(e)},diff:function(n){var l=this._private.cy;m(n)&&(n=l.$(n));var e=[],t=[],u=[],r=n,i=function(n,l,e){for(var t=0;t<n.length;t++){var r=n[t],i=r._private.data.id;l.hasElementWithId(i)?u.push(r):e.push(r)}};return i(this,r,e),i(r,this,t),{left:this.spawn(e,{unique:!0}),right:this.spawn(t,{unique:!0}),both:this.spawn(u,{unique:!0})}},add:function(n){var l=this._private.cy;if(!n)return this;if(m(n)){var e=n;n=l.mutableElements().filter(e)}for(var t=[],u=0;u<this.length;u++)t.push(this[u]);for(var r=this._private.map,i=0;i<n.length;i++){var o=!r.has(n[i].id());o&&t.push(n[i])}return this.spawn(t)},merge:function(n){var l=this._private,e=l.cy;if(!n)return this;if(n&&m(n)){var t=n;n=e.mutableElements().filter(t)}for(var u=l.map,r=0;r<n.length;r++){var i=n[r],o=i._private.data.id;if(!u.has(o)){var a=this.length++;this[a]=i,u.set(o,{ele:i,index:a})}else{var s=u.get(o).index;this[s]=i,u.set(o,{ele:i,index:s})}}return this},unmergeAt:function(n){var l=this[n].id(),e=this._private.map;this[n]=void 0,e.delete(l);var t=n===this.length-1;if(this.length>1&&!t){var u=this.length-1,r=this[u],i=r._private.data.id;this[u]=void 0,this[n]=r,e.set(i,{ele:r,index:n})}return this.length--,this},unmergeOne:function(n){n=n[0];var l=this._private,e=n._private.data.id,t=l.map.get(e);if(!t)return this;var u=t.index;return this.unmergeAt(u),this},unmerge:function(n){var l=this._private.cy;if(!n)return this;if(n&&m(n)){var e=n;n=l.mutableElements().filter(e)}for(var t=0;t<n.length;t++)this.unmergeOne(n[t]);return this},unmergeBy:function(n){for(var l=this.length-1;l>=0;l--){n(this[l])&&this.unmergeAt(l)}return this},map:function(n,l){for(var e=[],t=0;t<this.length;t++){var u=this[t],r=l?n.apply(l,[u,t,this]):n(u,t,this);e.push(r)}return e},reduce:function(n,l){for(var e=l,t=0;t<this.length;t++)e=n(e,this[t],t,this);return e},max:function(n,l){for(var e,t=-1/0,u=0;u<this.length;u++){var r=this[u],i=l?n.apply(l,[r,u,this]):n(r,u,this);i>t&&(t=i,e=r)}return{value:t,ele:e}},min:function(n,l){for(var e,t=1/0,u=0;u<this.length;u++){var r=this[u],i=l?n.apply(l,[r,u,this]):n(r,u,this);i<t&&(t=i,e=r)}return{value:t,ele:e}}},mu=yu;mu.u=mu["|"]=mu["+"]=mu.union=mu.or=mu.add,mu["\\"]=mu["!"]=mu["-"]=mu.difference=mu.relativeComplement=mu.subtract=mu.not,mu.n=mu["&"]=mu["."]=mu.and=mu.intersection=mu.intersect,mu["^"]=mu["(+)"]=mu["(-)"]=mu.symmetricDifference=mu.symdiff=mu.xor,mu.fnFilter=mu.filterFn=mu.stdFilter=mu.filter,mu.complement=mu.abscomp=mu.absoluteComplement;var bu=function(n,l){var e=n.cy().hasCompoundNodes();function t(n){var l=n.pstyle("z-compound-depth");return"auto"===l.value?e?n.zDepth():0:"bottom"===l.value?-1:"top"===l.value?tn:0}var u=t(n)-t(l);if(0!==u)return u;function r(n){return"auto"===n.pstyle("z-index-compare").value&&n.isNode()?1:0}var i=r(n)-r(l);if(0!==i)return i;var o=n.pstyle("z-index").value-l.pstyle("z-index").value;return 0!==o?o:n.poolIndex()-l.poolIndex()},wu={forEach:function(n,l){if(b(n))for(var e=this.length,t=0;t<e;t++){var u=this[t];if(!1===(l?n.apply(l,[u,t,this]):n(u,t,this)))break}return this},toArray:function(){for(var n=[],l=0;l<this.length;l++)n.push(this[l]);return n},slice:function(n,l){var e=[],t=this.length;null==l&&(l=t),null==n&&(n=0),n<0&&(n=t+n),l<0&&(l=t+l);for(var u=n;u>=0&&u<l&&u<t;u++)e.push(this[u]);return this.spawn(e)},size:function(){return this.length},eq:function(n){return this[n]||this.spawn()},first:function(){return this[0]||this.spawn()},last:function(){return this[this.length-1]||this.spawn()},empty:function(){return 0===this.length},nonempty:function(){return!this.empty()},sort:function(n){if(!b(n))return this;var l=this.toArray().sort(n);return this.spawn(l)},sortByZIndex:function(){return this.sort(bu)},zDepth:function(){var n=this[0];if(n){var l=n._private;if("nodes"===l.group){var e=l.data.parent?n.parents().size():0;return n.isParent()?e:tn-1}var t=l.source,u=l.target,r=t.zDepth(),i=u.zDepth();return Math.max(r,i,0)}}};wu.each=wu.forEach;var _u=gn({nodeDimensionsIncludeLabels:!1}),xu={layoutDimensions:function(n){if((n=_u(n)).nodeDimensionsIncludeLabels){var l=this.boundingBox();return{w:l.w,h:l.h}}return{w:this.outerWidth(),h:this.outerHeight()}},layoutPositions:function(n,l,e){var t=this.nodes(),u=this.cy(),r=l.eles,i=function(n){return n.id()},o=A(e,i);n.emit({type:"layoutstart",layout:n}),n.animations=[];var a=l.spacingFactor&&1!==l.spacingFactor,s=function(){if(!a)return null;for(var n=$n(),l=0;l<t.length;l++){var e=t[l],u=o(e,l);Zn(n,u.x,u.y)}return n}(),c=A(function(n,e){var t=o(n,e);a&&(t=function(n,l,e){var t=l.x1+l.w/2,u=l.y1+l.h/2;return{x:t+(e.x-t)*n,y:u+(e.y-u)*n}}(Math.abs(l.spacingFactor),s,t));return null!=l.transform&&(t=l.transform(n,t)),t},i);if(l.animate){for(var h=0;h<t.length;h++){var d=t[h],f=c(d,h);if(null==l.animateFilter||l.animateFilter(d,h)){var p=d.animation({position:f,duration:l.animationDuration,easing:l.animationEasing});n.animations.push(p)}else d.position(f)}if(l.fit){var g=u.animation({fit:{boundingBox:r.boundingBoxAt(c),padding:l.padding},duration:l.animationDuration,easing:l.animationEasing});n.animations.push(g)}else if(void 0!==l.zoom&&void 0!==l.pan){var v=u.animation({zoom:l.zoom,pan:l.pan,duration:l.animationDuration,easing:l.animationEasing});n.animations.push(v)}n.animations.forEach(function(n){return n.play()}),n.one("layoutready",l.ready),n.emit({type:"layoutready",layout:n}),Ne.all(n.animations.map(function(n){return n.promise()})).then(function(){n.one("layoutstop",l.stop),n.emit({type:"layoutstop",layout:n})})}else t.positions(c),l.fit&&u.fit(l.eles,l.padding),null!=l.zoom&&u.zoom(l.zoom),l.pan&&u.pan(l.pan),n.one("layoutready",l.ready),n.emit({type:"layoutready",layout:n}),n.one("layoutstop",l.stop),n.emit({type:"layoutstop",layout:n});return this},layout:function(n){return this.cy().makeLayout(j({},n,{eles:this}))}};function Eu(n,l,e){var t,u=e._private,r=u.styleCache=u.styleCache||[];return null!=(t=r[n])?t:t=r[n]=l(e)}function Tu(n,l){return n=Q(n),function(e){return Eu(n,l,e)}}function ku(n,l){n=Q(n);var e=function(n){return l.call(n)};return function(){var l=this[0];if(l)return Eu(n,e,l)}}xu.createLayout=xu.makeLayout=xu.layout;var Cu={recalculateRenderedStyle:function(n){var l=this.cy(),e=l.renderer(),t=l.styleEnabled();return e&&t&&e.recalculateRenderedStyle(this,n),this},dirtyStyleCache:function(){var n,l=this.cy(),e=function(n){return n._private.styleCache=null};l.hasCompoundNodes()?((n=this.spawnSelf().merge(this.descendants()).merge(this.parents())).merge(n.connectedEdges()),n.forEach(e)):this.forEach(function(n){e(n),n.connectedEdges().forEach(e)});return this},updateStyle:function(n){var l=this._private.cy;if(!l.styleEnabled())return this;if(l.batching())return l._private.batchStyleEles.merge(this),this;var e=l.hasCompoundNodes(),t=l.style(),u=this;n=!(!n&&void 0!==n),e&&(u=this.spawnSelf().merge(this.descendants()).merge(this.parents()));var r=t.apply(u);return n?r.emitAndNotify("style"):r.emit("style"),this},parsedStyle:function(n){var l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],e=this[0],t=e.cy();if(t.styleEnabled()&&e){var u=e._private.style[n];return null!=u?u:l?t.style().getDefaultProperty(n):null}},numericStyle:function(n){var l=this[0];if(l.cy().styleEnabled()&&l){var e=l.pstyle(n);return void 0!==e.pfValue?e.pfValue:e.value}},numericStyleUnits:function(n){var l=this[0];if(l.cy().styleEnabled())return l?l.pstyle(n).units:void 0},renderedStyle:function(n){var l=this.cy();if(!l.styleEnabled())return this;var e=this[0];return e?l.style().getRenderedStyle(e,n):void 0},style:function(n,l){var e=this.cy();if(!e.styleEnabled())return this;var t=e.style();if(_(n)){var u=n;t.applyBypass(this,u,!1),this.emitAndNotify("style")}else if(m(n)){if(void 0===l){var r=this[0];return r?t.getStylePropertyValue(r,n):void 0}t.applyBypass(this,n,l,!1),this.emitAndNotify("style")}else if(void 0===n){var i=this[0];return i?t.getRawStyle(i):void 0}return this},removeStyle:function(n){var l=this.cy();if(!l.styleEnabled())return this;var e=l.style();if(void 0===n)for(var t=0;t<this.length;t++){var u=this[t];e.removeAllBypasses(u,!1)}else{n=n.split(/\s+/);for(var r=0;r<this.length;r++){var i=this[r];e.removeBypasses(i,n,!1)}}return this.emitAndNotify("style"),this},show:function(){return this.css("display","element"),this},hide:function(){return this.css("display","none"),this},effectiveOpacity:function(){var n=this.cy();if(!n.styleEnabled())return 1;var l=n.hasCompoundNodes(),e=this[0];if(e){var t=e._private,u=e.pstyle("opacity").value;if(!l)return u;var r=t.data.parent?e.parents():null;if(r)for(var i=0;i<r.length;i++){u*=r[i].pstyle("opacity").value}return u}},transparent:function(){if(!this.cy().styleEnabled())return!1;var n=this[0],l=n.cy().hasCompoundNodes();return n?l?0===n.effectiveOpacity():0===n.pstyle("opacity").value:void 0},backgrounding:function(){return!!this.cy().styleEnabled()&&!!this[0]._private.backgrounding}};function Su(n,l){var e=n._private.data.parent?n.parents():null;if(e)for(var t=0;t<e.length;t++){if(!l(e[t]))return!1}return!0}function Iu(n){var l=n.ok,e=n.edgeOkViaNode||n.ok,t=n.parentOk||n.ok;return function(){var n=this.cy();if(!n.styleEnabled())return!0;var u=this[0],r=n.hasCompoundNodes();if(u){var i=u._private;if(!l(u))return!1;if(u.isNode())return!r||Su(u,t);var o=i.source,a=i.target;return e(o)&&(!r||Su(o,e))&&(o===a||e(a)&&(!r||Su(a,e)))}}}var Nu=Tu("eleTakesUpSpace",function(n){return"element"===n.pstyle("display").value&&0!==n.width()&&(!n.isNode()||0!==n.height())});Cu.takesUpSpace=ku("takesUpSpace",Iu({ok:Nu}));var Du=Tu("eleInteractive",function(n){return"yes"===n.pstyle("events").value&&"visible"===n.pstyle("visibility").value&&Nu(n)}),Ou=Tu("parentInteractive",function(n){return"visible"===n.pstyle("visibility").value&&Nu(n)});Cu.interactive=ku("interactive",Iu({ok:Du,parentOk:Ou,edgeOkViaNode:Nu})),Cu.noninteractive=function(){var n=this[0];if(n)return!n.interactive()};var Au=Tu("eleVisible",function(n){return"visible"===n.pstyle("visibility").value&&0!==n.pstyle("opacity").pfValue&&Nu(n)}),Pu=Nu;Cu.visible=ku("visible",Iu({ok:Au,edgeOkViaNode:Pu})),Cu.hidden=function(){var n=this[0];if(n)return!n.visible()},Cu.bypass=Cu.css=Cu.style,Cu.renderedCss=Cu.renderedStyle,Cu.removeBypass=Cu.removeCss=Cu.removeStyle,Cu.pstyle=Cu.parsedStyle;var Mu={};function Lu(n){return function(){var l=arguments,e=[];if(2===l.length){var t=l[0],u=l[1];this.on(n.event,t,u)}else if(1===l.length&&b(l[0])){var r=l[0];this.on(n.event,r)}else if(0===l.length||1===l.length&&w(l[0])){for(var i=1===l.length?l[0]:null,o=0;o<this.length;o++){var a=this[o],s=!n.ableField||a._private[n.ableField],c=a._private[n.field]!=n.value;if(n.overrideAble){var h=n.overrideAble(a);if(void 0!==h&&(s=h,!h))return this}s&&(a._private[n.field]=n.value,c&&e.push(a))}var d=this.spawn(e);d.updateStyle(),d.emit(n.event),i&&d.emit(i)}return this}}function Ru(n){Mu[n.field]=function(){var l=this[0];if(l){if(n.overrideField){var e=n.overrideField(l);if(void 0!==e)return e}return l._private[n.field]}},Mu[n.on]=Lu({event:n.on,field:n.field,ableField:n.ableField,overrideAble:n.overrideAble,value:!0}),Mu[n.off]=Lu({event:n.off,field:n.field,ableField:n.ableField,overrideAble:n.overrideAble,value:!1})}Ru({field:"locked",overrideField:function(n){return!!n.cy().autolock()||void 0},on:"lock",off:"unlock"}),Ru({field:"grabbable",overrideField:function(n){return!n.cy().autoungrabify()&&void 0},on:"grabify",off:"ungrabify"}),Ru({field:"selected",ableField:"selectable",overrideAble:function(n){return!n.cy().autounselectify()&&void 0},on:"select",off:"unselect"}),Ru({field:"selectable",overrideField:function(n){return!n.cy().autounselectify()&&void 0},on:"selectify",off:"unselectify"}),Mu.deselect=Mu.unselect,Mu.grabbed=function(){var n=this[0];if(n)return n._private.grabbed},Ru({field:"active",on:"activate",off:"unactivate"}),Mu.inactive=function(){var n=this[0];if(n)return!n._private.active};var Fu={},Bu=function(n){return function(l){for(var e=[],t=0;t<this.length;t++){var u=this[t];if(u.isNode()){for(var r=!1,i=u.connectedEdges(),o=0;o<i.length;o++){var a=i[o],s=a.source(),c=a.target();if(n.noIncomingEdges&&c===u&&s!==u||n.noOutgoingEdges&&s===u&&c!==u){r=!0;break}}r||e.push(u)}}return this.spawn(e,{unique:!0}).filter(l)}},ju=function(n){return function(l){for(var e=[],t=0;t<this.length;t++){var u=this[t];if(u.isNode())for(var r=u.connectedEdges(),i=0;i<r.length;i++){var o=r[i],a=o.source(),s=o.target();n.outgoing&&a===u?(e.push(o),e.push(s)):n.incoming&&s===u&&(e.push(o),e.push(a))}}return this.spawn(e,{unique:!0}).filter(l)}},Uu=function(n){return function(l){for(var e=this,t=[],u={};;){var r=n.outgoing?e.outgoers():e.incomers();if(0===r.length)break;for(var i=!1,o=0;o<r.length;o++){var a=r[o],s=a.id();u[s]||(u[s]=!0,t.push(a),i=!0)}if(!i)break;e=r}return this.spawn(t,{unique:!0}).filter(l)}};function zu(n){return function(l){for(var e=[],t=0;t<this.length;t++){var u=this[t]._private[n.attr];u&&e.push(u)}return this.spawn(e,{unique:!0}).filter(l)}}function qu(n){return function(l){var e=[],t=this._private.cy,u=n||{};m(l)&&(l=t.$(l));for(var r=0;r<l.length;r++)for(var i=l[r]._private.edges,o=0;o<i.length;o++){var a=i[o],s=a._private.data,c=this.hasElementWithId(s.source)&&l.hasElementWithId(s.target),h=l.hasElementWithId(s.source)&&this.hasElementWithId(s.target);if(c||h){if(u.thisIsSrc||u.thisIsTgt){if(u.thisIsSrc&&!c)continue;if(u.thisIsTgt&&!h)continue}e.push(a)}}return this.spawn(e,{unique:!0})}}function Vu(n){return n=j({},{codirected:!1},n),function(l){for(var e=[],t=this.edges(),u=n,r=0;r<t.length;r++)for(var i=t[r]._private,o=i.source,a=o._private.data.id,s=i.data.target,c=o._private.edges,h=0;h<c.length;h++){var d=c[h],f=d._private.data,p=f.target,g=f.source,v=p===s&&g===a,y=a===p&&s===g;(u.codirected&&v||!u.codirected&&(v||y))&&e.push(d)}return this.spawn(e,{unique:!0}).filter(l)}}Fu.clearTraversalCache=function(){for(var n=0;n<this.length;n++)this[n]._private.traversalCache=null},j(Fu,{roots:Bu({noIncomingEdges:!0}),leaves:Bu({noOutgoingEdges:!0}),outgoers:wt(ju({outgoing:!0}),"outgoers"),successors:Uu({outgoing:!0}),incomers:wt(ju({incoming:!0}),"incomers"),predecessors:Uu({incoming:!0})}),j(Fu,{neighborhood:wt(function(n){for(var l=[],e=this.nodes(),t=0;t<e.length;t++)for(var u=e[t],r=u.connectedEdges(),i=0;i<r.length;i++){var o=r[i],a=o.source(),s=o.target(),c=u===a?s:a;c.length>0&&l.push(c[0]),l.push(o[0])}return this.spawn(l,{unique:!0}).filter(n)},"neighborhood"),closedNeighborhood:function(n){return this.neighborhood().add(this).filter(n)},openNeighborhood:function(n){return this.neighborhood(n)}}),Fu.neighbourhood=Fu.neighborhood,Fu.closedNeighbourhood=Fu.closedNeighborhood,Fu.openNeighbourhood=Fu.openNeighborhood,j(Fu,{source:wt(function(n){var l,e=this[0];return e&&(l=e._private.source||e.cy().collection()),l&&n?l.filter(n):l},"source"),target:wt(function(n){var l,e=this[0];return e&&(l=e._private.target||e.cy().collection()),l&&n?l.filter(n):l},"target"),sources:zu({attr:"source"}),targets:zu({attr:"target"})}),j(Fu,{edgesWith:wt(qu(),"edgesWith"),edgesTo:wt(qu({thisIsSrc:!0}),"edgesTo")}),j(Fu,{connectedEdges:wt(function(n){for(var l=[],e=0;e<this.length;e++){var t=this[e];if(t.isNode())for(var u=t._private.edges,r=0;r<u.length;r++){var i=u[r];l.push(i)}}return this.spawn(l,{unique:!0}).filter(n)},"connectedEdges"),connectedNodes:wt(function(n){for(var l=[],e=0;e<this.length;e++){var t=this[e];t.isEdge()&&(l.push(t.source()[0]),l.push(t.target()[0]))}return this.spawn(l,{unique:!0}).filter(n)},"connectedNodes"),parallelEdges:wt(Vu(),"parallelEdges"),codirectedEdges:wt(Vu({codirected:!0}),"codirectedEdges")}),j(Fu,{components:function(n){var l=this,e=l.cy(),t=e.collection(),u=null==n?l.nodes():n.nodes(),r=[];null!=n&&u.empty()&&(u=n.sources());var i=function(n,l){t.merge(n),u.unmerge(n),l.merge(n)};if(u.empty())return l.spawn();var o=function(){var n=e.collection();r.push(n);var t=u[0];i(t,n),l.bfs({directed:!1,roots:t,visit:function(l){return i(l,n)}}),n.forEach(function(l){l.connectedEdges().forEach(function(l){n.has(l.source())&&n.has(l.target())&&n.merge(l)})})};do{o()}while(u.length>0);return r},component:function(){var n=this[0];return n.cy().mutableElements().components(n)[0]}}),Fu.componentsOf=Fu.components;var Hu=function(n,l,e){for(var t=null!=e?e:dn();n.hasElementWithId(t);)t=dn();return t},Gu=function(n,l,e){if(void 0!==n&&S(n)){var t=new wn,u=!1;if(l){if(l.length>0&&_(l[0])&&!k(l[0])){u=!0;for(var r=[],i=new xn,o=0,a=l.length;o<a;o++){var s=l[o];null==s.data&&(s.data={});var c=s.data;if(null==c.id)c.id=Hu(n,s);else if(n.hasElementWithId(c.id)||i.has(c.id))continue;var h=new En(n,s,!1);r.push(h),i.add(c.id)}l=r}}else l=[];this.length=0;for(var d=0,f=l.length;d<f;d++){var p=l[d];if(null!=p){var g=p._private.data.id;(null==e||e.unique&&!t.has(g))&&(t.set(g,{index:this.length,ele:p}),this[this.length]=p,this.length++)}}this._private={cy:n,map:t},u&&this.restore()}else sn("A collection must have a reference to the core")},Yu=En.prototype=Gu.prototype;Yu.instanceString=function(){return"collection"},Yu.spawn=function(n,l,e){return S(n)||(e=l,l=n,n=this.cy()),new Gu(n,l,e)},Yu.spawnSelf=function(){return this.spawn(this)},Yu.cy=function(){return this._private.cy},Yu.renderer=function(){return this._private.cy.renderer()},Yu.element=function(){return this[0]},Yu.collection=function(){return C(this)?this:new Gu(this._private.cy,[this])},Yu.unique=function(){return new Gu(this._private.cy,this,{unique:!0})},Yu.hasElementWithId=function(n){return this._private.map.has(n)},Yu.getElementById=function(n){var l=this._private.cy,e=this._private.map.get(n);return e?e.ele:new Gu(l)},Yu.$id=Yu.getElementById,Yu.poolIndex=function(){var n=this._private.cy._private.elements,l=this[0]._private.data.id;return n._private.map.get(l).index},Yu.indexOf=function(n){var l=n[0]._private.data.id;return this._private.map.get(l).index},Yu.indexOfId=function(n){return this._private.map.get(n).index},Yu.json=function(n){var l=this.element(),e=this.cy();if(null==l&&n)return this;if(null!=l){var t=l._private;if(_(n)){if(e.startBatch(),n.data){l.data(n.data);var u=t.data;if(l.isEdge()){var r=!1,i={},o=n.data.source,a=n.data.target;null!=o&&o!==u.source&&(i.source=o,r=!0),null!=a&&a!==u.target&&(i.target=a,r=!0),r&&(l=l.move(i))}else{var s=n.data.parent;null==s&&null==u.parent||s===u.parent||(void 0===s&&(s=null),l=l.move({parent:s}))}}n.position&&l.position(n.position);var c=function(e,u,r){var i=n[e];null!=i&&i!==t[e]&&(i?l[u]():l[r]())};return c("removed","remove","restore"),c("selected","select","unselect"),c("selectable","selectify","unselectify"),c("locked","lock","unlock"),c("grabbable","grabify","ungrabify"),null!=n.classes&&l.classes(n.classes),e.endBatch(),this}if(void 0===n){var h={data:hn(t.data),position:hn(t.position),group:t.group,removed:t.removed,selected:t.selected,selectable:t.selectable,locked:t.locked,grabbable:t.grabbable,classes:null};h.classes="";var d=0;return t.classes.forEach(function(n){return h.classes+=0==d++?n:" "+n}),h}}},Yu.jsons=function(){for(var n=[],l=0;l<this.length;l++){var e=this[l].json();n.push(e)}return n},Yu.clone=function(){for(var n=this.cy(),l=[],e=0;e<this.length;e++){var t=this[e].json(),u=new En(n,t,!1);l.push(u)}return new Gu(n,l)},Yu.copy=Yu.clone,Yu.restore=function(){for(var n,l,e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],u=this.cy(),r=u._private,i=[],o=[],a=0,s=this.length;a<s;a++){var c=this[a];t&&!c.removed()||(c.isNode()?i.push(c):o.push(c))}n=i.concat(o);var h=function(){n.splice(l,1),l--};for(l=0;l<n.length;l++){var d=n[l],f=d._private,p=f.data;if(d.clearTraversalCache(),t||f.removed)if(void 0===p.id)p.id=Hu(u,d);else if(x(p.id))p.id=""+p.id;else{if(N(p.id)||!m(p.id)){sn("Can not create element with invalid string ID `"+p.id+"`"),h();continue}if(u.hasElementWithId(p.id)){sn("Can not create second element with ID `"+p.id+"`"),h();continue}}else;var g=p.id;if(d.isNode()){var v=f.position;null==v.x&&(v.x=0),null==v.y&&(v.y=0)}if(d.isEdge()){for(var y=d,b=["source","target"],w=b.length,_=!1,E=0;E<w;E++){var T=b[E],k=p[T];x(k)&&(k=p[T]=""+p[T]),null==k||""===k?(sn("Can not create edge `"+g+"` with unspecified "+T),_=!0):u.hasElementWithId(k)||(sn("Can not create edge `"+g+"` with nonexistant "+T+" `"+k+"`"),_=!0)}if(_){h();continue}var C=u.getElementById(p.source),S=u.getElementById(p.target);C._private.edges.push(y),S._private.edges.push(y),y._private.source=C,y._private.target=S}f.map=new wn,f.map.set(g,{ele:d,index:0}),f.removed=!1,t&&u.addToPool(d)}for(var I=0;I<i.length;I++){var D=i[I],O=D._private.data;x(O.parent)&&(O.parent=""+O.parent);var A=O.parent;if(null!=A){var P=u.getElementById(A);if(P.empty())O.parent=void 0;else{for(var M=!1,L=P;!L.empty();){if(D.same(L)){M=!0,O.parent=void 0;break}L=L.parent()}M||(P[0]._private.children.push(D),D._private.parent=P[0],r.hasCompoundNodes=!0)}}}if(n.length>0){for(var R=new Gu(u,n),F=0;F<R.length;F++){var B=R[F];B.isNode()||(B.parallelEdges().clearTraversalCache(),B.source().clearTraversalCache(),B.target().clearTraversalCache())}(r.hasCompoundNodes?u.collection().merge(R).merge(R.connectedNodes()).merge(R.parent()):R).dirtyCompoundBoundsCache().dirtyBoundingBoxCache().updateStyle(e),e?R.emitAndNotify("add"):t&&R.emit("add")}return this},Yu.removed=function(){var n=this[0];return n&&n._private.removed},Yu.inside=function(){var n=this[0];return n&&!n._private.removed},Yu.remove=function(){var n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],e=[],t=[],u={},r=this._private.cy;function i(n){var e=u[n.id()];l&&n.removed()||e||(u[n.id()]=!0,n.isNode()?(t.push(n),function(n){for(var l=n._private.edges,e=0;e<l.length;e++)i(l[e])}(n),function(n){for(var l=n._private.children,e=0;e<l.length;e++)i(l[e])}(n)):t.unshift(n))}for(var o=0,a=this.length;o<a;o++){i(this[o])}function s(n,l){var e=n._private.edges;vn(e,l),n.clearTraversalCache()}var c=[];function h(n,l){l=l[0];var e=(n=n[0])._private.children,t=n.id();vn(e,l),l._private.parent=null,c.ids[t]||(c.ids[t]=!0,c.push(n))}c.ids={},this.dirtyCompoundBoundsCache(),l&&r.removeFromPool(t);for(var d=0;d<t.length;d++){var f=t[d];if(l&&(f._private.removed=!0),e.push(f),f.isEdge()){var p=f.source()[0],g=f.target()[0];s(p,f),s(g,f),f.parallelEdges().clearTraversalCache()}else{var v=f.parent();0!==v.length&&h(v,f)}}var y=r._private.elements;r._private.hasCompoundNodes=!1;for(var m=0;m<y.length;m++){if(y[m].isParent()){r._private.hasCompoundNodes=!0;break}}var b=new Gu(this.cy(),e);b.size()>0&&(n?b.emitAndNotify("remove"):l&&b.emit("remove"));for(var w=0;w<c.length;w++){var _=c[w];l&&_.removed()||_.updateStyle()}return b},Yu.move=function(n){var l=this._private.cy,e=this;if(void 0!==n.source||void 0!==n.target){var t=n.source,u=n.target,r=null!=t&&l.hasElementWithId(t),i=null!=u&&l.hasElementWithId(u);(r||i)&&(l.batch(function(){e.remove(!1,!1);for(var n=0;n<e.length;n++){var l=e[n],o=l._private.data;l.isEdge()&&(r&&(o.source=t),i&&(o.target=u))}e.restore(!1,!1)}),e.emitAndNotify("move"))}else if(void 0!==n.parent){var o=n.parent;if(null===o||l.hasElementWithId(o)){var a=null===o?void 0:o;l.batch(function(){for(var n=e.remove(!1,!1),l=0;l<e.length;l++){var t=e[l],u=t._private.data;t.isNode()&&(u.parent=a)}n.restore(!1,!1)}),e.emitAndNotify("move")}}return this},[xe,Pe,Me,yt,_t,It,Nt,eu,vu,yu,{isNode:function(){return"nodes"===this.group()},isEdge:function(){return"edges"===this.group()},isLoop:function(){return this.isEdge()&&this.source()[0]===this.target()[0]},isSimple:function(){return this.isEdge()&&this.source()[0]!==this.target()[0]},group:function(){var n=this[0];if(n)return n._private.group}},wu,xu,Cu,Mu,Fu].forEach(function(n){j(Yu,n)});var Wu={add:function(n){var l,e=this;if(T(n)){var t=n;if(t._private.cy===e)l=t.restore();else{for(var u=[],r=0;r<t.length;r++){var i=t[r];u.push(i.json())}l=new Gu(e,u)}}else if(w(n)){l=new Gu(e,n)}else if(_(n)&&(w(n.nodes)||w(n.edges))){for(var o=n,a=[],s=["nodes","edges"],c=0,h=s.length;c<h;c++){var d=s[c],f=o[d];if(w(f))for(var p=0,g=f.length;p<g;p++){var v=j({group:d},f[p]);a.push(v)}}l=new Gu(e,a)}else{l=new En(e,n).collection()}return l},remove:function(n){if(T(n));else if(m(n)){var l=n;n=this.$(l)}return n.remove()}};
/*! Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */function Xu(n,l,e,t){var u=4,r=.001,i=1e-7,o=10,a=11,s=1/(a-1),c="undefined"!=typeof Float32Array;if(4!==arguments.length)return!1;for(var h=0;h<4;++h)if("number"!=typeof arguments[h]||isNaN(arguments[h])||!isFinite(arguments[h]))return!1;n=Math.min(n,1),e=Math.min(e,1),n=Math.max(n,0),e=Math.max(e,0);var d=c?new Float32Array(a):new Array(a);function f(n,l){return 1-3*l+3*n}function p(n,l){return 3*l-6*n}function g(n){return 3*n}function v(n,l,e){return((f(l,e)*n+p(l,e))*n+g(l))*n}function y(n,l,e){return 3*f(l,e)*n*n+2*p(l,e)*n+g(l)}function m(l){for(var t=0,c=1,h=a-1;c!==h&&d[c]<=l;++c)t+=s;var f=t+(l-d[--c])/(d[c+1]-d[c])*s,p=y(f,n,e);return p>=r?function(l,t){for(var r=0;r<u;++r){var i=y(t,n,e);if(0===i)return t;t-=(v(t,n,e)-l)/i}return t}(l,f):0===p?f:function(l,t,u){var r,a,s=0;do{(r=v(a=t+(u-t)/2,n,e)-l)>0?u=a:t=a}while(Math.abs(r)>i&&++s<o);return a}(l,t,t+s)}var b=!1;function w(){b=!0,n===l&&e===t||function(){for(var l=0;l<a;++l)d[l]=v(l*s,n,e)}()}var _=function(u){return b||w(),n===l&&e===t?u:0===u?0:1===u?1:v(m(u),l,t)};_.getControlPoints=function(){return[{x:n,y:l},{x:e,y:t}]};var x="generateBezier("+[n,l,e,t]+")";return _.toString=function(){return x},_}
/*! Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */var Ku=function(){function n(n){return-n.tension*n.x-n.friction*n.v}function l(l,e,t){var u={x:l.x+t.dx*e,v:l.v+t.dv*e,tension:l.tension,friction:l.friction};return{dx:u.v,dv:n(u)}}function e(e,t){var u={dx:e.v,dv:n(e)},r=l(e,.5*t,u),i=l(e,.5*t,r),o=l(e,t,i),a=1/6*(u.dx+2*(r.dx+i.dx)+o.dx),s=1/6*(u.dv+2*(r.dv+i.dv)+o.dv);return e.x=e.x+a*t,e.v=e.v+s*t,e}return function n(l,t,u){var r,i,o,a={x:-1,v:0,tension:null,friction:null},s=[0],c=0;for(l=parseFloat(l)||500,t=parseFloat(t)||20,u=u||null,a.tension=l,a.friction=t,i=(r=null!==u)?(c=n(l,t))/u*.016:.016;o=e(o||a,i),s.push(1+o.x),c+=16,Math.abs(o.x)>1e-4&&Math.abs(o.v)>1e-4;);return r?function(n){return s[n*(s.length-1)|0]}:c}}(),$u=function(n,l,e,t){var u=Xu(n,l,e,t);return function(n,l,e){return n+(l-n)*u(e)}},Zu={linear:function(n,l,e){return n+(l-n)*e},ease:$u(.25,.1,.25,1),"ease-in":$u(.42,0,1,1),"ease-out":$u(0,0,.58,1),"ease-in-out":$u(.42,0,.58,1),"ease-in-sine":$u(.47,0,.745,.715),"ease-out-sine":$u(.39,.575,.565,1),"ease-in-out-sine":$u(.445,.05,.55,.95),"ease-in-quad":$u(.55,.085,.68,.53),"ease-out-quad":$u(.25,.46,.45,.94),"ease-in-out-quad":$u(.455,.03,.515,.955),"ease-in-cubic":$u(.55,.055,.675,.19),"ease-out-cubic":$u(.215,.61,.355,1),"ease-in-out-cubic":$u(.645,.045,.355,1),"ease-in-quart":$u(.895,.03,.685,.22),"ease-out-quart":$u(.165,.84,.44,1),"ease-in-out-quart":$u(.77,0,.175,1),"ease-in-quint":$u(.755,.05,.855,.06),"ease-out-quint":$u(.23,1,.32,1),"ease-in-out-quint":$u(.86,0,.07,1),"ease-in-expo":$u(.95,.05,.795,.035),"ease-out-expo":$u(.19,1,.22,1),"ease-in-out-expo":$u(1,0,0,1),"ease-in-circ":$u(.6,.04,.98,.335),"ease-out-circ":$u(.075,.82,.165,1),"ease-in-out-circ":$u(.785,.135,.15,.86),spring:function(n,l,e){if(0===e)return Zu.linear;var t=Ku(n,l,e);return function(n,l,e){return n+(l-n)*t(e)}},"cubic-bezier":$u};function Qu(n,l,e,t,u){if(1===t)return e;var r=u(l,e,t);return null==n?r:((n.roundValue||n.color)&&(r=Math.round(r)),void 0!==n.min&&(r=Math.max(r,n.min)),void 0!==n.max&&(r=Math.min(r,n.max)),r)}function Ju(n,l){return null!=n.pfValue||null!=n.value?null==n.pfValue||null!=l&&"%"===l.type.units?n.value:n.pfValue:n}function nr(n,l,e,t,u){var r=null!=u?u.type:null;e<0?e=0:e>1&&(e=1);var i=Ju(n,u),o=Ju(l,u);if(x(i)&&x(o))return Qu(r,i,o,e,t);if(w(i)&&w(o)){for(var a=[],s=0;s<o.length;s++){var c=i[s],h=o[s];if(null!=c&&null!=h){var d=Qu(r,c,h,e,t);a.push(d)}else a.push(h)}return a}}function lr(n,l,e,t){var u=!t,r=n._private,i=l._private,o=i.easing,a=i.startTime,s=(t?n:n.cy()).style();if(!i.easingImpl)if(null==o)i.easingImpl=Zu.linear;else{var c,h,d;if(m(o))c=s.parse("transition-timing-function",o).value;else c=o;m(c)?(h=c,d=[]):(h=c[1],d=c.slice(2).map(function(n){return+n})),d.length>0?("spring"===h&&d.push(i.duration),i.easingImpl=Zu[h].apply(null,d)):i.easingImpl=Zu[h]}var f,p=i.easingImpl;if(f=0===i.duration?1:(e-a)/i.duration,i.applying&&(f=i.progress),f<0?f=0:f>1&&(f=1),null==i.delay){var g=i.startPosition,v=i.position;if(v&&u&&!n.locked()){var y={};er(g.x,v.x)&&(y.x=nr(g.x,v.x,f,p)),er(g.y,v.y)&&(y.y=nr(g.y,v.y,f,p)),n.position(y)}var b=i.startPan,w=i.pan,_=r.pan,x=null!=w&&t;x&&(er(b.x,w.x)&&(_.x=nr(b.x,w.x,f,p)),er(b.y,w.y)&&(_.y=nr(b.y,w.y,f,p)),n.emit("pan"));var E=i.startZoom,T=i.zoom,k=null!=T&&t;k&&(er(E,T)&&(r.zoom=nr(E,T,f,p)),n.emit("zoom")),(x||k)&&n.emit("viewport");var C=i.style;if(C&&C.length>0&&u){for(var S=0;S<C.length;S++){var I=C[S],N=I.name,D=I,O=i.startStyle[N],A=nr(O,D,f,p,s.properties[O.name]);s.overrideBypass(n,N,A)}n.emit("style")}}return i.progress=f,f}function er(n,l){return null!=n&&null!=l&&(!(!x(n)||!x(l))||!(!n||!l))}function tr(n,l,e,t){var u=l._private;u.started=!0,u.startTime=e-u.progress*u.duration}function ur(n,l){var e=l._private.aniEles,t=[];function u(l,e){var u=l._private,r=u.animation.current,i=u.animation.queue,o=!1;if(!e&&"none"===l.pstyle("display").value){r=r.splice(0,r.length).concat(i.splice(0,i.length));for(var a=0;a<r.length;a++)r[a].stop()}if(0===r.length){var s=i.shift();s&&r.push(s)}for(var c=function(n){for(var l=n.length-1;l>=0;l--){(0,n[l])()}n.splice(0,n.length)},h=r.length-1;h>=0;h--){var d=r[h],f=d._private;f.stopped?(r.splice(h,1),f.hooked=!1,f.playing=!1,f.started=!1,c(f.frames)):(f.playing||f.applying)&&(f.playing&&f.applying&&(f.applying=!1),f.started||tr(0,d,n),lr(l,d,n,e),f.applying&&(f.applying=!1),c(f.frames),null!=f.step&&f.step(n),d.completed()&&(r.splice(h,1),f.hooked=!1,f.playing=!1,f.started=!1,c(f.completes)),o=!0)}return e||0!==r.length||0!==i.length||t.push(l),o}for(var r=!1,i=0;i<e.length;i++){var o=u(e[i]);r=r||o}var a=u(l,!0);(r||a)&&(e.length>0?l.notify("draw",e):l.notify("draw")),e.unmerge(t),l.emit("step")}var rr={animate:Ae.animate(),animation:Ae.animation(),animated:Ae.animated(),clearQueue:Ae.clearQueue(),delay:Ae.delay(),delayAnimation:Ae.delayAnimation(),stop:Ae.stop(),addToAnimationPool:function(n){this.styleEnabled()&&this._private.aniEles.merge(n)},stopAnimationLoop:function(){this._private.animationsRunning=!1},startAnimationLoop:function(){var n=this;if(n._private.animationsRunning=!0,n.styleEnabled()){var l=n.renderer();l&&l.beforeRender?l.beforeRender(function(l,e){ur(e,n)},l.beforeRenderPriorities.animations):function l(){n._private.animationsRunning&&W(function(e){ur(e,n),l()})}()}}},ir={qualifierCompare:function(n,l){return null==n||null==l?null==n&&null==l:n.sameText(l)},eventMatches:function(n,l,e){var t=l.qualifier;return null==t||n!==e.target&&k(e.target)&&t.matches(e.target)},addEventFields:function(n,l){l.cy=n,l.target=n},callbackContext:function(n,l,e){return null!=l.qualifier?e.target:n}},or=function(n){return m(n)?new gt(n):n},ar={createEmitter:function(){var n=this._private;return n.emitter||(n.emitter=new su(ir,this)),this},emitter:function(){return this._private.emitter},on:function(n,l,e){return this.emitter().on(n,or(l),e),this},removeListener:function(n,l,e){return this.emitter().removeListener(n,or(l),e),this},one:function(n,l,e){return this.emitter().one(n,or(l),e),this},once:function(n,l,e){return this.emitter().one(n,or(l),e),this},emit:function(n,l){return this.emitter().emit(n,l),this},emitAndNotify:function(n,l){return this.emit(n),this.notify(n,l),this}};Ae.eventAliasesOn(ar);var sr={png:function(n){return n=n||{},this._private.renderer.png(n)},jpg:function(n){var l=this._private.renderer;return(n=n||{}).bg=n.bg||"#fff",l.jpg(n)}};sr.jpeg=sr.jpg;var cr={layout:function(n){if(null!=n)if(null!=n.name){var l=n.name,e=this.extension("layout",l);if(null!=e){var t;t=m(n.eles)?this.$(n.eles):null!=n.eles?n.eles:this.$();var u=new e(j({},n,{cy:this,eles:t}));return u}sn("No such layout `"+l+"` found.  Did you forget to import it and `cytoscape.use()` it?")}else sn("A `name` must be specified to make a layout");else sn("Layout options must be specified to make a layout")}};cr.createLayout=cr.makeLayout=cr.layout;var hr={notify:function(n,l){var e=this._private;if(this.batching()){e.batchNotifications=e.batchNotifications||{};var t=e.batchNotifications[n]=e.batchNotifications[n]||this.collection();null!=l&&t.merge(l)}else if(e.notificationsEnabled){var u=this.renderer();!this.isDestroyed()&&u&&u.notify(n,l)}},notifications:function(n){var l=this._private;return void 0===n?l.notificationsEnabled:(l.notificationsEnabled=!!n,this)},noNotifications:function(n){this.notifications(!1),n(),this.notifications(!0)},batching:function(){return this._private.batchCount>0},startBatch:function(){var n=this._private;return null==n.batchCount&&(n.batchCount=0),0===n.batchCount&&(n.batchStyleEles=this.collection(),n.batchNotifications={}),n.batchCount++,this},endBatch:function(){var n=this._private;if(0===n.batchCount)return this;if(n.batchCount--,0===n.batchCount){n.batchStyleEles.updateStyle();var l=this.renderer();Object.keys(n.batchNotifications).forEach(function(e){var t=n.batchNotifications[e];t.empty()?l.notify(e):l.notify(e,t)})}return this},batch:function(n){return this.startBatch(),n(),this.endBatch(),this},batchData:function(n){var l=this;return this.batch(function(){for(var e=Object.keys(n),t=0;t<e.length;t++){var u=e[t],r=n[u];l.getElementById(u).data(r)}})}},dr=gn({hideEdgesOnViewport:!1,textureOnViewport:!1,motionBlur:!1,motionBlurOpacity:.05,pixelRatio:void 0,desktopTapThreshold:4,touchTapThreshold:8,wheelSensitivity:1}),fr={renderTo:function(n,l,e,t){return this._private.renderer.renderTo(n,l,e,t),this},renderer:function(){return this._private.renderer},forceRender:function(){return this.notify("draw"),this},resize:function(){return this.invalidateSize(),this.emitAndNotify("resize"),this},initRenderer:function(n){var l=this.extension("renderer",n.name);if(null!=l){void 0!==n.wheelSensitivity&&cn("You have set a custom wheel sensitivity.  This will make your app zoom unnaturally when using mainstream mice.  You should change this value from the default only if you can guarantee that all your users will use the same hardware and OS configuration as your current machine.");var e=dr(n);e.cy=this,this._private.renderer=new l(e),this.notify("init")}else sn("Can not initialise: No such renderer `".concat(n.name,"` found. Did you forget to import it and `cytoscape.use()` it?"))},destroyRenderer:function(){this.notify("destroy");var n=this.container();if(n)for(n._cyreg=null;n.childNodes.length>0;)n.removeChild(n.childNodes[0]);this._private.renderer=null,this.mutableElements().forEach(function(n){var l=n._private;l.rscratch={},l.rstyle={},l.animation.current=[],l.animation.queue=[]})},onRender:function(n){return this.on("render",n)},offRender:function(n){return this.off("render",n)}};fr.invalidateDimensions=fr.resize;var pr={collection:function(n,l){return m(n)?this.$(n):T(n)?n.collection():w(n)?new Gu(this,n,l):new Gu(this)},nodes:function(n){var l=this.$(function(n){return n.isNode()});return n?l.filter(n):l},edges:function(n){var l=this.$(function(n){return n.isEdge()});return n?l.filter(n):l},$:function(n){var l=this._private.elements;return n?l.filter(n):l.spawnSelf()},mutableElements:function(){return this._private.elements}};pr.elements=pr.filter=pr.$;var gr={};gr.apply=function(n){var l=this._private,e=l.cy.collection();l.newStyle&&(l.contextStyles={},l.propDiffs={},this.cleanElements(n,!0));for(var t=0;t<n.length;t++){var u=n[t],r=this.getContextMeta(u);if(!r.empty){var i=this.getContextStyle(r),o=this.applyContextStyle(r,i,u);l.newStyle||this.updateTransitions(u,o.diffProps),this.updateStyleHints(u)&&e.merge(u)}}return l.newStyle=!1,e},gr.getPropertiesDiff=function(n,l){var e=this._private.propDiffs=this._private.propDiffs||{},t=n+"-"+l,u=e[t];if(u)return u;for(var r=[],i={},o=0;o<this.length;o++){var a=this[o],s="t"===n[o],c="t"===l[o],h=s!==c,d=a.mappedProperties.length>0;if(h||c&&d){var f=void 0;h&&d?f=a.properties:h?f=a.properties:d&&(f=a.mappedProperties);for(var p=0;p<f.length;p++){for(var g=f[p],v=g.name,y=!1,m=o+1;m<this.length;m++){var b=this[m];if("t"===l[m]&&(y=null!=b.properties[g.name]))break}i[v]||y||(i[v]=!0,r.push(v))}}}return e[t]=r,r},gr.getContextMeta=function(n){var l,e="",t=n._private.styleCxtKey||"";this._private.newStyle&&(t="");for(var u=0;u<this.length;u++){var r=this[u];e+=r.selector&&r.selector.matches(n)?"t":"f"}return l=this.getPropertiesDiff(t,e),n._private.styleCxtKey=e,{key:e,diffPropNames:l,empty:0===l.length}},gr.getContextStyle=function(n){var l=n.key,e=this._private.contextStyles=this._private.contextStyles||{};if(e[l])return e[l];for(var t={_private:{key:l}},u=0;u<this.length;u++){var r=this[u];if("t"===l[u])for(var i=0;i<r.properties.length;i++){var o=r.properties[i];t[o.name]=o}}return e[l]=t,t},gr.applyContextStyle=function(n,l,e){for(var t=n.diffPropNames,u={},r=this.types,i=0;i<t.length;i++){var o=t[i],a=l[o],s=e.pstyle(o);if(!a){if(!s)continue;a=s.bypass?{name:o,deleteBypassed:!0}:{name:o,delete:!0}}if(s!==a){if(a.mapped===r.fn&&null!=s.mapping&&s.mapping.value===a.value){var c=s.mapping;if((c.fnValue=a.value(e))===c.prevFnValue)continue}var h=u[o]={prev:s};this.applyParsedProperty(e,a),h.next=e.pstyle(o),h.next&&h.next.bypass&&(h.next=h.next.bypassed)}}return{diffProps:u}},gr.updateStyleHints=function(n){var l=n._private,e=this,t=e.propertyGroupNames,u=e.propertyGroupKeys,r=function(n,l,t){return e.getPropertiesHash(n,l,t)},i=l.styleKey;if(n.removed())return!1;var o="nodes"===l.group,a=n._private.style;t=Object.keys(a);for(var s=0;s<u.length;s++){var c=u[s];l.styleKeys[c]=0}for(var h=function(n,e){return l.styleKeys[e]=$(n,l.styleKeys[e])},d=function(n){return-128<n&&n<128&&Math.floor(n)!==n?-(1024*n|0):n},f=0;f<t.length;f++){var p=t[f],g=a[p];if(null!=g){var v=this.properties[p],y=v.type,m=v.groupKey;if(y.number){var b=null!=g.pfValue?g.pfValue:g.value;if(y.multiple)for(var w=0;w<b.length;w++)h(d(b[w]),m);else h(d(b),m)}else for(var _=g.strValue,x=0;x<_.length;x++)h(_.charCodeAt(x),m)}}for(var E=0,T=0;T<u.length;T++){var k=u[T],C=l.styleKeys[k];E=$(C,E)}l.styleKey=E;var S=l.labelDimsKey=l.styleKeys.labelDimensions;if(l.labelKey=r(n,["label"],S),l.labelStyleKey=$(l.styleKeys.commonLabel,l.labelKey),o||(l.sourceLabelKey=r(n,["source-label"],S),l.sourceLabelStyleKey=$(l.styleKeys.commonLabel,l.sourceLabelKey),l.targetLabelKey=r(n,["target-label"],S),l.targetLabelStyleKey=$(l.styleKeys.commonLabel,l.targetLabelKey)),o){var I=l.styleKeys,N=I.nodeBody,D=I.nodeBorder,O=I.backgroundImage,A=I.compound,P=I.pie;l.nodeKey=Z([D,O,A,P],N),l.hasPie=0!=P}return i!==l.styleKey},gr.clearStyleHints=function(n){var l=n._private;l.styleKeys={},l.styleKey=null,l.labelKey=null,l.labelStyleKey=null,l.sourceLabelKey=null,l.sourceLabelStyleKey=null,l.targetLabelKey=null,l.targetLabelStyleKey=null,l.nodeKey=null,l.hasPie=null},gr.applyParsedProperty=function(n,l){var e,t=this,u=l,r=n._private.style,i=t.types,o=t.properties[u.name].type,a=u.bypass,s=r[u.name],c=s&&s.bypass,h=n._private,d=function(n){return null==n?null:null!=n.pfValue?n.pfValue:n.value},f=function(){var l=d(s),e=d(u);t.checkTriggers(n,u.name,l,e)};if("curve-style"===l.name&&n.isEdge()&&("bezier"!==l.value&&n.isLoop()||"haystack"===l.value&&(n.source().isParent()||n.target().isParent()))&&(u=l=this.parse(l.name,"bezier",a)),u.delete)return r[u.name]=void 0,f(),!0;if(u.deleteBypassed)return s?!!s.bypass&&(s.bypassed=void 0,f(),!0):(f(),!0);if(u.deleteBypass)return s?!!s.bypass&&(r[u.name]=s.bypassed,f(),!0):(f(),!0);var p=function(){cn("Do not assign mappings to elements without corresponding data (i.e. ele `"+n.id()+"` has no mapping for property `"+u.name+"` with data field `"+u.field+"`); try a `["+u.field+"]` selector to limit scope to elements with `"+u.field+"` defined")};switch(u.mapped){case i.mapData:for(var g,v=u.field.split("."),y=h.data,m=0;m<v.length&&y;m++){y=y[v[m]]}if(null==y)return p(),!1;if(!x(y))return cn("Do not use continuous mappers without specifying numeric data (i.e. `"+u.field+": "+y+"` for `"+n.id()+"` is non-numeric)"),!1;var b=u.fieldMax-u.fieldMin;if((g=0===b?0:(y-u.fieldMin)/b)<0?g=0:g>1&&(g=1),o.color){var w=u.valueMin[0],_=u.valueMax[0],E=u.valueMin[1],T=u.valueMax[1],k=u.valueMin[2],C=u.valueMax[2],S=null==u.valueMin[3]?1:u.valueMin[3],I=null==u.valueMax[3]?1:u.valueMax[3],N=[Math.round(w+(_-w)*g),Math.round(E+(T-E)*g),Math.round(k+(C-k)*g),Math.round(S+(I-S)*g)];e={bypass:u.bypass,name:u.name,value:N,strValue:"rgb("+N[0]+", "+N[1]+", "+N[2]+")"}}else{if(!o.number)return!1;var D=u.valueMin+(u.valueMax-u.valueMin)*g;e=this.parse(u.name,D,u.bypass,"mapping")}if(!e)return p(),!1;e.mapping=u,u=e;break;case i.data:for(var O=u.field.split("."),A=h.data,P=0;P<O.length&&A;P++){A=A[O[P]]}if(null!=A&&(e=this.parse(u.name,A,u.bypass,"mapping")),!e)return p(),!1;e.mapping=u,u=e;break;case i.fn:var M=u.value,L=null!=u.fnValue?u.fnValue:M(n);if(u.prevFnValue=L,null==L)return cn("Custom function mappers may not return null (i.e. `"+u.name+"` for ele `"+n.id()+"` is null)"),!1;if(!(e=this.parse(u.name,L,u.bypass,"mapping")))return cn("Custom function mappers may not return invalid values for the property type (i.e. `"+u.name+"` for ele `"+n.id()+"` is invalid)"),!1;e.mapping=hn(u),u=e;break;case void 0:break;default:return!1}return a?(u.bypassed=c?s.bypassed:s,r[u.name]=u):c?s.bypassed=u:r[u.name]=u,f(),!0},gr.cleanElements=function(n,l){for(var e=0;e<n.length;e++){var t=n[e];if(this.clearStyleHints(t),t.dirtyCompoundBoundsCache(),t.dirtyBoundingBoxCache(),l)for(var u=t._private.style,r=Object.keys(u),i=0;i<r.length;i++){var o=r[i],a=u[o];null!=a&&(a.bypass?a.bypassed=null:u[o]=null)}else t._private.style={}}},gr.update=function(){this._private.cy.mutableElements().updateStyle()},gr.updateTransitions=function(n,l){var e=this,t=n._private,u=n.pstyle("transition-property").value,r=n.pstyle("transition-duration").pfValue,i=n.pstyle("transition-delay").pfValue;if(u.length>0&&r>0){for(var o={},a=!1,s=0;s<u.length;s++){var c=u[s],h=n.pstyle(c),d=l[c];if(d){var f=d.prev,p=null!=d.next?d.next:h,g=!1,v=void 0;f&&(x(f.pfValue)&&x(p.pfValue)?(g=p.pfValue-f.pfValue,v=f.pfValue+1e-6*g):x(f.value)&&x(p.value)?(g=p.value-f.value,v=f.value+1e-6*g):w(f.value)&&w(p.value)&&(g=f.value[0]!==p.value[0]||f.value[1]!==p.value[1]||f.value[2]!==p.value[2],v=f.strValue),g&&(o[c]=p.strValue,this.applyBypass(n,c,v),a=!0))}}if(!a)return;t.transitioning=!0,new Ne(function(l){i>0?n.delayAnimation(i).play().promise().then(l):l()}).then(function(){return n.animation({style:o,duration:r,easing:n.pstyle("transition-timing-function").value,queue:!1}).play().promise()}).then(function(){e.removeBypasses(n,u),n.emitAndNotify("style"),t.transitioning=!1})}else t.transitioning&&(this.removeBypasses(n,u),n.emitAndNotify("style"),t.transitioning=!1)},gr.checkTrigger=function(n,l,e,t,u,r){var i=u(this.properties[l]);null!=i&&i(e,t)&&r()},gr.checkZOrderTrigger=function(n,l,e,t){var u=this;this.checkTrigger(n,l,e,t,function(n){return n.triggersZOrder},function(){u._private.cy.notify("zorder",n)})},gr.checkBoundsTrigger=function(n,l,e,t){this.checkTrigger(n,l,e,t,function(n){return n.triggersBounds},function(){n.dirtyCompoundBoundsCache(),n.dirtyBoundingBoxCache()})},gr.checkTriggers=function(n,l,e,t){n.dirtyStyleCache(),this.checkZOrderTrigger(n,l,e,t),this.checkBoundsTrigger(n,l,e,t)};var vr={applyBypass:function(n,l,e,t){var u=[];if("*"===l||"**"===l){if(void 0!==e)for(var r=0;r<this.properties.length;r++){var i=this.properties[r].name,o=this.parse(i,e,!0);o&&u.push(o)}}else if(m(l)){var a=this.parse(l,e,!0);a&&u.push(a)}else{if(!_(l))return!1;var s=l;t=e;for(var c=Object.keys(s),h=0;h<c.length;h++){var d=c[h],f=s[d];if(void 0===f&&(f=s[M(d)]),void 0!==f){var p=this.parse(d,f,!0);p&&u.push(p)}}}if(0===u.length)return!1;for(var g=!1,v=0;v<n.length;v++){for(var y=n[v],b={},w=void 0,x=0;x<u.length;x++){var E=u[x];if(t){var T=y.pstyle(E.name);w=b[E.name]={prev:T}}g=this.applyParsedProperty(y,E)||g,t&&(w.next=y.pstyle(E.name))}g&&this.updateStyleHints(y),t&&this.updateTransitions(y,b,!0)}return g},overrideBypass:function(n,l,e){l=P(l);for(var t=0;t<n.length;t++){var u=n[t],r=u._private.style[l],i=this.properties[l].type,o=i.color,a=i.mutiple,s=r?null!=r.pfValue?r.pfValue:r.value:null;r&&r.bypass?(r.value=e,null!=r.pfValue&&(r.pfValue=e),r.strValue=o?"rgb("+e.join(",")+")":a?e.join(" "):""+e,this.updateStyleHints(u)):this.applyBypass(u,l,e),this.checkTriggers(u,l,s,e)}},removeAllBypasses:function(n,l){return this.removeBypasses(n,this.propertyNames,l)},removeBypasses:function(n,l,e){for(var t=0;t<n.length;t++){for(var u=n[t],r={},i=0;i<l.length;i++){var o=l[i],a=this.properties[o],s=u.pstyle(a.name);if(s&&s.bypass){var c=this.parse(o,"",!0),h=r[a.name]={prev:s};this.applyParsedProperty(u,c),h.next=u.pstyle(a.name)}}this.updateStyleHints(u),e&&this.updateTransitions(u,r,!0)}}},yr={getEmSizeInPixels:function(){var n=this.containerCss("font-size");return null!=n?parseFloat(n):1},containerCss:function(n){var l=this._private.cy.container();if(h&&l&&h.getComputedStyle)return h.getComputedStyle(l).getPropertyValue(n)}},mr={getRenderedStyle:function(n,l){return l?this.getStylePropertyValue(n,l,!0):this.getRawStyle(n,!0)},getRawStyle:function(n,l){if(n=n[0]){for(var e={},t=0;t<this.properties.length;t++){var u=this.properties[t],r=this.getStylePropertyValue(n,u.name,l);null!=r&&(e[u.name]=r,e[M(u.name)]=r)}return e}},getIndexedStyle:function(n,l,e,t){var u=n.pstyle(l)[e][t];return null!=u?u:n.cy().style().getDefaultProperty(l)[e][0]},getStylePropertyValue:function(n,l,e){if(n=n[0]){var t=this.properties[l];t.alias&&(t=t.pointsTo);var u=t.type,r=n.pstyle(t.name);if(r){var i=r.value,o=r.units,a=r.strValue;if(e&&u.number&&null!=i&&x(i)){var s=n.cy().zoom(),c=function(n){return n*s},h=function(n,l){return c(n)+l},d=w(i);return(d?o.every(function(n){return null!=n}):null!=o)?d?i.map(function(n,l){return h(n,o[l])}).join(" "):h(i,o):d?i.map(function(n){return m(n)?n:""+c(n)}).join(" "):""+c(i)}if(null!=a)return a}return null}},getAnimationStartStyle:function(n,l){for(var e={},t=0;t<l.length;t++){var u=l[t].name,r=n.pstyle(u);void 0!==r&&(r=_(r)?this.parse(u,r.strValue):this.parse(u,r)),r&&(e[u]=r)}return e},getPropsList:function(n){var l=[],e=n,t=this.properties;if(e)for(var u=Object.keys(e),r=0;r<u.length;r++){var i=u[r],o=e[i],a=t[i]||t[P(i)],s=this.parse(a.name,o);s&&l.push(s)}return l},getNonDefaultPropertiesHash:function(n,l,e){var t,u,r,i,o,a,s=e;for(o=0;o<l.length;o++)if(t=l[o],null!=(u=n.pstyle(t,!1)))if(null!=u.pfValue)s=$(i,s);else for(r=u.strValue,a=0;a<r.length;a++)i=r.charCodeAt(a),s=$(i,s);return s}};mr.getPropertiesHash=mr.getNonDefaultPropertiesHash;var br={appendFromJson:function(n){for(var l=0;l<n.length;l++){var e=n[l],t=e.selector,u=e.style||e.css,r=Object.keys(u);this.selector(t);for(var i=0;i<r.length;i++){var o=r[i],a=u[o];this.css(o,a)}}return this},fromJson:function(n){return this.resetToDefault(),this.appendFromJson(n),this},json:function(){for(var n=[],l=this.defaultLength;l<this.length;l++){for(var e=this[l],t=e.selector,u=e.properties,r={},i=0;i<u.length;i++){var o=u[i];r[o.name]=o.strValue}n.push({selector:t?t.toString():"core",style:r})}return n}},wr={appendFromString:function(n){var l,e,t,u=""+n;function r(){u=u.length>l.length?u.substr(l.length):""}function i(){e=e.length>t.length?e.substr(t.length):""}for(u=u.replace(/[\/][*](\s|.)+?[*][\/]/g,"");;){if(u.match(/^\s*$/))break;var o=u.match(/^\s*((?:.|\s)+?)\s*\{((?:.|\s)+?)\}/);if(!o){cn("Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: "+u);break}l=o[0];var a=o[1];if("core"!==a)if(new gt(a).invalid){cn("Skipping parsing of block: Invalid selector found in string stylesheet: "+a),r();continue}var s=o[2],c=!1;e=s;for(var h=[];;){if(e.match(/^\s*$/))break;var d=e.match(/^\s*(.+?)\s*:\s*(.+?)\s*;/);if(!d){cn("Skipping parsing of block: Invalid formatting of style property and value definitions found in:"+s),c=!0;break}t=d[0];var f=d[1],p=d[2];if(this.properties[f])this.parse(f,p)?(h.push({name:f,val:p}),i()):(cn("Skipping property: Invalid property definition in: "+t),i());else cn("Skipping property: Invalid property name in: "+t),i()}if(c){r();break}this.selector(a);for(var g=0;g<h.length;g++){var v=h[g];this.css(v.name,v.val)}r()}return this},fromString:function(n){return this.resetToDefault(),this.appendFromString(n),this}},_r={};!function(){var n=F,l=function(n){return"^"+n+"\\s*\\(\\s*([\\w\\.]+)\\s*\\)$"},e=function(l){var e=n+"|\\w+|rgb[a]?\\((?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)(?:\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)|hsl[a]?\\((?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?)))\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])(?:\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)|\\#[0-9a-fA-F]{3}|\\#[0-9a-fA-F]{6}";return"^"+l+"\\s*\\(([\\w\\.]+)\\s*\\,\\s*("+n+")\\s*\\,\\s*("+n+")\\s*,\\s*("+e+")\\s*\\,\\s*("+e+")\\)$"},t=["^url\\s*\\(\\s*['\"]?(.+?)['\"]?\\s*\\)$","^(none)$","^(.+)$"];_r.types={time:{number:!0,min:0,units:"s|ms",implicitUnits:"ms"},percent:{number:!0,min:0,max:100,units:"%",implicitUnits:"%"},percentages:{number:!0,min:0,max:100,units:"%",implicitUnits:"%",multiple:!0},zeroOneNumber:{number:!0,min:0,max:1,unitless:!0},zeroOneNumbers:{number:!0,min:0,max:1,unitless:!0,multiple:!0},nOneOneNumber:{number:!0,min:-1,max:1,unitless:!0},nonNegativeInt:{number:!0,min:0,integer:!0,unitless:!0},position:{enums:["parent","origin"]},nodeSize:{number:!0,min:0,enums:["label"]},number:{number:!0,unitless:!0},numbers:{number:!0,unitless:!0,multiple:!0},positiveNumber:{number:!0,unitless:!0,min:0,strictMin:!0},size:{number:!0,min:0},bidirectionalSize:{number:!0},bidirectionalSizes:{number:!0,multiple:!0},sizeMaybePercent:{number:!0,min:0,allowPercent:!0},paddingRelativeTo:{enums:["width","height","average","min","max"]},bgWH:{number:!0,min:0,allowPercent:!0,enums:["auto"],multiple:!0},bgPos:{number:!0,allowPercent:!0,multiple:!0},bgRelativeTo:{enums:["inner","include-padding"],multiple:!0},bgRepeat:{enums:["repeat","repeat-x","repeat-y","no-repeat"],multiple:!0},bgFit:{enums:["none","contain","cover"],multiple:!0},bgCrossOrigin:{enums:["anonymous","use-credentials"],multiple:!0},bgClip:{enums:["none","node"]},color:{color:!0},colors:{color:!0,multiple:!0},fill:{enums:["solid","linear-gradient","radial-gradient"]},bool:{enums:["yes","no"]},lineStyle:{enums:["solid","dotted","dashed"]},lineCap:{enums:["butt","round","square"]},borderStyle:{enums:["solid","dotted","dashed","double"]},curveStyle:{enums:["bezier","unbundled-bezier","haystack","segments","straight"]},fontFamily:{regex:'^([\\w- \\"]+(?:\\s*,\\s*[\\w- \\"]+)*)$'},fontStyle:{enums:["italic","normal","oblique"]},fontWeight:{enums:["normal","bold","bolder","lighter","100","200","300","400","500","600","800","900",100,200,300,400,500,600,700,800,900]},textDecoration:{enums:["none","underline","overline","line-through"]},textTransform:{enums:["none","uppercase","lowercase"]},textWrap:{enums:["none","wrap","ellipsis"]},textBackgroundShape:{enums:["rectangle","roundrectangle","round-rectangle"]},nodeShape:{enums:["rectangle","roundrectangle","round-rectangle","cutrectangle","cut-rectangle","bottomroundrectangle","bottom-round-rectangle","barrel","ellipse","triangle","square","pentagon","hexagon","concavehexagon","concave-hexagon","heptagon","octagon","tag","star","diamond","vee","rhomboid","polygon"]},compoundIncludeLabels:{enums:["include","exclude"]},arrowShape:{enums:["tee","triangle","triangle-tee","triangle-cross","triangle-backcurve","vee","square","circle","diamond","chevron","none"]},arrowFill:{enums:["filled","hollow"]},display:{enums:["element","none"]},visibility:{enums:["hidden","visible"]},zCompoundDepth:{enums:["bottom","orphan","auto","top"]},zIndexCompare:{enums:["auto","manual"]},valign:{enums:["top","center","bottom"]},halign:{enums:["left","center","right"]},text:{string:!0},data:{mapping:!0,regex:l("data")},layoutData:{mapping:!0,regex:l("layoutData")},scratch:{mapping:!0,regex:l("scratch")},mapData:{mapping:!0,regex:e("mapData")},mapLayoutData:{mapping:!0,regex:e("mapLayoutData")},mapScratch:{mapping:!0,regex:e("mapScratch")},fn:{mapping:!0,fn:!0},url:{regexes:t,singleRegexMatchValue:!0},urls:{regexes:t,singleRegexMatchValue:!0,multiple:!0},propList:{propList:!0},angle:{number:!0,units:"deg|rad",implicitUnits:"rad"},textRotation:{number:!0,units:"deg|rad",implicitUnits:"rad",enums:["none","autorotate"]},polygonPointList:{number:!0,multiple:!0,evenMultiple:!0,min:-1,max:1,unitless:!0},edgeDistances:{enums:["intersection","node-position"]},edgeEndpoint:{number:!0,multiple:!0,units:"%|px|em|deg|rad",implicitUnits:"px",enums:["inside-to-node","outside-to-node","outside-to-node-or-label","outside-to-line","outside-to-line-or-label"],singleEnum:!0,validate:function(n,l){switch(n.length){case 2:return"deg"!==l[0]&&"rad"!==l[0]&&"deg"!==l[1]&&"rad"!==l[1];case 1:return m(n[0])||"deg"===l[0]||"rad"===l[0];default:return!1}}},easing:{regexes:["^(spring)\\s*\\(\\s*("+n+")\\s*,\\s*("+n+")\\s*\\)$","^(cubic-bezier)\\s*\\(\\s*("+n+")\\s*,\\s*("+n+")\\s*,\\s*("+n+")\\s*,\\s*("+n+")\\s*\\)$"],enums:["linear","ease","ease-in","ease-out","ease-in-out","ease-in-sine","ease-out-sine","ease-in-out-sine","ease-in-quad","ease-out-quad","ease-in-out-quad","ease-in-cubic","ease-out-cubic","ease-in-out-cubic","ease-in-quart","ease-out-quart","ease-in-out-quart","ease-in-quint","ease-out-quint","ease-in-out-quint","ease-in-expo","ease-out-expo","ease-in-out-expo","ease-in-circ","ease-out-circ","ease-in-out-circ"]},gradientDirection:{enums:["to-bottom","to-top","to-left","to-right","to-bottom-right","to-bottom-left","to-top-right","to-top-left","to-right-bottom","to-left-bottom","to-right-top","to-left-top"]}};var u={zeroNonZero:function(n,l){return(null==n||null==l)&&n!==l||(0==n&&0!=l||0!=n&&0==l)},any:function(n,l){return n!=l}},r=_r.types,i=[{name:"label",type:r.text,triggersBounds:u.any},{name:"text-rotation",type:r.textRotation,triggersBounds:u.any},{name:"text-margin-x",type:r.bidirectionalSize,triggersBounds:u.any},{name:"text-margin-y",type:r.bidirectionalSize,triggersBounds:u.any}],o=[{name:"source-label",type:r.text,triggersBounds:u.any},{name:"source-text-rotation",type:r.textRotation,triggersBounds:u.any},{name:"source-text-margin-x",type:r.bidirectionalSize,triggersBounds:u.any},{name:"source-text-margin-y",type:r.bidirectionalSize,triggersBounds:u.any},{name:"source-text-offset",type:r.size,triggersBounds:u.any}],a=[{name:"target-label",type:r.text,triggersBounds:u.any},{name:"target-text-rotation",type:r.textRotation,triggersBounds:u.any},{name:"target-text-margin-x",type:r.bidirectionalSize,triggersBounds:u.any},{name:"target-text-margin-y",type:r.bidirectionalSize,triggersBounds:u.any},{name:"target-text-offset",type:r.size,triggersBounds:u.any}],s=[{name:"font-family",type:r.fontFamily,triggersBounds:u.any},{name:"font-style",type:r.fontStyle,triggersBounds:u.any},{name:"font-weight",type:r.fontWeight,triggersBounds:u.any},{name:"font-size",type:r.size,triggersBounds:u.any},{name:"text-transform",type:r.textTransform,triggersBounds:u.any},{name:"text-wrap",type:r.textWrap,triggersBounds:u.any},{name:"text-max-width",type:r.size,triggersBounds:u.any},{name:"text-outline-width",type:r.size,triggersBounds:u.any}],c=[{name:"text-valign",type:r.valign,triggersBounds:u.any},{name:"text-halign",type:r.halign,triggersBounds:u.any},{name:"color",type:r.color},{name:"text-outline-color",type:r.color},{name:"text-outline-opacity",type:r.zeroOneNumber},{name:"text-background-color",type:r.color},{name:"text-background-opacity",type:r.zeroOneNumber},{name:"text-background-padding",type:r.size,triggersBounds:u.any},{name:"text-border-opacity",type:r.zeroOneNumber},{name:"text-border-color",type:r.color},{name:"text-border-width",type:r.size,triggersBounds:u.any},{name:"text-border-style",type:r.borderStyle,triggersBounds:u.any},{name:"text-background-shape",type:r.textBackgroundShape,triggersBounds:u.any}],h=[{name:"events",type:r.bool},{name:"text-events",type:r.bool}],d=[{name:"display",type:r.display,triggersZOrder:u.any,triggersBounds:u.any},{name:"visibility",type:r.visibility,triggersZOrder:u.any},{name:"opacity",type:r.zeroOneNumber,triggersZOrder:u.zeroNonZero},{name:"text-opacity",type:r.zeroOneNumber},{name:"min-zoomed-font-size",type:r.size},{name:"z-compound-depth",type:r.zCompoundDepth,triggersZOrder:u.any},{name:"z-index-compare",type:r.zIndexCompare,triggersZOrder:u.any},{name:"z-index",type:r.nonNegativeInt,triggersZOrder:u.any}],f=[{name:"overlay-padding",type:r.size,triggersBounds:u.any},{name:"overlay-color",type:r.color},{name:"overlay-opacity",type:r.zeroOneNumber,triggersBounds:u.zeroNonZero}],p=[{name:"transition-property",type:r.propList},{name:"transition-duration",type:r.time},{name:"transition-delay",type:r.time},{name:"transition-timing-function",type:r.easing}],g=[{name:"height",type:r.nodeSize,triggersBounds:u.any},{name:"width",type:r.nodeSize,triggersBounds:u.any},{name:"shape",type:r.nodeShape,triggersBounds:u.any},{name:"shape-polygon-points",type:r.polygonPointList,triggersBounds:u.any},{name:"background-color",type:r.color},{name:"background-fill",type:r.fill},{name:"background-opacity",type:r.zeroOneNumber},{name:"background-blacken",type:r.nOneOneNumber},{name:"background-gradient-stop-colors",type:r.colors},{name:"background-gradient-stop-positions",type:r.percentages},{name:"background-gradient-direction",type:r.gradientDirection},{name:"padding",type:r.sizeMaybePercent,triggersBounds:u.any},{name:"padding-relative-to",type:r.paddingRelativeTo,triggersBounds:u.any},{name:"bounds-expansion",type:r.size,triggersBounds:u.any}],v=[{name:"border-color",type:r.color},{name:"border-opacity",type:r.zeroOneNumber},{name:"border-width",type:r.size,triggersBounds:u.any},{name:"border-style",type:r.borderStyle}],y=[{name:"background-image",type:r.urls},{name:"background-image-crossorigin",type:r.bgCrossOrigin},{name:"background-image-opacity",type:r.zeroOneNumbers},{name:"background-position-x",type:r.bgPos},{name:"background-position-y",type:r.bgPos},{name:"background-width-relative-to",type:r.bgRelativeTo},{name:"background-height-relative-to",type:r.bgRelativeTo},{name:"background-repeat",type:r.bgRepeat},{name:"background-fit",type:r.bgFit},{name:"background-clip",type:r.bgClip},{name:"background-width",type:r.bgWH},{name:"background-height",type:r.bgWH},{name:"background-offset-x",type:r.bgPos},{name:"background-offset-y",type:r.bgPos}],b=[{name:"position",type:r.position,triggersBounds:u.any},{name:"compound-sizing-wrt-labels",type:r.compoundIncludeLabels,triggersBounds:u.any},{name:"min-width",type:r.size,triggersBounds:u.any},{name:"min-width-bias-left",type:r.sizeMaybePercent,triggersBounds:u.any},{name:"min-width-bias-right",type:r.sizeMaybePercent,triggersBounds:u.any},{name:"min-height",type:r.size,triggersBounds:u.any},{name:"min-height-bias-top",type:r.sizeMaybePercent,triggersBounds:u.any},{name:"min-height-bias-bottom",type:r.sizeMaybePercent,triggersBounds:u.any}],w=[{name:"line-style",type:r.lineStyle},{name:"line-color",type:r.color},{name:"line-fill",type:r.fill},{name:"line-cap",type:r.lineCap},{name:"line-dash-pattern",type:r.numbers},{name:"line-dash-offset",type:r.number},{name:"line-gradient-stop-colors",type:r.colors},{name:"line-gradient-stop-positions",type:r.percentages},{name:"curve-style",type:r.curveStyle,triggersBounds:u.any},{name:"haystack-radius",type:r.zeroOneNumber,triggersBounds:u.any},{name:"source-endpoint",type:r.edgeEndpoint,triggersBounds:u.any},{name:"target-endpoint",type:r.edgeEndpoint,triggersBounds:u.any},{name:"control-point-step-size",type:r.size,triggersBounds:u.any},{name:"control-point-distances",type:r.bidirectionalSizes,triggersBounds:u.any},{name:"control-point-weights",type:r.numbers,triggersBounds:u.any},{name:"segment-distances",type:r.bidirectionalSizes,triggersBounds:u.any},{name:"segment-weights",type:r.numbers,triggersBounds:u.any},{name:"edge-distances",type:r.edgeDistances,triggersBounds:u.any},{name:"arrow-scale",type:r.positiveNumber,triggersBounds:u.any},{name:"loop-direction",type:r.angle,triggersBounds:u.any},{name:"loop-sweep",type:r.angle,triggersBounds:u.any},{name:"source-distance-from-node",type:r.size,triggersBounds:u.any},{name:"target-distance-from-node",type:r.size,triggersBounds:u.any}],_=[{name:"ghost",type:r.bool,triggersBounds:u.any},{name:"ghost-offset-x",type:r.bidirectionalSize,triggersBounds:u.any},{name:"ghost-offset-y",type:r.bidirectionalSize,triggersBounds:u.any},{name:"ghost-opacity",type:r.zeroOneNumber}],x=[{name:"selection-box-color",type:r.color},{name:"selection-box-opacity",type:r.zeroOneNumber},{name:"selection-box-border-color",type:r.color},{name:"selection-box-border-width",type:r.size},{name:"active-bg-color",type:r.color},{name:"active-bg-opacity",type:r.zeroOneNumber},{name:"active-bg-size",type:r.size},{name:"outside-texture-bg-color",type:r.color},{name:"outside-texture-bg-opacity",type:r.zeroOneNumber}],E=[];_r.pieBackgroundN=16,E.push({name:"pie-size",type:r.sizeMaybePercent});for(var T=1;T<=_r.pieBackgroundN;T++)E.push({name:"pie-"+T+"-background-color",type:r.color}),E.push({name:"pie-"+T+"-background-size",type:r.percent}),E.push({name:"pie-"+T+"-background-opacity",type:r.zeroOneNumber});var k=[],C=_r.arrowPrefixes=["source","mid-source","target","mid-target"];[{name:"arrow-shape",type:r.arrowShape},{name:"arrow-color",type:r.color},{name:"arrow-fill",type:r.arrowFill}].forEach(function(n){C.forEach(function(l){var e=l+"-"+n.name,t=n.type;k.push({name:e,type:t})})},{});var S=_r.properties=h.concat(p,d,f,_,c,s,i,o,a,g,v,y,E,b,w,k,x),I=_r.propertyGroups={behavior:h,transition:p,visibility:d,overlay:f,ghost:_,commonLabel:c,labelDimensions:s,mainLabel:i,sourceLabel:o,targetLabel:a,nodeBody:g,nodeBorder:v,backgroundImage:y,pie:E,compound:b,edgeLine:w,edgeArrow:k,core:x},N=_r.propertyGroupNames={};(_r.propertyGroupKeys=Object.keys(I)).forEach(function(n){N[n]=I[n].map(function(n){return n.name}),I[n].forEach(function(l){return l.groupKey=n})});var D=_r.aliases=[{name:"content",pointsTo:"label"},{name:"control-point-distance",pointsTo:"control-point-distances"},{name:"control-point-weight",pointsTo:"control-point-weights"},{name:"edge-text-rotation",pointsTo:"text-rotation"},{name:"padding-left",pointsTo:"padding"},{name:"padding-right",pointsTo:"padding"},{name:"padding-top",pointsTo:"padding"},{name:"padding-bottom",pointsTo:"padding"}];_r.propertyNames=S.map(function(n){return n.name});for(var O=0;O<S.length;O++){var A=S[O];S[A.name]=A}for(var P=0;P<D.length;P++){var M=D[P],L=S[M.pointsTo],R={name:M.name,alias:!0,pointsTo:L};S.push(R),S[M.name]=R}}(),_r.getDefaultProperty=function(n){return this.getDefaultProperties()[n]},_r.getDefaultProperties=function(){var n=this._private;if(null!=n.defaultProperties)return n.defaultProperties;for(var l=j({"selection-box-color":"#ddd","selection-box-opacity":.65,"selection-box-border-color":"#aaa","selection-box-border-width":1,"active-bg-color":"black","active-bg-opacity":.15,"active-bg-size":30,"outside-texture-bg-color":"#000","outside-texture-bg-opacity":.125,events:"yes","text-events":"no","text-valign":"top","text-halign":"center",color:"#000","text-outline-color":"#000","text-outline-width":0,"text-outline-opacity":1,"text-opacity":1,"text-decoration":"none","text-transform":"none","text-wrap":"none","text-max-width":9999,"text-background-color":"#000","text-background-opacity":0,"text-background-shape":"rectangle","text-background-padding":0,"text-border-opacity":0,"text-border-width":0,"text-border-style":"solid","text-border-color":"#000","font-family":"Helvetica Neue, Helvetica, sans-serif","font-style":"normal","font-weight":"normal","font-size":16,"min-zoomed-font-size":0,"text-rotation":"none","source-text-rotation":"none","target-text-rotation":"none",visibility:"visible",display:"element",opacity:1,"z-compound-depth":"auto","z-index-compare":"auto","z-index":0,label:"","text-margin-x":0,"text-margin-y":0,"source-label":"","source-text-offset":0,"source-text-margin-x":0,"source-text-margin-y":0,"target-label":"","target-text-offset":0,"target-text-margin-x":0,"target-text-margin-y":0,"overlay-opacity":0,"overlay-color":"#000","overlay-padding":10,"transition-property":"none","transition-duration":0,"transition-delay":0,"transition-timing-function":"linear","background-blacken":0,"background-color":"#999","background-fill":"solid","background-opacity":1,"background-image":"none","background-image-crossorigin":"anonymous","background-image-opacity":1,"background-position-x":"50%","background-position-y":"50%","background-offset-x":0,"background-offset-y":0,"background-width-relative-to":"include-padding","background-height-relative-to":"include-padding","background-repeat":"no-repeat","background-fit":"none","background-clip":"node","background-width":"auto","background-height":"auto","border-color":"#000","border-opacity":1,"border-width":0,"border-style":"solid",height:30,width:30,shape:"ellipse","shape-polygon-points":"-1, -1,   1, -1,   1, 1,   -1, 1","bounds-expansion":0,"background-gradient-direction":"to-bottom","background-gradient-stop-colors":"#999","background-gradient-stop-positions":"0%",ghost:"no","ghost-offset-y":0,"ghost-offset-x":0,"ghost-opacity":0,padding:0,"padding-relative-to":"width",position:"origin","compound-sizing-wrt-labels":"include","min-width":0,"min-width-bias-left":0,"min-width-bias-right":0,"min-height":0,"min-height-bias-top":0,"min-height-bias-bottom":0},{"pie-size":"100%"},[{name:"pie-{{i}}-background-color",value:"black"},{name:"pie-{{i}}-background-size",value:"0%"},{name:"pie-{{i}}-background-opacity",value:1}].reduce(function(n,l){for(var e=1;e<=_r.pieBackgroundN;e++){var t=l.name.replace("{{i}}",e),u=l.value;n[t]=u}return n},{}),{"line-style":"solid","line-color":"#999","line-fill":"solid","line-cap":"butt","line-gradient-stop-colors":"#999","line-gradient-stop-positions":"0%","control-point-step-size":40,"control-point-weights":.5,"segment-weights":.5,"segment-distances":20,"edge-distances":"intersection","curve-style":"haystack","haystack-radius":0,"arrow-scale":1,"loop-direction":"-45deg","loop-sweep":"-90deg","source-distance-from-node":0,"target-distance-from-node":0,"source-endpoint":"outside-to-node","target-endpoint":"outside-to-node","line-dash-pattern":[6,3],"line-dash-offset":0},[{name:"arrow-shape",value:"none"},{name:"arrow-color",value:"#999"},{name:"arrow-fill",value:"filled"}].reduce(function(n,l){return _r.arrowPrefixes.forEach(function(e){var t=e+"-"+l.name,u=l.value;n[t]=u}),n},{})),e={},t=0;t<this.properties.length;t++){var u=this.properties[t];if(!u.pointsTo){var r=u.name,i=l[r],o=this.parse(r,i);e[r]=o}}return n.defaultProperties=e,n.defaultProperties},_r.addDefaultStylesheet=function(){this.selector(":parent").css({shape:"rectangle",padding:10,"background-color":"#eee","border-color":"#ccc","border-width":1}).selector("edge").css({width:3}).selector(":loop").css({"curve-style":"bezier"}).selector("edge:compound").css({"curve-style":"bezier","source-endpoint":"outside-to-line","target-endpoint":"outside-to-line"}).selector(":selected").css({"background-color":"#0169D9","line-color":"#0169D9","source-arrow-color":"#0169D9","target-arrow-color":"#0169D9","mid-source-arrow-color":"#0169D9","mid-target-arrow-color":"#0169D9"}).selector(":parent:selected").css({"background-color":"#CCE1F9","border-color":"#aec8e5"}).selector(":active").css({"overlay-color":"black","overlay-padding":10,"overlay-opacity":.25}),this.defaultLength=this.length};var xr={parse:function(n,l,e,t){if(b(l))return this.parseImplWarn(n,l,e,t);var u,r=J(n,""+l,e?"t":"f","mapping"===t||!0===t||!1===t||null==t?"dontcare":t),i=this.propCache=this.propCache||[];return(u=i[r])||(u=i[r]=this.parseImplWarn(n,l,e,t)),(e||"mapping"===t)&&(u=hn(u))&&(u.value=hn(u.value)),u},parseImplWarn:function(n,l,e,t){var u=this.parseImpl(n,l,e,t);return u||null==l||cn("The style property `".concat(n,": ").concat(l,"` is invalid")),u}};xr.parseImpl=function(n,l,e,t){n=P(n);var u=this.properties[n],r=l,i=this.types;if(!u)return null;if(void 0===l)return null;u.alias&&(u=u.pointsTo,n=u.name);var o=m(l);o&&(l=l.trim());var a,s,c=u.type;if(!c)return null;if(e&&(""===l||null===l))return{name:n,value:l,bypass:!0,deleteBypass:!0};if(b(l))return{name:n,value:l,strValue:"fn",mapped:i.fn,bypass:e};if(!o||t||l.length<7||"a"!==l[1]);else{if(l.length>=7&&"d"===l[0]&&(a=new RegExp(i.data.regex).exec(l))){if(e)return!1;var h=i.data;return{name:n,value:a,strValue:""+l,mapped:h,field:a[1],bypass:e}}if(l.length>=10&&"m"===l[0]&&(s=new RegExp(i.mapData.regex).exec(l))){if(e)return!1;if(c.multiple)return!1;var d=i.mapData;if(!c.color&&!c.number)return!1;var f=this.parse(n,s[4]);if(!f||f.mapped)return!1;var p=this.parse(n,s[5]);if(!p||p.mapped)return!1;if(f.pfValue===p.pfValue||f.strValue===p.strValue)return cn("`"+n+": "+l+"` is not a valid mapper because the output range is zero; converting to `"+n+": "+f.strValue+"`"),this.parse(n,f.strValue);if(c.color){var g=f.value,v=p.value;if(!(g[0]!==v[0]||g[1]!==v[1]||g[2]!==v[2]||g[3]!==v[3]&&(null!=g[3]&&1!==g[3]||null!=v[3]&&1!==v[3])))return!1}return{name:n,value:s,strValue:""+l,mapped:d,field:s[1],fieldMin:parseFloat(s[2]),fieldMax:parseFloat(s[3]),valueMin:f.value,valueMax:p.value,bypass:e}}}if(c.multiple&&"multiple"!==t){var y;if(y=o?l.split(/\s+/):w(l)?l:[l],c.evenMultiple&&y.length%2!=0)return null;for(var _=[],E=[],T=[],k="",C=!1,S=0;S<y.length;S++){var I=this.parse(n,y[S],e,"multiple");C=C||m(I.value),_.push(I.value),T.push(null!=I.pfValue?I.pfValue:I.value),E.push(I.units),k+=(S>0?" ":"")+I.strValue}return c.validate&&!c.validate(_,E)?null:c.singleEnum&&C?1===_.length&&m(_[0])?{name:n,value:_[0],strValue:_[0],bypass:e}:null:{name:n,value:_,pfValue:T,strValue:k,bypass:e,units:E}}var N,D,O=function(){for(var t=0;t<c.enums.length;t++){if(c.enums[t]===l)return{name:n,value:l,strValue:""+l,bypass:e}}return null};if(c.number){var A,M="px";if(c.units&&(A=c.units),c.implicitUnits&&(M=c.implicitUnits),!c.unitless)if(o){var L="px|em"+(c.allowPercent?"|\\%":"");A&&(L=A);var R=l.match("^("+F+")("+L+")?$");R&&(l=R[1],A=R[2]||M)}else A&&!c.implicitUnits||(A=M);if(l=parseFloat(l),isNaN(l)&&void 0===c.enums)return null;if(isNaN(l)&&void 0!==c.enums)return l=r,O();if(c.integer&&(!x(D=l)||Math.floor(D)!==D))return null;if(void 0!==c.min&&(l<c.min||c.strictMin&&l===c.min)||void 0!==c.max&&(l>c.max||c.strictMax&&l===c.max))return null;var B={name:n,value:l,strValue:""+l+(A||""),units:A,bypass:e};return c.unitless||"px"!==A&&"em"!==A?B.pfValue=l:B.pfValue="px"!==A&&A?this.getEmSizeInPixels()*l:l,"ms"!==A&&"s"!==A||(B.pfValue="ms"===A?l:1e3*l),"deg"!==A&&"rad"!==A||(B.pfValue="rad"===A?l:(N=l,Math.PI*N/180)),"%"===A&&(B.pfValue=l/100),B}if(c.propList){var j=[],z=""+l;if("none"===z);else{for(var q=z.split(/\s*,\s*|\s+/),V=0;V<q.length;V++){var H=q[V].trim();this.properties[H]?j.push(H):cn("`"+H+"` is not a valid property name")}if(0===j.length)return null}return{name:n,value:j,strValue:0===j.length?"none":j.join(" "),bypass:e}}if(c.color){var G=U(l);return G?{name:n,value:G,pfValue:G,strValue:"rgb("+G[0]+","+G[1]+","+G[2]+")",bypass:e}:null}if(c.regex||c.regexes){if(c.enums){var Y=O();if(Y)return Y}for(var W=c.regexes?c.regexes:[c.regex],X=0;X<W.length;X++){var K=new RegExp(W[X]).exec(l);if(K)return{name:n,value:c.singleRegexMatchValue?K[1]:K,strValue:""+l,bypass:e}}return null}return c.string?{name:n,value:""+l,strValue:""+l,bypass:e}:c.enums?O():null};var Er=function n(l){if(!(this instanceof n))return new n(l);S(l)?(this._private={cy:l,coreStyle:{}},this.length=0,this.resetToDefault()):sn("A style must have a core reference")},Tr=Er.prototype;Tr.instanceString=function(){return"style"},Tr.clear=function(){for(var n=0;n<this.length;n++)this[n]=void 0;return this.length=0,this._private.newStyle=!0,this},Tr.resetToDefault=function(){return this.clear(),this.addDefaultStylesheet(),this},Tr.core=function(n){return this._private.coreStyle[n]||this.getDefaultProperty(n)},Tr.selector=function(n){var l="core"===n?null:new gt(n),e=this.length++;return this[e]={selector:l,properties:[],mappedProperties:[],index:e},this},Tr.css=function(){var n=arguments;if(1===n.length)for(var l=n[0],e=0;e<this.properties.length;e++){var t=this.properties[e],u=l[t.name];void 0===u&&(u=l[M(t.name)]),void 0!==u&&this.cssRule(t.name,u)}else 2===n.length&&this.cssRule(n[0],n[1]);return this},Tr.style=Tr.css,Tr.cssRule=function(n,l){var e=this.parse(n,l);if(e){var t=this.length-1;this[t].properties.push(e),this[t].properties[e.name]=e,e.name.match(/pie-(\d+)-background-size/)&&e.value&&(this._private.hasPie=!0),e.mapped&&this[t].mappedProperties.push(e),!this[t].selector&&(this._private.coreStyle[e.name]=e)}return this},Tr.append=function(n){return I(n)?n.appendToStyle(this):w(n)?this.appendFromJson(n):m(n)&&this.appendFromString(n),this},Er.fromJson=function(n,l){var e=new Er(n);return e.fromJson(l),e},Er.fromString=function(n,l){return new Er(n).fromString(l)},[gr,vr,yr,mr,br,wr,_r,xr].forEach(function(n){j(Tr,n)}),Er.types=Tr.types,Er.properties=Tr.properties,Er.propertyGroups=Tr.propertyGroups,Er.propertyGroupNames=Tr.propertyGroupNames,Er.propertyGroupKeys=Tr.propertyGroupKeys;var kr={style:function(n){n&&this.setStyle(n).update();return this._private.style},setStyle:function(n){var l=this._private;return I(n)?l.style=n.generateStyle(this):w(n)?l.style=Er.fromJson(this,n):m(n)?l.style=Er.fromString(this,n):l.style=Er(this),l.style}},Cr={autolock:function(n){return void 0===n?this._private.autolock:(this._private.autolock=!!n,this)},autoungrabify:function(n){return void 0===n?this._private.autoungrabify:(this._private.autoungrabify=!!n,this)},autounselectify:function(n){return void 0===n?this._private.autounselectify:(this._private.autounselectify=!!n,this)},selectionType:function(n){var l=this._private;return null==l.selectionType&&(l.selectionType="single"),void 0===n?l.selectionType:("additive"!==n&&"single"!==n||(l.selectionType=n),this)},panningEnabled:function(n){return void 0===n?this._private.panningEnabled:(this._private.panningEnabled=!!n,this)},userPanningEnabled:function(n){return void 0===n?this._private.userPanningEnabled:(this._private.userPanningEnabled=!!n,this)},zoomingEnabled:function(n){return void 0===n?this._private.zoomingEnabled:(this._private.zoomingEnabled=!!n,this)},userZoomingEnabled:function(n){return void 0===n?this._private.userZoomingEnabled:(this._private.userZoomingEnabled=!!n,this)},boxSelectionEnabled:function(n){return void 0===n?this._private.boxSelectionEnabled:(this._private.boxSelectionEnabled=!!n,this)},pan:function(){var n,l,e,t,u,r=arguments,i=this._private.pan;switch(r.length){case 0:return i;case 1:if(m(r[0]))return i[n=r[0]];if(_(r[0])){if(!this._private.panningEnabled)return this;t=(e=r[0]).x,u=e.y,x(t)&&(i.x=t),x(u)&&(i.y=u),this.emit("pan viewport")}break;case 2:if(!this._private.panningEnabled)return this;n=r[0],l=r[1],"x"!==n&&"y"!==n||!x(l)||(i[n]=l),this.emit("pan viewport")}return this.notify("viewport"),this},panBy:function(n,l){var e,t,u,r,i,o=arguments,a=this._private.pan;if(!this._private.panningEnabled)return this;switch(o.length){case 1:_(n)&&(r=(u=o[0]).x,i=u.y,x(r)&&(a.x+=r),x(i)&&(a.y+=i),this.emit("pan viewport"));break;case 2:t=l,"x"!==(e=n)&&"y"!==e||!x(t)||(a[e]+=t),this.emit("pan viewport")}return this.notify("viewport"),this},fit:function(n,l){var e=this.getFitViewport(n,l);if(e){var t=this._private;t.zoom=e.zoom,t.pan=e.pan,this.emit("pan zoom viewport"),this.notify("viewport")}return this},getFitViewport:function(n,l){if(x(n)&&void 0===l&&(l=n,n=void 0),this._private.panningEnabled&&this._private.zoomingEnabled){var e,t;if(m(n)){var u=n;n=this.$(u)}else if(_(t=n)&&x(t.x1)&&x(t.x2)&&x(t.y1)&&x(t.y2)){var r=n;(e={x1:r.x1,y1:r.y1,x2:r.x2,y2:r.y2}).w=e.x2-e.x1,e.h=e.y2-e.y1}else T(n)||(n=this.mutableElements());if(!T(n)||!n.empty()){e=e||n.boundingBox();var i,o=this.width(),a=this.height();if(l=x(l)?l:0,!isNaN(o)&&!isNaN(a)&&o>0&&a>0&&!isNaN(e.w)&&!isNaN(e.h)&&e.w>0&&e.h>0)return{zoom:i=(i=(i=Math.min((o-2*l)/e.w,(a-2*l)/e.h))>this._private.maxZoom?this._private.maxZoom:i)<this._private.minZoom?this._private.minZoom:i,pan:{x:(o-i*(e.x1+e.x2))/2,y:(a-i*(e.y1+e.y2))/2}}}}},zoomRange:function(n,l){var e=this._private;if(null==l){var t=n;n=t.min,l=t.max}return x(n)&&x(l)&&n<=l?(e.minZoom=n,e.maxZoom=l):x(n)&&void 0===l&&n<=e.maxZoom?e.minZoom=n:x(l)&&void 0===n&&l>=e.minZoom&&(e.maxZoom=l),this},minZoom:function(n){return void 0===n?this._private.minZoom:this.zoomRange({min:n})},maxZoom:function(n){return void 0===n?this._private.maxZoom:this.zoomRange({max:n})},getZoomedViewport:function(n){var l,e,t=this._private,u=t.pan,r=t.zoom,i=!1;if(t.zoomingEnabled||(i=!0),x(n)?e=n:_(n)&&(e=n.level,null!=n.position?l=jn(n.position,r,u):null!=n.renderedPosition&&(l=n.renderedPosition),null==l||t.panningEnabled||(i=!0)),e=(e=e>t.maxZoom?t.maxZoom:e)<t.minZoom?t.minZoom:e,i||!x(e)||e===r||null!=l&&(!x(l.x)||!x(l.y)))return null;if(null!=l){var o=u,a=r,s=e;return{zoomed:!0,panned:!0,zoom:s,pan:{x:-s/a*(l.x-o.x)+l.x,y:-s/a*(l.y-o.y)+l.y}}}return{zoomed:!0,panned:!1,zoom:e,pan:u}},zoom:function(n){if(void 0===n)return this._private.zoom;var l=this.getZoomedViewport(n),e=this._private;return null!=l&&l.zoomed?(e.zoom=l.zoom,l.panned&&(e.pan.x=l.pan.x,e.pan.y=l.pan.y),this.emit("zoom"+(l.panned?" pan":"")+" viewport"),this.notify("viewport"),this):this},viewport:function(n){var l=this._private,e=!0,t=!0,u=[],r=!1,i=!1;if(!n)return this;if(x(n.zoom)||(e=!1),_(n.pan)||(t=!1),!e&&!t)return this;if(e){var o=n.zoom;o<l.minZoom||o>l.maxZoom||!l.zoomingEnabled?r=!0:(l.zoom=o,u.push("zoom"))}if(t&&(!r||!n.cancelOnFailedZoom)&&l.panningEnabled){var a=n.pan;x(a.x)&&(l.pan.x=a.x,i=!1),x(a.y)&&(l.pan.y=a.y,i=!1),i||u.push("pan")}return u.length>0&&(u.push("viewport"),this.emit(u.join(" ")),this.notify("viewport")),this},center:function(n){var l=this.getCenterPan(n);return l&&(this._private.pan=l,this.emit("pan viewport"),this.notify("viewport")),this},getCenterPan:function(n,l){if(this._private.panningEnabled){if(m(n)){var e=n;n=this.mutableElements().filter(e)}else T(n)||(n=this.mutableElements());if(0!==n.length){var t=n.boundingBox(),u=this.width(),r=this.height();return{x:(u-(l=void 0===l?this._private.zoom:l)*(t.x1+t.x2))/2,y:(r-l*(t.y1+t.y2))/2}}}},reset:function(){return this._private.panningEnabled&&this._private.zoomingEnabled?(this.viewport({pan:{x:0,y:0},zoom:1}),this):this},invalidateSize:function(){this._private.sizeCache=null},size:function(){var n,l,e=this._private,t=e.container;return e.sizeCache=e.sizeCache||(t?(n=h.getComputedStyle(t),l=function(l){return parseFloat(n.getPropertyValue(l))},{width:t.clientWidth-l("padding-left")-l("padding-right"),height:t.clientHeight-l("padding-top")-l("padding-bottom")}):{width:1,height:1})},width:function(){return this.size().width},height:function(){return this.size().height},extent:function(){var n=this._private.pan,l=this._private.zoom,e=this.renderedExtent(),t={x1:(e.x1-n.x)/l,x2:(e.x2-n.x)/l,y1:(e.y1-n.y)/l,y2:(e.y2-n.y)/l};return t.w=t.x2-t.x1,t.h=t.y2-t.y1,t},renderedExtent:function(){var n=this.width(),l=this.height();return{x1:0,y1:0,x2:n,y2:l,w:n,h:l}}};Cr.centre=Cr.center,Cr.autolockNodes=Cr.autolock,Cr.autoungrabifyNodes=Cr.autoungrabify;var Sr=function(n){var l=this,e=(n=j({},n)).container;e&&!E(e)&&E(e[0])&&(e=e[0]);var t=e?e._cyreg:null;(t=t||{})&&t.cy&&(t.cy.destroy(),t={});var u=t.readies=t.readies||[];e&&(e._cyreg=t),t.cy=l;var r=void 0!==h&&void 0!==e&&!n.headless,i=n;i.layout=j({name:r?"grid":"null"},i.layout),i.renderer=j({name:r?"canvas":"null"},i.renderer);var o=function(n,l,e){return void 0!==l?l:void 0!==e?e:n},a=this._private={container:e,ready:!1,options:i,elements:new Gu(this),listeners:[],aniEles:new Gu(this),scratch:{},layout:null,renderer:null,destroyed:!1,notificationsEnabled:!0,minZoom:1e-50,maxZoom:1e50,zoomingEnabled:o(!0,i.zoomingEnabled),userZoomingEnabled:o(!0,i.userZoomingEnabled),panningEnabled:o(!0,i.panningEnabled),userPanningEnabled:o(!0,i.userPanningEnabled),boxSelectionEnabled:o(!0,i.boxSelectionEnabled),autolock:o(!1,i.autolock,i.autolockNodes),autoungrabify:o(!1,i.autoungrabify,i.autoungrabifyNodes),autounselectify:o(!1,i.autounselectify),styleEnabled:void 0===i.styleEnabled?r:i.styleEnabled,zoom:x(i.zoom)?i.zoom:1,pan:{x:_(i.pan)&&x(i.pan.x)?i.pan.x:0,y:_(i.pan)&&x(i.pan.y)?i.pan.y:0},animation:{current:[],queue:[]},hasCompoundNodes:!1};this.createEmitter(),this.selectionType(i.selectionType),this.zoomRange({min:i.minZoom,max:i.maxZoom});a.styleEnabled&&l.setStyle([]);var s=j({},i,i.renderer);l.initRenderer(s);!function(n,l){if(n.some(D))return Ne.all(n).then(l);l(n)}([i.style,i.elements],function(n){var e=n[0],r=n[1];a.styleEnabled&&l.style().append(e),function(n,e,t){l.notifications(!1);var u=l.mutableElements();u.length>0&&u.remove(),null!=n&&(_(n)||w(n))&&l.add(n),l.one("layoutready",function(n){l.notifications(!0),l.emit(n),l.one("load",e),l.emitAndNotify("load")}).one("layoutstop",function(){l.one("done",t),l.emit("done")});var r=j({},l._private.options.layout);r.eles=l.elements(),l.layout(r).run()}(r,function(){l.startAnimationLoop(),a.ready=!0,b(i.ready)&&l.on("ready",i.ready);for(var n=0;n<u.length;n++){var e=u[n];l.on("ready",e)}t&&(t.readies=[]),l.emit("ready")},i.done)})},Ir=Sr.prototype;j(Ir,{instanceString:function(){return"core"},isReady:function(){return this._private.ready},isDestroyed:function(){return this._private.destroyed},ready:function(n){return this.isReady()?this.emitter().emit("ready",[],n):this.on("ready",n),this},destroy:function(){var n=this;if(!n.isDestroyed())return n.stopAnimationLoop(),n.destroyRenderer(),this.emit("destroy"),n._private.destroyed=!0,n},hasElementWithId:function(n){return this._private.elements.hasElementWithId(n)},getElementById:function(n){return this._private.elements.getElementById(n)},hasCompoundNodes:function(){return this._private.hasCompoundNodes},headless:function(){return this._private.renderer.isHeadless()},styleEnabled:function(){return this._private.styleEnabled},addToPool:function(n){return this._private.elements.merge(n),this},removeFromPool:function(n){return this._private.elements.unmerge(n),this},container:function(){return this._private.container||null},mount:function(n,l){if(null!=n){var e=this,t=e._private,u=t.options,r=l||{name:"canvas"};return u.renderer=r,!E(n)&&E(n[0])&&(n=n[0]),e.stopAnimationLoop(),e.destroyRenderer(),t.container=n,t.styleEnabled=!0,e.initRenderer(r),e.startAnimationLoop(),e.style(u.style),e.emit("mount"),e}},unmount:function(){var n=this;return n.stopAnimationLoop(),n.destroyRenderer(),n.initRenderer({name:"null"}),n.emit("unmount"),n},options:function(){return hn(this._private.options)},json:function(n){var l=this,e=l._private,t=l.mutableElements();if(_(n)){if(l.startBatch(),n.elements){var u={},r=function(n,e){for(var t=[],r=[],i=0;i<n.length;i++){var o=n[i],a=o.data.id,s=l.getElementById(a);u[a]=!0,0!==s.length?r.push({ele:s,json:o}):e?(o.group=e,t.push(o)):t.push(o)}l.add(t);for(var c=0;c<r.length;c++){var h=r[c],d=h.ele,f=h.json;d.json(f)}};if(w(n.elements))r(n.elements);else for(var i=["nodes","edges"],o=0;o<i.length;o++){var a=i[o],s=n.elements[a];w(s)&&r(s,a)}var c=l.collection();t.filter(function(n){return!u[n.id()]}).forEach(function(n){n.isParent()?c.merge(n):n.remove()}),c.forEach(function(n){return n.children().move({parent:null})}),c.forEach(function(n){return function(n){return l.getElementById(n.id())}(n).remove()})}n.style&&l.style(n.style),null!=n.zoom&&n.zoom!==e.zoom&&l.zoom(n.zoom),n.pan&&(n.pan.x===e.pan.x&&n.pan.y===e.pan.y||l.pan(n.pan));for(var h=["minZoom","maxZoom","zoomingEnabled","userZoomingEnabled","panningEnabled","userPanningEnabled","boxSelectionEnabled","autolock","autoungrabify","autounselectify"],d=0;d<h.length;d++){var f=h[d];null!=n[f]&&l[f](n[f])}return l.endBatch(),this}var p={};!!n?p.elements=this.elements().map(function(n){return n.json()}):(p.elements={},t.forEach(function(n){var l=n.group();p.elements[l]||(p.elements[l]=[]),p.elements[l].push(n.json())})),this._private.styleEnabled&&(p.style=l.style().json());var g=e.options;return p.zoomingEnabled=e.zoomingEnabled,p.userZoomingEnabled=e.userZoomingEnabled,p.zoom=e.zoom,p.minZoom=e.minZoom,p.maxZoom=e.maxZoom,p.panningEnabled=e.panningEnabled,p.userPanningEnabled=e.userPanningEnabled,p.pan=hn(e.pan),p.boxSelectionEnabled=e.boxSelectionEnabled,p.renderer=hn(g.renderer),p.hideEdgesOnViewport=g.hideEdgesOnViewport,p.textureOnViewport=g.textureOnViewport,p.wheelSensitivity=g.wheelSensitivity,p.motionBlur=g.motionBlur,p},scratch:Ae.data({field:"scratch",bindingEvent:"scratch",allowBinding:!0,allowSetting:!0,settingEvent:"scratch",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0}),removeScratch:Ae.removeData({field:"scratch",event:"scratch",triggerFnName:"trigger",triggerEvent:!0})}),Ir.$id=Ir.getElementById,[Wu,rr,ar,sr,cr,hr,fr,pr,kr,Cr].forEach(function(n){j(Ir,n)});var Nr={fit:!0,directed:!1,padding:30,circle:!1,grid:!1,spacingFactor:1.75,boundingBox:void 0,avoidOverlap:!0,nodeDimensionsIncludeLabels:!1,roots:void 0,maximal:!1,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(n,l){return!0},ready:void 0,stop:void 0,transform:function(n,l){return l}},Dr=function(n){return n.scratch("breadthfirst")},Or=function(n,l){return n.scratch("breadthfirst",l)};function Ar(n){this.options=j({},Nr,n)}Ar.prototype.run=function(){var n,l=this.options,e=l,t=l.cy,u=e.eles,r=u.nodes().filter(function(n){return!n.isParent()}),i=u,o=e.directed,a=e.maximal||e.maximalAdjustments>0,s=$n(e.boundingBox?e.boundingBox:{x1:0,y1:0,w:t.width(),h:t.height()});if(T(e.roots))n=e.roots;else if(w(e.roots)){for(var c=[],h=0;h<e.roots.length;h++){var d=e.roots[h],f=t.getElementById(d);c.push(f)}n=t.collection(c)}else if(m(e.roots))n=t.$(e.roots);else if(o)n=r.roots();else{var p=u.components();n=t.collection();for(var g=function(l){var e=p[l],t=e.maxDegree(!1),u=e.filter(function(n){return n.degree(!1)===t});n=n.add(u)},v=0;v<p.length;v++)g(v)}var y=[],b={},_=function(n,l){null==y[l]&&(y[l]=[]);var e=y[l].length;y[l].push(n),Or(n,{index:e,depth:l})};i.bfs({roots:n,directed:e.directed,visit:function(n,l,e,t,u){var r=n[0],i=r.id();_(r,u),b[i]=!0}});for(var x=[],E=0;E<r.length;E++){var k=r[E];b[k.id()]||x.push(k)}var C=function(n){for(var l=y[n],e=0;e<l.length;e++){var t=l[e];null!=t?Or(t,{depth:n,index:e}):(l.splice(e,1),e--)}},S=function(){for(var n=0;n<y.length;n++)C(n)},I=function(n,l){for(var e=Dr(n),t=n.incomers().filter(function(n){return n.isNode()&&u.has(n)}),r=-1,i=n.id(),o=0;o<t.length;o++){var a=t[o],s=Dr(a);r=Math.max(r,s.depth)}return e.depth<=r&&(l[i]?null:(function(n,l){var e=Dr(n),t=e.depth,u=e.index;y[t][u]=null,_(n,l)}(n,r+1),l[i]=!0,!0))};if(o&&a){var N=[],D={},O=function(n){return N.push(n)};for(r.forEach(function(n){return N.push(n)});N.length>0;){var A=N.shift(),P=I(A,D);if(P)A.outgoers().filter(function(n){return n.isNode()&&u.has(n)}).forEach(O);else if(null===P){cn("Detected double maximal shift for node `"+A.id()+"`.  Bailing maximal adjustment due to cycle.  Use `options.maximal: true` only on DAGs.");break}}}S();var M=0;if(e.avoidOverlap)for(var L=0;L<r.length;L++){var R=r[L].layoutDimensions(e),F=R.w,j=R.h;M=Math.max(M,F,j)}for(var U={},z=function(n){if(U[n.id()])return U[n.id()];for(var l=Dr(n).depth,e=n.neighborhood(),t=0,u=0,i=0;i<e.length;i++){var o=e[i];if(!o.isEdge()&&!o.isParent()&&r.has(o)){var a=Dr(o),s=a.index,c=a.depth;if(null!=s&&null!=c){var h=y[c].length;c<l&&(t+=s/(h-1),u++)}}}return t/=u=Math.max(1,u),0===u&&(t=0),U[n.id()]=t,t},q=function(n,l){var e=z(n)-z(l);return 0===e?B(n.id(),l.id()):e},V=0;V<y.length;V++)y[V].sort(q),C(V);for(var H=[],G=0;G<x.length;G++)H.push(x[G]);y.unshift(H),S();for(var Y=0,W=0;W<y.length;W++)Y=Math.max(y[W].length,Y);var X=s.x1+s.w/2,K=s.x1+s.h/2,$=y.reduce(function(n,l){return Math.max(n,l.length)},0);return r.layoutPositions(this,e,function(n){var l=Dr(n),t=l.depth,u=l.index,r=y[t].length,i=Math.max(s.w/((e.grid?$:r)+1),M),o=Math.max(s.h/(y.length+1),M),a=Math.min(s.w/2/y.length,s.h/2/y.length);if(a=Math.max(a,M),e.circle){var c=a*t+a-(y.length>0&&y[0].length<=3?a/2:0),h=2*Math.PI/y[t].length*u;return 0===t&&1===y[0].length&&(c=1),{x:X+c*Math.cos(h),y:K+c*Math.sin(h)}}return{x:X+(u+1-(r+1)/2)*i,y:(t+1)*o}}),this};var Pr={fit:!0,padding:30,boundingBox:void 0,avoidOverlap:!0,nodeDimensionsIncludeLabels:!1,spacingFactor:void 0,radius:void 0,startAngle:1.5*Math.PI,sweep:void 0,clockwise:!0,sort:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(n,l){return!0},ready:void 0,stop:void 0,transform:function(n,l){return l}};function Mr(n){this.options=j({},Pr,n)}Mr.prototype.run=function(){var n=this.options,l=n,e=n.cy,t=l.eles,u=void 0!==l.counterclockwise?!l.counterclockwise:l.clockwise,r=t.nodes().not(":parent");l.sort&&(r=r.sort(l.sort));for(var i,o=$n(l.boundingBox?l.boundingBox:{x1:0,y1:0,w:e.width(),h:e.height()}),a=o.x1+o.w/2,s=o.y1+o.h/2,c=(void 0===l.sweep?2*Math.PI-2*Math.PI/r.length:l.sweep)/Math.max(1,r.length-1),h=0,d=0;d<r.length;d++){var f=r[d].layoutDimensions(l),p=f.w,g=f.h;h=Math.max(h,p,g)}if(i=x(l.radius)?l.radius:r.length<=1?0:Math.min(o.h,o.w)/2-h,r.length>1&&l.avoidOverlap){h*=1.75;var v=Math.cos(c)-Math.cos(0),y=Math.sin(c)-Math.sin(0),m=Math.sqrt(h*h/(v*v+y*y));i=Math.max(m,i)}return r.layoutPositions(this,l,function(n,e){var t=l.startAngle+e*c*(u?1:-1),r=i*Math.cos(t),o=i*Math.sin(t);return{x:a+r,y:s+o}}),this};var Lr,Rr={fit:!0,padding:30,startAngle:1.5*Math.PI,sweep:void 0,clockwise:!0,equidistant:!1,minNodeSpacing:10,boundingBox:void 0,avoidOverlap:!0,nodeDimensionsIncludeLabels:!1,height:void 0,width:void 0,spacingFactor:void 0,concentric:function(n){return n.degree()},levelWidth:function(n){return n.maxDegree()/4},animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(n,l){return!0},ready:void 0,stop:void 0,transform:function(n,l){return l}};function Fr(n){this.options=j({},Rr,n)}Fr.prototype.run=function(){for(var n=this.options,l=n,e=void 0!==l.counterclockwise?!l.counterclockwise:l.clockwise,t=n.cy,u=l.eles.nodes().not(":parent"),r=$n(l.boundingBox?l.boundingBox:{x1:0,y1:0,w:t.width(),h:t.height()}),i=r.x1+r.w/2,o=r.y1+r.h/2,a=[],s=0,c=0;c<u.length;c++){var h,d=u[c];h=l.concentric(d),a.push({value:h,node:d}),d._private.scratch.concentric=h}u.updateStyle();for(var f=0;f<u.length;f++){var p=u[f].layoutDimensions(l);s=Math.max(s,p.w,p.h)}a.sort(function(n,l){return l.value-n.value});for(var g=l.levelWidth(u),v=[[]],y=v[0],m=0;m<a.length;m++){var b=a[m];if(y.length>0)Math.abs(y[0].value-b.value)>=g&&(y=[],v.push(y));y.push(b)}var w=s+l.minNodeSpacing;if(!l.avoidOverlap){var _=v.length>0&&v[0].length>1,x=(Math.min(r.w,r.h)/2-w)/(v.length+_?1:0);w=Math.min(w,x)}for(var E=0,T=0;T<v.length;T++){var k=v[T],C=void 0===l.sweep?2*Math.PI-2*Math.PI/k.length:l.sweep,S=k.dTheta=C/Math.max(1,k.length-1);if(k.length>1&&l.avoidOverlap){var I=Math.cos(S)-Math.cos(0),N=Math.sin(S)-Math.sin(0),D=Math.sqrt(w*w/(I*I+N*N));E=Math.max(D,E)}k.r=E,E+=w}if(l.equidistant){for(var O=0,A=0,P=0;P<v.length;P++){var M=v[P].r-A;O=Math.max(O,M)}A=0;for(var L=0;L<v.length;L++){var R=v[L];0===L&&(A=R.r),R.r=A,A+=O}}for(var F={},B=0;B<v.length;B++)for(var j=v[B],U=j.dTheta,z=j.r,q=0;q<j.length;q++){var V=j[q],H=l.startAngle+(e?1:-1)*U*q,G={x:i+z*Math.cos(H),y:o+z*Math.sin(H)};F[V.node.id()]=G}return u.layoutPositions(this,l,function(n){var l=n.id();return F[l]}),this};var Br={ready:function(){},stop:function(){},animate:!0,animationEasing:void 0,animationDuration:void 0,animateFilter:function(n,l){return!0},animationThreshold:250,refresh:20,fit:!0,padding:30,boundingBox:void 0,nodeDimensionsIncludeLabels:!1,randomize:!1,componentSpacing:40,nodeRepulsion:function(n){return 2048},nodeOverlap:4,idealEdgeLength:function(n){return 32},edgeElasticity:function(n){return 32},nestingFactor:1.2,gravity:1,numIter:1e3,initialTemp:1e3,coolingFactor:.99,minTemp:1,weaver:!1};function jr(n){this.options=j({},Br,n),this.options.layout=this}jr.prototype.run=function(){var n=this.options,l=n.cy,e=this,t=this.thread,u=n.weaver?n.weaver.Thread:null,r={listeners:[],on:function(n,l){return this.listeners.push({event:n,callback:l}),this},trigger:function(n){m(n)&&(n={type:n});var l=function(l){l.callback(n)};return this.listeners.filter(function(l){return l.event===n.type}).forEach(l),this},pass:function(n){return this.pass=n,this},run:function(n){var l=this.pass;return new Ne(function(e){e(n(l))})},stop:function(){return this},stopped:function(){return!0}};t&&!t.stopped()||(t=this.thread=u?new u:r),e.stopped=!1,!0!==n.animate&&!1!==n.animate||e.emit({type:"layoutstart",layout:e}),Lr=!0===n.debug;var i=Ur(l,e,n);Lr&&(void 0)(i),n.randomize&&Vr(i,l);var o=Date.now(),a=!1,s=function(e){e=e||{},a&&!e.next||!e.force&&Date.now()-o<n.animationThreshold||(a=!0,W(function(){Hr(i,l,n),!0===n.fit&&l.fit(n.padding),a=!1,e.next&&e.next()}))};t.on("message",function(n){var l=n.message;i.layoutNodes=l,s()}),t.pass({layoutInfo:i,options:{animate:n.animate,refresh:n.refresh,componentSpacing:n.componentSpacing,nodeOverlap:n.nodeOverlap,nestingFactor:n.nestingFactor,gravity:n.gravity,numIter:n.numIter,initialTemp:n.initialTemp,coolingFactor:n.coolingFactor,minTemp:n.minTemp}}).run(function(n){var l,e,t=n.layoutInfo,u=n.options,i=function(n,l){for(var e=0;e<n.graphSet.length;e++)for(var t=n.graphSet[e],u=t.length,r=0;r<u;r++)for(var i=n.layoutNodes[n.idToIndex[t[r]]],o=r+1;o<u;o++){var s=n.layoutNodes[n.idToIndex[t[o]]];a(i,s,n,l)}},o=function(n){return-n+2*n*Math.random()},a=function(n,l,e,t){if(n.cmptId===l.cmptId||e.isCompound){var u=l.positionX-n.positionX,r=l.positionY-n.positionY;0===u&&0===r&&(u=o(1),r=o(1));var i=s(n,l,u,r);if(i>0)var a=(d=t.nodeOverlap*i)*u/(m=Math.sqrt(u*u+r*r)),h=d*r/m;else{var d,f=c(n,u,r),p=c(l,-1*u,-1*r),g=p.x-f.x,v=p.y-f.y,y=g*g+v*v,m=Math.sqrt(y);a=(d=(n.nodeRepulsion+l.nodeRepulsion)/y)*g/m,h=d*v/m}n.isLocked||(n.offsetX-=a,n.offsetY-=h),l.isLocked||(l.offsetX+=a,l.offsetY+=h)}},s=function(n,l,e,t){if(e>0)var u=n.maxX-l.minX;else u=l.maxX-n.minX;if(t>0)var r=n.maxY-l.minY;else r=l.maxY-n.minY;return u>=0&&r>=0?Math.sqrt(u*u+r*r):0},c=function(n,l,e){var t=n.positionX,u=n.positionY,r=n.height||1,i=n.width||1,o=e/l,a=r/i,s={};return 0===l&&0<e?(s.x=t,s.y=u+r/2,s):0===l&&0>e?(s.x=t,s.y=u+r/2,s):0<l&&-1*a<=o&&o<=a?(s.x=t+i/2,s.y=u+i*e/2/l,s):0>l&&-1*a<=o&&o<=a?(s.x=t-i/2,s.y=u-i*e/2/l,s):0<e&&(o<=-1*a||o>=a)?(s.x=t+r*l/2/e,s.y=u+r/2,s):0>e&&(o<=-1*a||o>=a)?(s.x=t-r*l/2/e,s.y=u-r/2,s):s},h=function(n,l){for(var e=0;e<n.edgeSize;e++){var t=n.layoutEdges[e],u=n.idToIndex[t.sourceId],r=n.layoutNodes[u],i=n.idToIndex[t.targetId],o=n.layoutNodes[i],a=o.positionX-r.positionX,s=o.positionY-r.positionY;if(0!==a||0!==s){var h=c(r,a,s),d=c(o,-1*a,-1*s),f=d.x-h.x,p=d.y-h.y,g=Math.sqrt(f*f+p*p),v=Math.pow(t.idealLength-g,2)/t.elasticity;if(0!==g)var y=v*f/g,m=v*p/g;else y=0,m=0;r.isLocked||(r.offsetX+=y,r.offsetY+=m),o.isLocked||(o.offsetX-=y,o.offsetY-=m)}}},d=function(n,l){for(var e=0;e<n.graphSet.length;e++){var t=n.graphSet[e],u=t.length;if(0===e)var r=n.clientHeight/2,i=n.clientWidth/2;else{var o=n.layoutNodes[n.idToIndex[t[0]]],a=n.layoutNodes[n.idToIndex[o.parentId]];r=a.positionX,i=a.positionY}for(var s=0;s<u;s++){var c=n.layoutNodes[n.idToIndex[t[s]]];if(!c.isLocked){var h=r-c.positionX,d=i-c.positionY,f=Math.sqrt(h*h+d*d);if(f>1){var p=l.gravity*h/f,g=l.gravity*d/f;c.offsetX+=p,c.offsetY+=g}}}}},f=function(n,l){var e=[],t=0,u=-1;for(e.push.apply(e,n.graphSet[0]),u+=n.graphSet[0].length;t<=u;){var r=e[t++],i=n.idToIndex[r],o=n.layoutNodes[i],a=o.children;if(0<a.length&&!o.isLocked){for(var s=o.offsetX,c=o.offsetY,h=0;h<a.length;h++){var d=n.layoutNodes[n.idToIndex[a[h]]];d.offsetX+=s,d.offsetY+=c,e[++u]=a[h]}o.offsetX=0,o.offsetY=0}}},p=function(n,l){for(var e=0;e<n.nodeSize;e++){0<(u=n.layoutNodes[e]).children.length&&(u.maxX=void 0,u.minX=void 0,u.maxY=void 0,u.minY=void 0)}for(e=0;e<n.nodeSize;e++){if(!(0<(u=n.layoutNodes[e]).children.length||u.isLocked)){var t=g(u.offsetX,u.offsetY,n.temperature);u.positionX+=t.x,u.positionY+=t.y,u.offsetX=0,u.offsetY=0,u.minX=u.positionX-u.width,u.maxX=u.positionX+u.width,u.minY=u.positionY-u.height,u.maxY=u.positionY+u.height,v(u,n)}}for(e=0;e<n.nodeSize;e++){var u;0<(u=n.layoutNodes[e]).children.length&&!u.isLocked&&(u.positionX=(u.maxX+u.minX)/2,u.positionY=(u.maxY+u.minY)/2,u.width=u.maxX-u.minX,u.height=u.maxY-u.minY)}},g=function(n,l,e){var t=Math.sqrt(n*n+l*l);if(t>e)var u={x:e*n/t,y:e*l/t};else u={x:n,y:l};return u},v=function n(l,e){var t=l.parentId;if(null!=t){var u=e.layoutNodes[e.idToIndex[t]],r=!1;return(null==u.maxX||l.maxX+u.padRight>u.maxX)&&(u.maxX=l.maxX+u.padRight,r=!0),(null==u.minX||l.minX-u.padLeft<u.minX)&&(u.minX=l.minX-u.padLeft,r=!0),(null==u.maxY||l.maxY+u.padBottom>u.maxY)&&(u.maxY=l.maxY+u.padBottom,r=!0),(null==u.minY||l.minY-u.padTop<u.minY)&&(u.minY=l.minY-u.padTop,r=!0),r?n(u,e):void 0}},y=function(n){return function(n,l,e){i(n,l),h(n,l),d(n,l),f(n,l),p(n,l)}(t,u),t.temperature=t.temperature*u.coolingFactor,!(t.temperature<u.minTemp)},m=0;do{for(var b=0;(b<u.refresh||0===u.refresh)&&m<u.numIter;){var w;if(!(w=y()))break;b++,m++}!0===u.animate&&(l=t.layoutNodes,e=void 0,e={type:"message",message:l},r.trigger(e))}while(w&&m+1<u.numIter);return function(n,l){for(var e=t.layoutNodes,u=[],r=0;r<e.length;r++){var i=e[r],o=i.cmptId;(u[o]=u[o]||[]).push(i)}var a=0;for(r=0;r<u.length;r++)if(v=u[r]){v.x1=1/0,v.x2=-1/0,v.y1=1/0,v.y2=-1/0;for(var s=0;s<v.length;s++){var c=v[s];v.x1=Math.min(v.x1,c.positionX-c.width/2),v.x2=Math.max(v.x2,c.positionX+c.width/2),v.y1=Math.min(v.y1,c.positionY-c.height/2),v.y2=Math.max(v.y2,c.positionY+c.height/2)}v.w=v.x2-v.x1,v.h=v.y2-v.y1,a+=v.w*v.h}u.sort(function(n,l){return l.w*l.h-n.w*n.h});var h=0,d=0,f=0,p=0,g=Math.sqrt(a)*t.clientWidth/t.clientHeight;for(r=0;r<u.length;r++){var v;if(v=u[r]){for(s=0;s<v.length;s++)(c=v[s]).isLocked||(c.positionX+=h,c.positionY+=d);h+=v.w+l.componentSpacing,f+=v.w+l.componentSpacing,p=Math.max(p,v.h),f>g&&(d+=p+l.componentSpacing,h=0,f=0,p=0)}}}(0,u),t}).then(function(n){i.layoutNodes=n.layoutNodes,t.stop(),c()});var c=function(){!0===n.animate||!1===n.animate?s({force:!0,next:function(){e.one("layoutstop",n.stop),e.emit({type:"layoutstop",layout:e})}}):n.eles.nodes().layoutPositions(e,n,function(n){var l=i.layoutNodes[i.idToIndex[n.data("id")]];return{x:l.positionX,y:l.positionY}})};return this},jr.prototype.stop=function(){return this.stopped=!0,this.thread&&this.thread.stop(),this.emit("layoutstop"),this},jr.prototype.destroy=function(){return this.thread&&this.thread.stop(),this};var Ur=function(n,l,e){for(var t=e.eles.edges(),u=e.eles.nodes(),r={isCompound:n.hasCompoundNodes(),layoutNodes:[],idToIndex:{},nodeSize:u.size(),graphSet:[],indexToGraph:[],layoutEdges:[],edgeSize:t.size(),temperature:e.initialTemp,clientWidth:n.width(),clientHeight:n.width(),boundingBox:$n(e.boundingBox?e.boundingBox:{x1:0,y1:0,w:n.width(),h:n.height()})},i=e.eles.components(),o={},a=0;a<i.length;a++)for(var s=i[a],c=0;c<s.length;c++){o[s[c].id()]=a}for(a=0;a<r.nodeSize;a++){var h=(v=u[a]).layoutDimensions(e);(P={}).isLocked=v.locked(),P.id=v.data("id"),P.parentId=v.data("parent"),P.cmptId=o[v.id()],P.children=[],P.positionX=v.position("x"),P.positionY=v.position("y"),P.offsetX=0,P.offsetY=0,P.height=h.w,P.width=h.h,P.maxX=P.positionX+P.width/2,P.minX=P.positionX-P.width/2,P.maxY=P.positionY+P.height/2,P.minY=P.positionY-P.height/2,P.padLeft=parseFloat(v.style("padding")),P.padRight=parseFloat(v.style("padding")),P.padTop=parseFloat(v.style("padding")),P.padBottom=parseFloat(v.style("padding")),P.nodeRepulsion=b(e.nodeRepulsion)?e.nodeRepulsion(v):e.nodeRepulsion,r.layoutNodes.push(P),r.idToIndex[P.id]=a}var d=[],f=0,p=-1,g=[];for(a=0;a<r.nodeSize;a++){var v,y=(v=r.layoutNodes[a]).parentId;null!=y?r.layoutNodes[r.idToIndex[y]].children.push(v.id):(d[++p]=v.id,g.push(v.id))}for(r.graphSet.push(g);f<=p;){var m=d[f++],w=r.idToIndex[m],_=r.layoutNodes[w].children;if(_.length>0){r.graphSet.push(_);for(a=0;a<_.length;a++)d[++p]=_[a]}}for(a=0;a<r.graphSet.length;a++){var x=r.graphSet[a];for(c=0;c<x.length;c++){var E=r.idToIndex[x[c]];r.indexToGraph[E]=a}}for(a=0;a<r.edgeSize;a++){var T=t[a],k={};k.id=T.data("id"),k.sourceId=T.data("source"),k.targetId=T.data("target");var C=b(e.idealEdgeLength)?e.idealEdgeLength(T):e.idealEdgeLength,S=b(e.edgeElasticity)?e.edgeElasticity(T):e.edgeElasticity,I=r.idToIndex[k.sourceId],N=r.idToIndex[k.targetId];if(r.indexToGraph[I]!=r.indexToGraph[N]){for(var D=zr(k.sourceId,k.targetId,r),O=r.graphSet[D],A=0,P=r.layoutNodes[I];-1===O.indexOf(P.id);)P=r.layoutNodes[r.idToIndex[P.parentId]],A++;for(P=r.layoutNodes[N];-1===O.indexOf(P.id);)P=r.layoutNodes[r.idToIndex[P.parentId]],A++;C*=A*e.nestingFactor}k.idealLength=C,k.elasticity=S,r.layoutEdges.push(k)}return r},zr=function(n,l,e){var t=qr(n,l,0,e);return 2>t.count?0:t.graph},qr=function n(l,e,t,u){var r=u.graphSet[t];if(-1<r.indexOf(l)&&-1<r.indexOf(e))return{count:2,graph:t};for(var i=0,o=0;o<r.length;o++){var a=r[o],s=u.idToIndex[a],c=u.layoutNodes[s].children;if(0!==c.length){var h=n(l,e,u.indexToGraph[u.idToIndex[c[0]]],u);if(0!==h.count){if(1!==h.count)return h;if(2===++i)break}}}return{count:i,graph:t}},Vr=function(n,l){for(var e=n.clientWidth,t=n.clientHeight,u=0;u<n.nodeSize;u++){var r=n.layoutNodes[u];0!==r.children.length||r.isLocked||(r.positionX=Math.random()*e,r.positionY=Math.random()*t)}},Hr=function(n,l,e){var t=e.layout,u=e.eles.nodes(),r=n.boundingBox,i={x1:1/0,x2:-1/0,y1:1/0,y2:-1/0};e.boundingBox&&(u.forEach(function(l){var e=n.layoutNodes[n.idToIndex[l.data("id")]];i.x1=Math.min(i.x1,e.positionX),i.x2=Math.max(i.x2,e.positionX),i.y1=Math.min(i.y1,e.positionY),i.y2=Math.max(i.y2,e.positionY)}),i.w=i.x2-i.x1,i.h=i.y2-i.y1),u.positions(function(l,t){var u=n.layoutNodes[n.idToIndex[l.data("id")]];if(e.boundingBox){var o=(u.positionX-i.x1)/i.w,a=(u.positionY-i.y1)/i.h;return{x:r.x1+o*r.w,y:r.y1+a*r.h}}return{x:u.positionX,y:u.positionY}}),!0!==n.ready&&(n.ready=!0,t.one("layoutready",e.ready),t.emit({type:"layoutready",layout:this}))},Gr={fit:!0,padding:30,boundingBox:void 0,avoidOverlap:!0,avoidOverlapPadding:10,nodeDimensionsIncludeLabels:!1,spacingFactor:void 0,condense:!1,rows:void 0,cols:void 0,position:function(n){},sort:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(n,l){return!0},ready:void 0,stop:void 0,transform:function(n,l){return l}};function Yr(n){this.options=j({},Gr,n)}Yr.prototype.run=function(){var n=this.options,l=n,e=n.cy,t=l.eles.nodes().not(":parent");l.sort&&(t=t.sort(l.sort));var u=$n(l.boundingBox?l.boundingBox:{x1:0,y1:0,w:e.width(),h:e.height()});if(0===u.h||0===u.w)t.layoutPositions(this,l,function(n){return{x:u.x1,y:u.y1}});else{var r=t.size(),i=Math.sqrt(r*u.h/u.w),o=Math.round(i),a=Math.round(u.w/u.h*i),s=function(n){if(null==n)return Math.min(o,a);Math.min(o,a)==o?o=n:a=n},c=function(n){if(null==n)return Math.max(o,a);Math.max(o,a)==o?o=n:a=n},h=l.rows,d=null!=l.cols?l.cols:l.columns;if(null!=h&&null!=d)o=h,a=d;else if(null!=h&&null==d)o=h,a=Math.ceil(r/o);else if(null==h&&null!=d)a=d,o=Math.ceil(r/a);else if(a*o>r){var f=s(),p=c();(f-1)*p>=r?s(f-1):(p-1)*f>=r&&c(p-1)}else for(;a*o<r;){var g=s(),v=c();(v+1)*g>=r?c(v+1):s(g+1)}var y=u.w/a,m=u.h/o;if(l.condense&&(y=0,m=0),l.avoidOverlap)for(var b=0;b<t.length;b++){var w=t[b],_=w._private.position;null!=_.x&&null!=_.y||(_.x=0,_.y=0);var x=w.layoutDimensions(l),E=l.avoidOverlapPadding,T=x.w+E,k=x.h+E;y=Math.max(y,T),m=Math.max(m,k)}for(var C={},S=function(n,l){return!!C["c-"+n+"-"+l]},I=function(n,l){C["c-"+n+"-"+l]=!0},N=0,D=0,O=function(){++D>=a&&(D=0,N++)},A={},P=0;P<t.length;P++){var M=t[P],L=l.position(M);if(L&&(void 0!==L.row||void 0!==L.col)){var R={row:L.row,col:L.col};if(void 0===R.col)for(R.col=0;S(R.row,R.col);)R.col++;else if(void 0===R.row)for(R.row=0;S(R.row,R.col);)R.row++;A[M.id()]=R,I(R.row,R.col)}}t.layoutPositions(this,l,function(n,l){var e,t;if(n.locked()||n.isParent())return!1;var r=A[n.id()];if(r)e=r.col*y+y/2+u.x1,t=r.row*m+m/2+u.y1;else{for(;S(N,D);)O();e=D*y+y/2+u.x1,t=N*m+m/2+u.y1,I(N,D),O()}return{x:e,y:t}})}return this};var Wr={ready:function(){},stop:function(){}};function Xr(n){this.options=j({},Wr,n)}Xr.prototype.run=function(){var n=this.options,l=n.eles;n.cy;return this.emit("layoutstart"),l.nodes().positions(function(){return{x:0,y:0}}),this.one("layoutready",n.ready),this.emit("layoutready"),this.one("layoutstop",n.stop),this.emit("layoutstop"),this},Xr.prototype.stop=function(){return this};var Kr={positions:void 0,zoom:void 0,pan:void 0,fit:!0,padding:30,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(n,l){return!0},ready:void 0,stop:void 0,transform:function(n,l){return l}};function $r(n){this.options=j({},Kr,n)}$r.prototype.run=function(){var n=this.options,l=n.eles.nodes(),e=b(n.positions);return l.layoutPositions(this,n,function(l,t){var u=function(l){if(null==n.positions)return null;if(e)return n.positions(l);var t=n.positions[l._private.data.id];return null==t?null:t}(l);return!l.locked()&&null!=u&&u}),this};var Zr={fit:!0,padding:30,boundingBox:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(n,l){return!0},ready:void 0,stop:void 0,transform:function(n,l){return l}};function Qr(n){this.options=j({},Zr,n)}Qr.prototype.run=function(){var n=this.options,l=n.cy,e=n.eles.nodes().not(":parent"),t=$n(n.boundingBox?n.boundingBox:{x1:0,y1:0,w:l.width(),h:l.height()});return e.layoutPositions(this,n,function(n,l){return{x:t.x1+Math.round(Math.random()*t.w),y:t.y1+Math.round(Math.random()*t.h)}}),this};var Jr=[{name:"breadthfirst",impl:Ar},{name:"circle",impl:Mr},{name:"concentric",impl:Fr},{name:"cose",impl:jr},{name:"grid",impl:Yr},{name:"null",impl:Xr},{name:"preset",impl:$r},{name:"random",impl:Qr}];function ni(n){this.options=n,this.notifications=0}var li=function(){};ni.prototype={recalculateRenderedStyle:li,notify:function(){this.notifications++},init:li,isHeadless:function(){return!0}};var ei={arrowShapeWidth:.3,registerArrowShapes:function(){var n=this.arrowShapes={},l=this,e=function(n,l,e,t,u,r,i){var o=u.x-e/2-i,a=u.x+e/2+i,s=u.y-e/2-i,c=u.y+e/2+i;return o<=n&&n<=a&&s<=l&&l<=c},t=function(n,l,e,t,u){var r=n*Math.cos(t)-l*Math.sin(t),i=(n*Math.sin(t)+l*Math.cos(t))*e;return{x:r*e+u.x,y:i+u.y}},u=function(n,l,e,u){for(var r=[],i=0;i<n.length;i+=2){var o=n[i],a=n[i+1];r.push(t(o,a,l,e,u))}return r},r=function(n){for(var l=[],e=0;e<n.length;e++){var t=n[e];l.push(t.x,t.y)}return l},i=function(n){return n.pstyle("width").pfValue*n.pstyle("arrow-scale").pfValue*2},o=function(t,o){m(o)&&(o=n[o]),n[t]=j({name:t,points:[-.15,-.3,.15,-.3,.15,.3,-.15,.3],collide:function(n,l,e,t,i,o){var a=r(u(this.points,e+2*o,t,i));return sl(n,l,a)},roughCollide:e,draw:function(n,e,t,r){var i=u(this.points,e,t,r);l.arrowShapeImpl("polygon")(n,i)},spacing:function(n){return 0},gap:i},o)};o("none",{collide:rn,roughCollide:rn,draw:an,spacing:on,gap:on}),o("triangle",{points:[-.15,-.3,0,0,.15,-.3]}),o("arrow","triangle"),o("triangle-backcurve",{points:n.triangle.points,controlPoint:[0,-.15],roughCollide:e,draw:function(n,e,r,i,o){var a=u(this.points,e,r,i),s=this.controlPoint,c=t(s[0],s[1],e,r,i);l.arrowShapeImpl(this.name)(n,a,c)},gap:function(n){return.8*i(n)}}),o("triangle-tee",{points:[0,0,.15,-.3,-.15,-.3,0,0],pointsTee:[-.15,-.4,-.15,-.5,.15,-.5,.15,-.4],collide:function(n,l,e,t,i,o,a){var s=r(u(this.points,e+2*a,t,i)),c=r(u(this.pointsTee,e+2*a,t,i));return sl(n,l,s)||sl(n,l,c)},draw:function(n,e,t,r,i){var o=u(this.points,e,t,r),a=u(this.pointsTee,e,t,r);l.arrowShapeImpl(this.name)(n,o,a)}}),o("triangle-cross",{points:[0,0,.15,-.3,-.15,-.3,0,0],baseCrossLinePts:[-.15,-.4,-.15,-.4,.15,-.4,.15,-.4],crossLinePts:function(n,l){var e=this.baseCrossLinePts.slice(),t=l/n;return e[3]=e[3]-t,e[5]=e[5]-t,e},collide:function(n,l,e,t,i,o,a){var s=r(u(this.points,e+2*a,t,i)),c=r(u(this.crossLinePts(e,o),e+2*a,t,i));return sl(n,l,s)||sl(n,l,c)},draw:function(n,e,t,r,i){var o=u(this.points,e,t,r),a=u(this.crossLinePts(e,i),e,t,r);l.arrowShapeImpl(this.name)(n,o,a)}}),o("vee",{points:[-.15,-.3,0,0,.15,-.3,0,-.15],gap:function(n){return.525*i(n)}}),o("circle",{radius:.15,collide:function(n,l,e,t,u,r,i){var o=u;return Math.pow(o.x-n,2)+Math.pow(o.y-l,2)<=Math.pow((e+2*i)*this.radius,2)},draw:function(n,e,t,u,r){l.arrowShapeImpl(this.name)(n,u.x,u.y,this.radius*e)},spacing:function(n){return l.getArrowWidth(n.pstyle("width").pfValue,n.pstyle("arrow-scale").value)*this.radius}}),o("tee",{points:[-.15,0,-.15,-.1,.15,-.1,.15,0],spacing:function(n){return 1},gap:function(n){return 1}}),o("square",{points:[-.15,0,.15,0,.15,-.3,-.15,-.3]}),o("diamond",{points:[-.15,-.15,0,-.3,.15,-.15,0,0],gap:function(n){return n.pstyle("width").pfValue*n.pstyle("arrow-scale").value}}),o("chevron",{points:[0,0,-.15,-.15,-.1,-.2,0,-.1,.1,-.2,.15,-.15],gap:function(n){return.95*n.pstyle("width").pfValue*n.pstyle("arrow-scale").value}})}},ti={projectIntoViewport:function(n,l){var e=this.cy,t=this.findContainerClientCoords(),u=t[0],r=t[1],i=t[4],o=e.pan(),a=e.zoom();return[((n-u)/i-o.x)/a,((l-r)/i-o.y)/a]},findContainerClientCoords:function(){if(this.containerBB)return this.containerBB;var n=this.container,l=n.getBoundingClientRect(),e=h.getComputedStyle(n),t=function(n){return parseFloat(e.getPropertyValue(n))},u=t("padding-left"),r=t("padding-right"),i=t("padding-top"),o=t("padding-bottom"),a=t("border-left-width"),s=t("border-right-width"),c=t("border-top-width"),d=(t("border-bottom-width"),n.clientWidth),f=n.clientHeight,p=u+r,g=i+o,v=a+s,y=l.width/(d+v),m=d-p,b=f-g,w=l.left+u+a,_=l.top+i+c;return this.containerBB=[w,_,m,b,y]},invalidateContainerClientCoordsCache:function(){this.containerBB=null},findNearestElement:function(n,l,e,t){return this.findNearestElements(n,l,e,t)[0]},findNearestElements:function(n,l,e,t){var u,r,i=this,o=this,a=o.getCachedZSortedEles(),s=[],c=o.cy.zoom(),h=o.cy.hasCompoundNodes(),d=(t?24:8)/c,f=(t?8:2)/c,p=(t?8:2)/c,g=1/0;function v(n,l){if(n.isNode()){if(r)return;r=n,s.push(n)}if(n.isEdge()&&(null==l||l<g))if(u){if(u.pstyle("z-compound-depth").value===n.pstyle("z-compound-depth").value&&u.pstyle("z-compound-depth").value===n.pstyle("z-compound-depth").value)for(var e=0;e<s.length;e++)if(s[e].isEdge()){s[e]=n,u=n,g=null!=l?l:g;break}}else s.push(n),u=n,g=null!=l?l:g}function y(e){var t=e.outerWidth()+2*f,u=e.outerHeight()+2*f,r=t/2,a=u/2,s=e.position();if(s.x-r<=n&&n<=s.x+r&&s.y-a<=l&&l<=s.y+a&&o.nodeShapes[i.getNodeShape(e)].checkPoint(n,l,0,t,u,s.x,s.y))return v(e,0),!0}function m(e){var t,u=e._private,r=u.rscratch,a=e.pstyle("width").pfValue,c=e.pstyle("arrow-scale").value,f=a/2+d,p=f*f,g=2*f,m=u.source,b=u.target;if("segments"===r.edgeType||"straight"===r.edgeType||"haystack"===r.edgeType){for(var w=r.allpts,_=0;_+3<w.length;_+=2)if(rl(n,l,w[_],w[_+1],w[_+2],w[_+3],g)&&p>(t=al(n,l,w[_],w[_+1],w[_+2],w[_+3])))return v(e,t),!0}else if("bezier"===r.edgeType||"multibezier"===r.edgeType||"self"===r.edgeType||"compound"===r.edgeType)for(w=r.allpts,_=0;_+5<r.allpts.length;_+=4)if(il(n,l,w[_],w[_+1],w[_+2],w[_+3],w[_+4],w[_+5],g)&&p>(t=ol(n,l,w[_],w[_+1],w[_+2],w[_+3],w[_+4],w[_+5])))return v(e,t),!0;m=m||u.source,b=b||u.target;var x=i.getArrowWidth(a,c),E=[{name:"source",x:r.arrowStartX,y:r.arrowStartY,angle:r.srcArrowAngle},{name:"target",x:r.arrowEndX,y:r.arrowEndY,angle:r.tgtArrowAngle},{name:"mid-source",x:r.midX,y:r.midY,angle:r.midsrcArrowAngle},{name:"mid-target",x:r.midX,y:r.midY,angle:r.midtgtArrowAngle}];for(_=0;_<E.length;_++){var T=E[_],k=o.arrowShapes[e.pstyle(T.name+"-arrow-shape").value],C=e.pstyle("width").pfValue;if(k.roughCollide(n,l,x,T.angle,{x:T.x,y:T.y},C,d)&&k.collide(n,l,x,T.angle,{x:T.x,y:T.y},C,d))return v(e),!0}h&&s.length>0&&(y(m),y(b))}function b(n,l,e){return mn(n,l,e)}function w(e,t){var u,r=e._private,i=p;u=t?t+"-":"";var o=e.pstyle(u+"label").value;if("yes"===e.pstyle("text-events").strValue&&o){var a=r.rstyle,s=e.pstyle("text-border-width").pfValue,c=e.pstyle("text-background-padding").pfValue,h=b(a,"labelWidth",t)+s+2*i+2*c,d=b(a,"labelHeight",t)+s+2*i+2*c,f=b(a,"labelX",t),g=b(a,"labelY",t),y=b(r.rscratch,"labelAngle",t),m=f-h/2,w=f+h/2,_=g-d/2,x=g+d/2;if(y){var E=Math.cos(y),T=Math.sin(y),k=function(n,l){return{x:(n-=f)*E-(l-=g)*T+f,y:n*T+l*E+g}},C=k(m,_),S=k(m,x),I=k(w,_),N=k(w,x),D=[C.x,C.y,I.x,I.y,N.x,N.y,S.x,S.y];if(sl(n,l,D))return v(e),!0}else{if(el({w:h,h:d,x1:m,x2:w,y1:_,y2:x},n,l))return v(e),!0}}}e&&(a=a.interactive);for(var _=a.length-1;_>=0;_--){var x=a[_];x.isNode()?y(x)||w(x):m(x)||w(x)||w(x,"source")||w(x,"target")}return s},getAllInBox:function(n,l,e,t){for(var u,r,i=this.getCachedZSortedEles().interactive,o=[],a=Math.min(n,e),s=Math.max(n,e),c=Math.min(l,t),h=Math.max(l,t),d=$n({x1:n=a,y1:l=c,x2:e=s,y2:t=h}),f=0;f<i.length;f++){var p=i[f];if(p.isNode()){var g=p,v=g.boundingBox({includeNodes:!0,includeEdges:!1,includeLabels:!1});ll(d,v)&&!tl(v,d)&&o.push(g)}else{var y=p,m=y._private,b=m.rscratch;if(null!=b.startX&&null!=b.startY&&!el(d,b.startX,b.startY))continue;if(null!=b.endX&&null!=b.endY&&!el(d,b.endX,b.endY))continue;if("bezier"===b.edgeType||"multibezier"===b.edgeType||"self"===b.edgeType||"compound"===b.edgeType||"segments"===b.edgeType||"haystack"===b.edgeType){for(var w=m.rstyle.bezierPts||m.rstyle.linePts||m.rstyle.haystackPts,_=!0,x=0;x<w.length;x++)if(u=d,r=w[x],!el(u,r.x,r.y)){_=!1;break}_&&o.push(y)}else"haystack"!==b.edgeType&&"straight"!==b.edgeType||o.push(y)}}return o}},ui={calculateArrowAngles:function(n){var l,e,t,u,r,i,o=n._private.rscratch,a="haystack"===o.edgeType,s="bezier"===o.edgeType,c="multibezier"===o.edgeType,h="segments"===o.edgeType,d="compound"===o.edgeType,f="self"===o.edgeType;if(a?(t=o.haystackPts[0],u=o.haystackPts[1],r=o.haystackPts[2],i=o.haystackPts[3]):(t=o.arrowStartX,u=o.arrowStartY,r=o.arrowEndX,i=o.arrowEndY),g=o.midX,v=o.midY,h)l=t-o.segpts[0],e=u-o.segpts[1];else if(c||d||f||s){var p=o.allpts;l=t-Wn(p[0],p[2],p[4],.1),e=u-Wn(p[1],p[3],p[5],.1)}else l=t-g,e=u-v;o.srcArrowAngle=qn(l,e);var g=o.midX,v=o.midY;if(a&&(g=(t+r)/2,v=(u+i)/2),l=r-t,e=i-u,h)if((p=o.allpts).length/2%2==0){var y=(m=p.length/2)-2;l=p[m]-p[y],e=p[m+1]-p[y+1]}else{y=(m=p.length/2-1)-2;var m,b=m+2;l=p[m]-p[y],e=p[m+1]-p[y+1]}else if(c||d||f){var w,_,x,E,p=o.allpts;if(o.ctrlpts.length/2%2==0){var T=(k=(C=p.length/2-1)+2)+2;w=Wn(p[C],p[k],p[T],0),_=Wn(p[C+1],p[k+1],p[T+1],0),x=Wn(p[C],p[k],p[T],1e-4),E=Wn(p[C+1],p[k+1],p[T+1],1e-4)}else{var k,C;T=(k=p.length/2-1)+2;w=Wn(p[C=k-2],p[k],p[T],.4999),_=Wn(p[C+1],p[k+1],p[T+1],.4999),x=Wn(p[C],p[k],p[T],.5),E=Wn(p[C+1],p[k+1],p[T+1],.5)}l=x-w,e=E-_}(o.midtgtArrowAngle=qn(l,e),o.midDispX=l,o.midDispY=e,l*=-1,e*=-1,h)&&((p=o.allpts).length/2%2==0||(l=-(p[b=(m=p.length/2-1)+2]-p[m]),e=-(p[b+1]-p[m+1])));if(o.midsrcArrowAngle=qn(l,e),h)l=r-o.segpts[o.segpts.length-2],e=i-o.segpts[o.segpts.length-1];else if(c||d||f||s){var S=(p=o.allpts).length;l=r-Wn(p[S-6],p[S-4],p[S-2],.9),e=i-Wn(p[S-5],p[S-3],p[S-1],.9)}else l=r-g,e=i-v;o.tgtArrowAngle=qn(l,e)}};ui.getArrowWidth=ui.getArrowHeight=function(n,l){var e=this.arrowWidthCache=this.arrowWidthCache||{},t=e[n+", "+l];return t||(t=Math.max(Math.pow(13.37*n,.9),29)*l,e[n+", "+l]=t,t)};var ri={};function ii(n){var l=[];if(null!=n){for(var e=0;e<n.length;e+=2){var t=n[e],u=n[e+1];l.push({x:t,y:u})}return l}}ri.findHaystackPoints=function(n){for(var l=0;l<n.length;l++){var e=n[l],t=e._private,u=t.rscratch;if(!u.haystack){var r=2*Math.random()*Math.PI;u.source={x:Math.cos(r),y:Math.sin(r)};r=2*Math.random()*Math.PI;u.target={x:Math.cos(r),y:Math.sin(r)}}var i=t.source,o=t.target,a=i.position(),s=o.position(),c=i.width(),h=o.width(),d=i.height(),f=o.height(),p=e.pstyle("haystack-radius").value/2;u.haystackPts=u.allpts=[u.source.x*c*p+a.x,u.source.y*d*p+a.y,u.target.x*h*p+s.x,u.target.y*f*p+s.y],u.midX=(u.allpts[0]+u.allpts[2])/2,u.midY=(u.allpts[1]+u.allpts[3])/2,u.edgeType=u.lastCurveStyle="haystack",u.haystack=!0,this.storeEdgeProjections(e),this.calculateArrowAngles(e),this.recalculateEdgeLabelProjections(e),this.calculateLabelAngles(e)}},ri.storeAllpts=function(n){var l=n._private.rscratch;if("multibezier"===l.edgeType||"bezier"===l.edgeType||"self"===l.edgeType||"compound"===l.edgeType){l.allpts=[],l.allpts.push(l.startX,l.startY);for(var e=0;e+1<l.ctrlpts.length;e+=2)l.allpts.push(l.ctrlpts[e],l.ctrlpts[e+1]),e+3<l.ctrlpts.length&&l.allpts.push((l.ctrlpts[e]+l.ctrlpts[e+2])/2,(l.ctrlpts[e+1]+l.ctrlpts[e+3])/2);var t;l.allpts.push(l.endX,l.endY),l.ctrlpts.length/2%2==0?(t=l.allpts.length/2-1,l.midX=l.allpts[t],l.midY=l.allpts[t+1]):(t=l.allpts.length/2-3,.5,l.midX=Wn(l.allpts[t],l.allpts[t+2],l.allpts[t+4],.5),l.midY=Wn(l.allpts[t+1],l.allpts[t+3],l.allpts[t+5],.5))}else if("straight"===l.edgeType)l.allpts=[l.startX,l.startY,l.endX,l.endY],l.midX=(l.startX+l.endX+l.arrowStartX+l.arrowEndX)/4,l.midY=(l.startY+l.endY+l.arrowStartY+l.arrowEndY)/4;else if("segments"===l.edgeType)if(l.allpts=[],l.allpts.push(l.startX,l.startY),l.allpts.push.apply(l.allpts,l.segpts),l.allpts.push(l.endX,l.endY),l.segpts.length%4==0){var u=l.segpts.length/2,r=u-2;l.midX=(l.segpts[r]+l.segpts[u])/2,l.midY=(l.segpts[r+1]+l.segpts[u+1])/2}else{r=l.segpts.length/2-1;l.midX=l.segpts[r],l.midY=l.segpts[r+1]}},ri.checkForInvalidEdgeWarning=function(n){var l=n._private.rscratch;x(l.startX)&&x(l.startY)&&x(l.endX)&&x(l.endY)?l.loggedErr=!1:l.loggedErr||(l.loggedErr=!0,cn("Edge `"+n.id()+"` has invalid endpoints and so it is impossible to draw.  Adjust your edge style (e.g. control points) accordingly or use an alternative edge type.  This is expected behaviour when the source node and the target node overlap."))},ri.findEdgeControlPoints=function(n){if(n&&0!==n.length){for(var l,e,t,u,r,i,o,a,s,c,h,d,f,p,g=this,v=g.cy.hasCompoundNodes(),y={},m=[],b=[],w=0;w<n.length;w++){var _=(N=n[w])._private.data,E="unbundled-bezier"===(H=N.pstyle("curve-style").value)||"segments"===H||"straight"===H,T="unbundled-bezier"===H||"bezier"===H;if("none"!==N.pstyle("display").value)if("haystack"!==H){var k=_.source,C=_.target;l=k>C?C+"$-$"+k:k+"$-$"+C,E&&(l="unbundled$-$"+_.id);var S=y[l];null==S&&(S=y[l]=[],m.push(l)),S.push(N),E&&(S.hasUnbundled=!0),T&&(S.hasBezier=!0)}else b.push(N)}for(var I=0;I<m.length;I++){var N,D,O=y[l=m[I]];if(!O.hasUnbundled){var A=O[0].parallelEdges();yn(O),A.forEach(function(n){return O.push(n)}),O.sort(function(n,l){return n.poolIndex()-l.poolIndex()})}if(e=O[0]._private.source,t=O[0]._private.target,!O.hasUnbundled&&e.id()>t.id()){var P=e;e=t,t=P}u=e.position(),r=t.position(),i=e.outerWidth(),o=e.outerHeight(),a=t.outerWidth(),s=t.outerHeight(),c=g.nodeShapes[this.getNodeShape(e)],h=g.nodeShapes[this.getNodeShape(t)],f=!1;var M={north:0,west:0,south:0,east:0,northwest:0,southwest:0,northeast:0,southeast:0},L=u.x,R=u.y,F=i,B=o,j=r.x,U=r.y,z=a,q=s,V=O.length;for(w=0;w<O.length;w++){var H,G,Y=(D=(N=O[w])._private.rscratch).lastEdgeIndex,W=w,X=D.lastNumEdges,K=(E="unbundled-bezier"===(H=N.pstyle("curve-style").value)||"segments"===H,e.id()!==N.source().id()),$=N.pstyle("control-point-distances"),Z=N.pstyle("loop-direction").pfValue,Q=N.pstyle("loop-sweep").pfValue,J=N.pstyle("control-point-weights"),nn=$&&J?Math.min($.value.length,J.value.length):1,ln=N.pstyle("control-point-step-size").pfValue,en=$?$.pfValue[0]:void 0,tn=J.value[0],un=N.pstyle("edge-distances").value,rn=N.pstyle("source-distance-from-node").pfValue,on=N.pstyle("target-distance-from-node").pfValue,an=N.pstyle("segment-weights"),sn=N.pstyle("segment-distances"),cn=Math.min(an.pfValue.length,sn.pfValue.length),hn=N.pstyle("source-endpoint").value,dn=N.pstyle("target-endpoint").value,fn=N.pstyle("source-arrow-shape").value,pn=N.pstyle("target-arrow-shape").value,gn=N.pstyle("arrow-scale").value,vn=N.pstyle("width").pfValue,mn=D.lastSrcCtlPtX,bn=D.lastSrcCtlPtY,wn=D.lastSrcCtlPtW,_n=D.lastSrcCtlPtH,xn=D.lastTgtCtlPtX,En=D.lastTgtCtlPtY,Tn=D.lastTgtCtlPtW,kn=D.lastTgtCtlPtH,Cn=D.lastCurveStyle,Sn=H,In=D.lastCtrlptDists,Nn=$?$.strValue:null,Dn=D.lastCtrlptWs,On=J.strValue,An=D.lastSegmentWs,Pn=an.strValue,Mn=D.lastSegmentDs,Ln=sn.strValue,Rn=D.lastStepSize,Fn=ln,Bn=D.lastLoopDir,jn=Z,Un=D.lastLoopSwp,zn=Q,qn=D.lastEdgeDistances,Vn=un,Gn=D.lastSrcDistFNode,Yn=rn,Wn=D.lastTgtDistFNode,Xn=on,Kn=D.lastSrcEndpt,$n=hn,Zn=D.lastTgtEndpt,Qn=dn,Jn=D.lastSrcArr,nl=fn,ll=D.lastTgtArr,el=pn,tl=D.lastLineW,ul=vn,rl=D.lastArrScl,il=gn;if(D.badBezier=!!f,mn===L&&bn===R&&wn===F&&_n===B&&xn===j&&En===U&&Tn===z&&kn===q&&Cn===Sn&&In===Nn&&Dn===On&&An===Pn&&Mn===Ln&&Rn===Fn&&Bn===jn&&Un===zn&&qn===Vn&&Gn===Yn&&Wn===Xn&&Kn===$n&&Zn===Qn&&Jn===nl&&ll===el&&tl===ul&&rl===il&&(Y===W&&X===V||E)?G=!0:(G=!1,D.lastSrcCtlPtX=L,D.lastSrcCtlPtY=R,D.lastSrcCtlPtW=F,D.lastSrcCtlPtH=B,D.lastTgtCtlPtX=j,D.lastTgtCtlPtY=U,D.lastTgtCtlPtW=z,D.lastTgtCtlPtH=q,D.lastEdgeIndex=W,D.lastNumEdges=V,D.lastCurveStyle=Sn,D.lastCtrlptDists=Nn,D.lastCtrlptWs=On,D.lastSegmentDs=Ln,D.lastSegmentWs=Pn,D.lastStepSize=Fn,D.lastLoopDir=jn,D.lastLoopSwp=zn,D.lastEdgeDistances=Vn,D.lastSrcDistFNode=Yn,D.lastTgtDistFNode=Xn,D.lastSrcEndpt=$n,D.lastTgtEndpt=Qn,D.lastSrcArr=nl,D.lastTgtArr=el,D.lastLineW=ul,D.lastArrScl=il),!G){if(!O.calculatedIntersection&&e!==t&&(O.hasBezier||O.hasUnbundled)){O.calculatedIntersection=!0;var ol=c.intersectLine(u.x,u.y,i,o,r.x,r.y,0);O.srcIntn=ol;var al=h.intersectLine(r.x,r.y,a,s,u.x,u.y,0);O.tgtIntn=al;var sl={x1:ol[0],x2:al[0],y1:ol[1],y2:al[1]},cl={x1:u.x,x2:r.x,y1:u.y,y2:r.y},hl=al[1]-ol[1],dl=al[0]-ol[0],fl=Math.sqrt(dl*dl+hl*hl),pl={x:dl,y:hl},gl={x:pl.x/fl,y:pl.y/fl};d={x:-gl.y,y:gl.x},h.checkPoint(ol[0],ol[1],0,a,s,r.x,r.y)&&c.checkPoint(al[0],al[1],0,i,o,u.x,u.y)&&(d={},f=!0)}if(K?(D.srcIntn=O.tgtIntn,D.tgtIntn=O.srcIntn):(D.srcIntn=O.srcIntn,D.tgtIntn=O.tgtIntn),e===t){D.edgeType="self";var vl=w,yl=ln;E&&(vl=0,yl=en);var ml=Z-Math.PI/2,bl=ml-Q/2,wl=ml+Q/2,_l=String(Z+"_"+Q);vl=void 0===M[_l]?M[_l]=0:++M[_l],D.ctrlpts=[u.x+1.4*Math.cos(bl)*yl*(vl/3+1),u.y+1.4*Math.sin(bl)*yl*(vl/3+1),u.x+1.4*Math.cos(wl)*yl*(vl/3+1),u.y+1.4*Math.sin(wl)*yl*(vl/3+1)]}else if(v&&(e.isParent()||e.isChild()||t.isParent()||t.isChild())&&(e.parents().anySame(t)||t.parents().anySame(e))){D.edgeType="compound",D.badBezier=!1;vl=w,yl=ln;E&&(vl=0,yl=en);var xl={x:u.x-i/2,y:u.y-o/2},El={x:r.x-a/2,y:r.y-s/2},Tl={x:Math.min(xl.x,El.x),y:Math.min(xl.y,El.y)},kl=Math.max(.5,Math.log(.01*i)),Cl=Math.max(.5,Math.log(.01*a));D.ctrlpts=[Tl.x,Tl.y-(1+Math.pow(50,1.12)/100)*yl*(vl/3+1)*kl,Tl.x-(1+Math.pow(50,1.12)/100)*yl*(vl/3+1)*Cl,Tl.y]}else if("segments"===H){D.edgeType="segments",D.segpts=[];for(var Sl=0;Sl<cn;Sl++){var Il=an.pfValue[Sl],Nl=sn.pfValue[Sl],Dl=1-Il,Ol=Il,Al={x:(jl="node-position"===un?cl:sl).x1*Dl+jl.x2*Ol,y:jl.y1*Dl+jl.y2*Ol};D.segpts.push(Al.x+d.x*Nl,Al.y+d.y*Nl)}}else if(O.length%2!=1||w!==Math.floor(O.length/2)||E){var Pl=E;D.edgeType=Pl?"multibezier":"bezier",D.ctrlpts=[];for(var Ml=0;Ml<nn;Ml++){var Ll,Rl=(.5-O.length/2+w)*ln,Fl=(p=Rl)>0?1:p<0?-1:0;Pl&&(en=$?$.pfValue[Ml]:ln,tn=J.value[Ml]);var Bl=void 0!==(Ll=E?en:void 0!==en?Fl*en:void 0)?Ll:Rl;Dl=1-tn,Ol=tn;if(K){P=Dl;Dl=Ol,Ol=P}var jl;Al={x:(jl="node-position"===un?cl:sl).x1*Dl+jl.x2*Ol,y:jl.y1*Dl+jl.y2*Ol};D.ctrlpts.push(Al.x+d.x*Bl,Al.y+d.y*Bl)}}else D.edgeType="straight";this.findEndpoints(N);var Ul=!x(D.startX)||!x(D.startY),zl=!x(D.arrowStartX)||!x(D.arrowStartY),ql=!x(D.endX)||!x(D.endY),Vl=!x(D.arrowEndX)||!x(D.arrowEndY),Hl=3*(this.getArrowWidth(N.pstyle("width").pfValue,N.pstyle("arrow-scale").value)*this.arrowShapeWidth);if("bezier"===D.edgeType){var Gl=Hn({x:D.ctrlpts[0],y:D.ctrlpts[1]},{x:D.startX,y:D.startY}),Yl=Gl<Hl,Wl=Hn({x:D.ctrlpts[0],y:D.ctrlpts[1]},{x:D.endX,y:D.endY}),Xl=Wl<Hl,Kl=!1;if(Ul||zl||Yl){Kl=!0;var $l={x:D.ctrlpts[0]-u.x,y:D.ctrlpts[1]-u.y},Zl=Math.sqrt($l.x*$l.x+$l.y*$l.y),Ql={x:$l.x/Zl,y:$l.y/Zl},Jl=Math.max(i,o),ne={x:D.ctrlpts[0]+2*Ql.x*Jl,y:D.ctrlpts[1]+2*Ql.y*Jl},le=c.intersectLine(u.x,u.y,i,o,ne.x,ne.y,0);Yl?(D.ctrlpts[0]=D.ctrlpts[0]+Ql.x*(Hl-Gl),D.ctrlpts[1]=D.ctrlpts[1]+Ql.y*(Hl-Gl)):(D.ctrlpts[0]=le[0]+Ql.x*Hl,D.ctrlpts[1]=le[1]+Ql.y*Hl)}if(ql||Vl||Xl){Kl=!0;$l={x:D.ctrlpts[0]-r.x,y:D.ctrlpts[1]-r.y},Zl=Math.sqrt($l.x*$l.x+$l.y*$l.y),Ql={x:$l.x/Zl,y:$l.y/Zl},Jl=Math.max(i,o),ne={x:D.ctrlpts[0]+2*Ql.x*Jl,y:D.ctrlpts[1]+2*Ql.y*Jl};var ee=h.intersectLine(r.x,r.y,a,s,ne.x,ne.y,0);Xl?(D.ctrlpts[0]=D.ctrlpts[0]+Ql.x*(Hl-Wl),D.ctrlpts[1]=D.ctrlpts[1]+Ql.y*(Hl-Wl)):(D.ctrlpts[0]=ee[0]+Ql.x*Hl,D.ctrlpts[1]=ee[1]+Ql.y*Hl)}Kl&&this.findEndpoints(N)}this.checkForInvalidEdgeWarning(N),this.storeAllpts(N),this.storeEdgeProjections(N),this.calculateArrowAngles(N)}this.recalculateEdgeLabelProjections(N),this.calculateLabelAngles(N)}}this.findHaystackPoints(b)}},ri.getSegmentPoints=function(n){var l=n[0]._private.rscratch;if("segments"===l.edgeType)return this.recalculateRenderedStyle(n),ii(l.segpts)},ri.getControlPoints=function(n){var l=n[0]._private.rscratch,e=l.edgeType;if("bezier"===e||"multibezier"===e||"self"===e||"compound"===e)return this.recalculateRenderedStyle(n),ii(l.ctrlpts)},ri.getEdgeMidpoint=function(n){var l=n[0]._private.rscratch;return this.recalculateRenderedStyle(n),{x:l.midX,y:l.midY}};var oi={manualEndptToPx:function(n,l){var e=n.position(),t=n.outerWidth(),u=n.outerHeight();if(2===l.value.length){var r=[l.pfValue[0],l.pfValue[1]];return"%"===l.units[0]&&(r[0]=r[0]*t),"%"===l.units[1]&&(r[1]=r[1]*u),r[0]+=e.x,r[1]+=e.y,r}var i=l.pfValue[0];i=-Math.PI/2+i;var o=2*Math.max(t,u),a=[e.x+Math.cos(i)*o,e.y+Math.sin(i)*o];return this.nodeShapes[this.getNodeShape(n)].intersectLine(e.x,e.y,t,u,a[0],a[1],0)},findEndpoints:function(n){var l,e,t,u,r,i=this,o=n.source()[0],a=n.target()[0],s=o.position(),c=a.position(),h=n.pstyle("target-arrow-shape").value,d=n.pstyle("source-arrow-shape").value,f=n.pstyle("target-distance-from-node").pfValue,p=n.pstyle("source-distance-from-node").pfValue,g=n._private.rscratch,v=g.edgeType,y="self"===v||"compound"===v,m="bezier"===v||"multibezier"===v||y,b="bezier"!==v,w="straight"===v||"segments"===v,_="segments"===v,E=m||b||w,T=n.pstyle("source-endpoint"),k=y?"outside-to-node":T.value,C=n.pstyle("target-endpoint"),S=y?"outside-to-node":C.value;if(g.srcManEndpt=T,g.tgtManEndpt=C,m){var I=[g.ctrlpts[0],g.ctrlpts[1]];e=b?[g.ctrlpts[g.ctrlpts.length-2],g.ctrlpts[g.ctrlpts.length-1]]:I,t=I}else if(w){var N=_?g.segpts.slice(0,2):[c.x,c.y];e=_?g.segpts.slice(g.segpts.length-2):[s.x,s.y],t=N}if("inside-to-node"===S)l=[c.x,c.y];else if(C.units)l=this.manualEndptToPx(a,C);else if("outside-to-line"===S)l=g.tgtIntn;else if("outside-to-node"===S||"outside-to-node-or-label"===S?u=e:"outside-to-line"!==S&&"outside-to-line-or-label"!==S||(u=[s.x,s.y]),l=i.nodeShapes[this.getNodeShape(a)].intersectLine(c.x,c.y,a.outerWidth(),a.outerHeight(),u[0],u[1],0),"outside-to-node-or-label"===S||"outside-to-line-or-label"===S){var D=a._private.rscratch,O=D.labelWidth,A=D.labelHeight,P=D.labelX,M=D.labelY,L=a.pstyle("text-valign").value;"top"===L?M-=A/2:"bottom"===L&&(M+=A/2);var R=a.pstyle("text-halign").value;"left"===R?P-=O/2:"right"===R&&(P+=O/2);var F=i.nodeShapes.rectangle.intersectLine(P,M,O,A,u[0],u[1],0),B=s,j=Gn(B,zn(l));Gn(B,zn(F))<j&&(l=F)}var U=ml(l,e,i.arrowShapes[h].spacing(n)+f),z=ml(l,e,i.arrowShapes[h].gap(n)+f);if(g.endX=z[0],g.endY=z[1],g.arrowEndX=U[0],g.arrowEndY=U[1],"inside-to-node"===k)l=[s.x,s.y];else if(T.units)l=this.manualEndptToPx(o,T);else if("outside-to-line"===k)l=g.srcIntn;else if("outside-to-node"===k||"outside-to-node-or-label"===k?r=t:"outside-to-line"!==k&&"outside-to-line-or-label"!==k||(r=[c.x,c.y]),l=i.nodeShapes[this.getNodeShape(o)].intersectLine(s.x,s.y,o.outerWidth(),o.outerHeight(),r[0],r[1],0),"outside-to-node-or-label"===k||"outside-to-line-or-label"===k){var q=o._private.rscratch,V=q.labelWidth,H=q.labelHeight,G=q.labelX,Y=q.labelY,W=o.pstyle("text-valign").value;"top"===W?Y-=H/2:"bottom"===W&&(Y+=H/2);var X=o.pstyle("text-halign").value;"left"===X?G-=V/2:"right"===X&&(G+=V/2);var K=i.nodeShapes.rectangle.intersectLine(G,Y,V,H,r[0],r[1],0),$=c,Z=Gn($,zn(l));Gn($,zn(K))<Z&&(l=K)}var Q=ml(l,t,i.arrowShapes[d].spacing(n)+p),J=ml(l,t,i.arrowShapes[d].gap(n)+p);g.startX=J[0],g.startY=J[1],g.arrowStartX=Q[0],g.arrowStartY=Q[1],E&&(x(g.startX)&&x(g.startY)&&x(g.endX)&&x(g.endY)?g.badLine=!1:g.badLine=!0)},getSourceEndpoint:function(n){var l=n[0]._private.rscratch;switch(this.recalculateRenderedStyle(n),l.edgeType){case"haystack":return{x:l.haystackPts[0],y:l.haystackPts[1]};default:return{x:l.arrowStartX,y:l.arrowStartY}}},getTargetEndpoint:function(n){var l=n[0]._private.rscratch;switch(this.recalculateRenderedStyle(n),l.edgeType){case"haystack":return{x:l.haystackPts[2],y:l.haystackPts[3]};default:return{x:l.arrowEndX,y:l.arrowEndY}}}},ai={};function si(n,l,e){for(var t=function(n,l,e,t){return Wn(n,l,e,t)},u=l._private.rstyle.bezierPts,r=0;r<n.bezierProjPcts.length;r++){var i=n.bezierProjPcts[r];u.push({x:t(e[0],e[2],e[4],i),y:t(e[1],e[3],e[5],i)})}}ai.storeEdgeProjections=function(n){var l=n._private,e=l.rscratch,t=e.edgeType;if(l.rstyle.bezierPts=null,l.rstyle.linePts=null,l.rstyle.haystackPts=null,"multibezier"===t||"bezier"===t||"self"===t||"compound"===t){l.rstyle.bezierPts=[];for(var u=0;u+5<e.allpts.length;u+=4)si(this,n,e.allpts.slice(u,u+6))}else if("segments"===t){var r=l.rstyle.linePts=[];for(u=0;u+1<e.allpts.length;u+=2)r.push({x:e.allpts[u],y:e.allpts[u+1]})}else if("haystack"===t){var i=e.haystackPts;l.rstyle.haystackPts=[{x:i[0],y:i[1]},{x:i[2],y:i[3]}]}l.rstyle.arrowWidth=this.getArrowWidth(n.pstyle("width").pfValue,n.pstyle("arrow-scale").value)*this.arrowShapeWidth},ai.recalculateEdgeProjections=function(n){this.findEdgeControlPoints(n)};var ci={recalculateNodeLabelProjection:function(n){var l=n.pstyle("label").strValue;if(!N(l)){var e,t,u=n._private,r=n.width(),i=n.height(),o=n.padding(),a=n.position(),s=n.pstyle("text-halign").strValue,c=n.pstyle("text-valign").strValue,h=u.rscratch,d=u.rstyle;switch(s){case"left":e=a.x-r/2-o;break;case"right":e=a.x+r/2+o;break;default:e=a.x}switch(c){case"top":t=a.y-i/2-o;break;case"bottom":t=a.y+i/2+o;break;default:t=a.y}h.labelX=e,h.labelY=t,d.labelX=e,d.labelY=t,this.applyLabelDimensions(n)}}},hi=function(n,l){var e=Math.atan(l/n);return 0===n&&e<0&&(e*=-1),e},di=function(n,l){var e=l.x-n.x,t=l.y-n.y;return hi(e,t)};ci.recalculateEdgeLabelProjections=function(n){var l,e=n._private,t=e.rscratch,u=this,r={mid:n.pstyle("label").strValue,source:n.pstyle("source-label").strValue,target:n.pstyle("target-label").strValue};if(r.mid||r.source||r.target){l={x:t.midX,y:t.midY};var i=function(n,l,t){bn(e.rscratch,n,l,t),bn(e.rstyle,n,l,t)};i("labelX",null,l.x),i("labelY",null,l.y);var o=hi(t.midDispX,t.midDispY);i("labelAutoAngle",null,o);var a=function(o){var a,s="source"===o;if(r[o]){var c=n.pstyle(o+"-text-offset").pfValue;switch(t.edgeType){case"self":case"compound":case"bezier":case"multibezier":for(var h,d=function n(){if(n.cache)return n.cache;for(var l=[],r=0;r+5<t.allpts.length;r+=4){var i={x:t.allpts[r],y:t.allpts[r+1]},o={x:t.allpts[r+2],y:t.allpts[r+3]},a={x:t.allpts[r+4],y:t.allpts[r+5]};l.push({p0:i,p1:o,p2:a,startDist:0,length:0,segments:[]})}var s=e.rstyle.bezierPts,c=u.bezierProjPcts.length;function h(n,l,e,t,u){var r=Hn(l,e),i=n.segments[n.segments.length-1],o={p0:l,p1:e,t0:t,t1:u,startDist:i?i.startDist+i.length:0,length:r};n.segments.push(o),n.length+=r}for(r=0;r<l.length;r++){var d=l[r],f=l[r-1];f&&(d.startDist=f.startDist+f.length),h(d,d.p0,s[r*c],0,u.bezierProjPcts[0]);for(var p=0;p<c-1;p++)h(d,s[r*c+p],s[r*c+p+1],u.bezierProjPcts[p],u.bezierProjPcts[p+1]);h(d,s[r*c+c-1],d.p2,u.bezierProjPcts[c-1],1)}return n.cache=l}(),f=0,p=0,g=0;g<d.length;g++){for(var v=d[s?g:d.length-1-g],y=0;y<v.segments.length;y++){var m=v.segments[s?y:v.segments.length-1-y],b=g===d.length-1&&y===v.segments.length-1;if(f=p,(p+=m.length)>=c||b){h={cp:v,segment:m};break}}if(h)break}v=h.cp;var w=(c-f)/(m=h.segment).length,_=m.t1-m.t0,x=s?m.t0+_*w:m.t1-_*w;x=Kn(0,x,1),l=Xn(v.p0,v.p1,v.p2,x),a=function(n,l,e,t){var u=Kn(0,t-.001,1),r=Kn(0,t+.001,1),i=Xn(n,l,e,u),o=Xn(n,l,e,r);return di(i,o)}(v.p0,v.p1,v.p2,x);break;case"straight":case"segments":case"haystack":var E,T,k,C,S=0,I=t.allpts.length;for(g=0;g+3<I&&(s?(k={x:t.allpts[g],y:t.allpts[g+1]},C={x:t.allpts[g+2],y:t.allpts[g+3]}):(k={x:t.allpts[I-2-g],y:t.allpts[I-1-g]},C={x:t.allpts[I-4-g],y:t.allpts[I-3-g]}),T=S,!((S+=E=Hn(k,C))>=c));g+=2);x=Kn(0,x=(c-T)/E,1),l=function(n,l,e,t){var u=l.x-n.x,r=l.y-n.y,i=Hn(n,l),o=u/i,a=r/i;return e=null==e?0:e,t=null!=t?t:e*i,{x:n.x+o*t,y:n.y+a*t}}(k,C,x),a=di(k,C)}i("labelX",o,l.x),i("labelY",o,l.y),i("labelAutoAngle",o,a)}};a("source"),a("target"),this.applyLabelDimensions(n)}},ci.applyLabelDimensions=function(n){this.applyPrefixedLabelDimensions(n),n.isEdge()&&(this.applyPrefixedLabelDimensions(n,"source"),this.applyPrefixedLabelDimensions(n,"target"))},ci.applyPrefixedLabelDimensions=function(n,l){var e=n._private,t=this.getLabelText(n,l),u=this.calculateLabelDimensions(n,t);bn(e.rstyle,"labelWidth",l,u.width),bn(e.rscratch,"labelWidth",l,u.width),bn(e.rstyle,"labelHeight",l,u.height),bn(e.rscratch,"labelHeight",l,u.height)},ci.getLabelText=function(n,l){var e=n._private,t=l?l+"-":"",u=n.pstyle(t+"label").strValue,r=n.pstyle("text-transform").value,i=function(n,t){return t?(bn(e.rscratch,n,l,t),t):mn(e.rscratch,n,l)};if(!u)return"";"none"==r||("uppercase"==r?u=u.toUpperCase():"lowercase"==r&&(u=u.toLowerCase()));var o=n.pstyle("text-wrap").value;if("wrap"===o){var a=i("labelKey");if(null!=a&&i("labelWrapKey")===a)return i("labelWrapCachedText");for(var s=u.split("\n"),c=n.pstyle("text-max-width").pfValue,h=[],d=0;d<s.length;d++){var f=s[d];if(this.calculateLabelDimensions(n,f).width>c){for(var p=f.split(/\s+/),g="",v=0;v<p.length;v++){var y=p[v],m=0===g.length?y:g+" "+y;this.calculateLabelDimensions(n,m).width<=c?g+=y+" ":(h.push(g),g=y+" ")}g.match(/^\s+$/)||h.push(g)}else h.push(f)}i("labelWrapCachedLines",h),u=i("labelWrapCachedText",h.join("\n")),i("labelWrapKey",a)}else if("ellipsis"===o){c=n.pstyle("text-max-width").pfValue;for(var b="",w=!1,_=0;_<u.length;_++){if(this.calculateLabelDimensions(n,b+u[_]+"…").width>c)break;b+=u[_],_===u.length-1&&(w=!0)}return w||(b+="…"),b}return u},ci.calculateLabelDimensions=function(n,l){var e=Q(l,n._private.labelDimsKey),t=this.labelDimCache||(this.labelDimCache=[]),u=t[e];if(null!=u)return u;var r=n.pstyle("font-style").strValue,i=1*n.pstyle("font-size").pfValue+"px",o=n.pstyle("font-family").strValue,a=n.pstyle("font-weight").strValue,s=this.labelCalcDiv;s||(s=this.labelCalcDiv=document.createElement("div"),document.body.appendChild(s));var c=s.style;return c.fontFamily=o,c.fontStyle=r,c.fontSize=i,c.fontWeight=a,c.position="absolute",c.left="-9999px",c.top="-9999px",c.zIndex="-1",c.visibility="hidden",c.pointerEvents="none",c.padding="0",c.lineHeight="1","wrap"===n.pstyle("text-wrap").value?c.whiteSpace="pre":c.whiteSpace="normal",s.textContent=l,t[e]={width:Math.ceil(s.clientWidth/1),height:Math.ceil(s.clientHeight/1)}},ci.calculateLabelAngles=function(n){var l=n._private.rscratch,e=n.isEdge(),t=n.pstyle("text-rotation"),u=t.strValue;"none"===u?l.labelAngle=l.sourceLabelAngle=l.targetLabelAngle=0:e&&"autorotate"===u?(l.labelAngle=l.labelAutoAngle,l.sourceLabelAngle=l.sourceLabelAutoAngle,l.targetLabelAngle=l.targetLabelAutoAngle):l.labelAngle=l.sourceLabelAngle=l.targetLabelAngle="autorotate"===u?0:t.pfValue};var fi={},pi=!1;fi.getNodeShape=function(n){var l=n.pstyle("shape").value;if("cutrectangle"===l&&(n.width()<28||n.height()<28))return pi||(cn("The `cutrectangle` node shape can not be used at small sizes so `rectangle` is used instead"),pi=!0),"rectangle";if(n.isParent())return"rectangle"===l||"roundrectangle"===l||"cutrectangle"===l||"barrel"===l?l:"rectangle";if("polygon"===l){var e=n.pstyle("shape-polygon-points").value;return this.nodeShapes.makePolygon(e).name}return l};var gi={registerCalculationListeners:function(){var n=this.cy,l=n.collection(),e=this,t=function(n){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(l.merge(n),e)for(var t=0;t<n.length;t++){n[t]._private.rstyle.clean=!1}};e.binder(n).on("bounds.* dirty.*",function(n){var l=n.target;t(l)}).on("style.* background.*",function(n){var l=n.target;t(l,!1)});e.beforeRender(function(u){if(u){for(var r=e.onUpdateEleCalcsFns,i=0;i<l.length;i++)t(l[i].connectedEdges());if(r)for(i=0;i<r.length;i++)(0,r[i])(u,l);e.recalculateRenderedStyle(l),l=n.collection()}},e.beforeRenderPriorities.eleCalcs)},onUpdateEleCalcs:function(n){(this.onUpdateEleCalcsFns=this.onUpdateEleCalcsFns||[]).push(n)},recalculateRenderedStyle:function(n,l){var e=[],t=[];if(!this.destroyed){void 0===l&&(l=!0);for(var u=0;u<n.length;u++){var r=(a=(o=n[u])._private).rstyle;l&&r.clean||o.removed()||"none"!==o.pstyle("display").value&&("nodes"===a.group?t.push(o):e.push(o),r.clean=!0)}for(u=0;u<t.length;u++){r=(a=(o=t[u])._private).rstyle;var i=o.position();this.recalculateNodeLabelProjection(o),r.nodeX=i.x,r.nodeY=i.y,r.nodeW=o.pstyle("width").pfValue,r.nodeH=o.pstyle("height").pfValue}this.recalculateEdgeProjections(e);for(u=0;u<e.length;u++){r=(a=(o=e[u])._private).rstyle;var o,a,s=a.rscratch;this.recalculateEdgeLabelProjections(o),r.srcX=s.arrowStartX,r.srcY=s.arrowStartY,r.tgtX=s.arrowEndX,r.tgtY=s.arrowEndY,r.midX=s.midX,r.midY=s.midY,r.labelAngle=s.labelAngle,r.sourceLabelAngle=s.sourceLabelAngle,r.targetLabelAngle=s.targetLabelAngle}}}},vi={updateCachedGrabbedEles:function(){var n=this.cachedZSortedEles;if(n){n.drag=[],n.nondrag=[];for(var l=[],e=0;e<n.length;e++){var t=(u=n[e])._private.rscratch;u.grabbed()&&!u.isParent()?l.push(u):t.inDragLayer?n.drag.push(u):n.nondrag.push(u)}for(e=0;e<l.length;e++){var u=l[e];n.drag.push(u)}}},invalidateCachedZSortedEles:function(){this.cachedZSortedEles=null},getCachedZSortedEles:function(n){if(n||!this.cachedZSortedEles){var l=this.cy.mutableElements().toArray();l.sort(bu),l.interactive=l.filter(function(n){return n.interactive()}),this.cachedZSortedEles=l,this.updateCachedGrabbedEles()}else l=this.cachedZSortedEles;return l}},yi={};[ti,ui,ri,oi,ai,ci,fi,gi,vi].forEach(function(n){j(yi,n)});var mi={getCachedImage:function(n,l,e){var t=this.imageCache=this.imageCache||{},u=t[n];if(u)return u.image.complete||u.image.addEventListener("load",e),u.image;var r=(u=t[n]=t[n]||{}).image=new Image;r.addEventListener("load",e),r.addEventListener("error",function(){r.error=!0});return"data:"===n.substring(0,"data:".length).toLowerCase()||(r.crossOrigin=l),r.src=n,r}},bi={registerBinding:function(n,l,e,t){var u=Array.prototype.slice.apply(arguments,[1]),r=this.binder(n);return r.on.apply(r,u)}};bi.binder=function(n){var l,e=this,t=n===window||n===document||n===document.body||(l=n,"undefined"!=typeof HTMLElement&&l instanceof HTMLElement);if(null==e.supportsPassiveEvents){var u=!1;try{var r=Object.defineProperty({},"passive",{get:function(){return u=!0,!0}});window.addEventListener("test",null,r)}catch(n){}e.supportsPassiveEvents=u}var i=function(l,u,r){var i=Array.prototype.slice.call(arguments);return t&&e.supportsPassiveEvents&&(i[2]={capture:null!=r&&r,passive:!1,once:!1}),e.bindings.push({target:n,args:i}),(n.addEventListener||n.on).apply(n,i),this};return{on:i,addEventListener:i,addListener:i,bind:i}},bi.nodeIsDraggable=function(n){return n&&n.isNode()&&!n.locked()&&n.grabbable()},bi.nodeIsGrabbable=function(n){return this.nodeIsDraggable(n)&&n.interactive()},bi.load=function(){var n=this,l=function(n){return n.selected()},e=function(l,e,t,u){null==l&&(l=n.cy);for(var r=0;r<e.length;r++){var i=e[r];l.emit({originalEvent:t,type:i,position:u})}},t=function(n){return n.shiftKey||n.metaKey||n.ctrlKey},r=function(l,e){var t=!0;if(n.cy.hasCompoundNodes()&&l&&l.isEdge())for(var u=0;e&&u<e.length;u++){if((l=e[u]).isNode()&&l.isParent()){t=!1;break}}else t=!0;return t},i=function(n){n[0]._private.rscratch.inDragLayer=!0},o=function(n){n[0]._private.rscratch.isGrabTarget=!0},a=function(n,l){var e=l.addToList;e.has(n)||(e.merge(n),function(n){n[0]._private.grabbed=!0}(n))},s=function(l,e){e=e||{};var t=l.cy().hasCompoundNodes();e.inDragLayer&&(l.forEach(i),l.neighborhood().stdFilter(function(n){return!t||n.isEdge()}).forEach(i)),e.addToList&&l.forEach(function(n){a(n,e)}),function(n,l){if(n.cy().hasCompoundNodes()&&(null!=l.inDragLayer||null!=l.addToList)){var e=n.descendants();l.inDragLayer&&(e.forEach(i),e.connectedEdges().forEach(i)),l.addToList&&l.addToList.unmerge(e)}}(l,e),d(l,{inDragLayer:e.inDragLayer}),n.updateCachedGrabbedEles()},c=s,h=function(l){l&&(n.getCachedZSortedEles().forEach(function(n){!function(n){n[0]._private.grabbed=!1}(n),function(n){n[0]._private.rscratch.inDragLayer=!1}(n),function(n){n[0]._private.rscratch.isGrabTarget=!1}(n)}),n.updateCachedGrabbedEles())},d=function(n,l){if((null!=l.inDragLayer||null!=l.addToList)&&n.cy().hasCompoundNodes()){var e=n.ancestors().orphans();if(!e.same(n)){var t=e.descendants().spawnSelf().merge(e).unmerge(n).unmerge(n.descendants()),u=t.connectedEdges();l.inDragLayer&&(u.forEach(i),t.forEach(i)),l.addToList&&t.forEach(function(n){a(n,l)})}}},f=function(){null!=document.activeElement&&null!=document.activeElement.blur&&document.activeElement.blur()},p="undefined"!=typeof MutationObserver;p?(n.removeObserver=new MutationObserver(function(l){for(var e=0;e<l.length;e++){var t=l[e].removedNodes;if(t)for(var u=0;u<t.length;u++){if(t[u]===n.container){n.destroy();break}}}}),n.container.parentNode&&n.removeObserver.observe(n.container.parentNode,{childList:!0})):n.registerBinding(n.container,"DOMNodeRemoved",function(l){n.destroy()});var g=u(function(){n.cy.resize()},100);p&&(n.styleObserver=new MutationObserver(g),n.styleObserver.observe(n.container,{attributes:!0})),n.registerBinding(window,"resize",g);var v=function(){n.invalidateContainerClientCoordsCache()};!function(n,l){for(;null!=n;)l(n),n=n.parentNode}(n.container,function(l){n.registerBinding(l,"transitionend",v),n.registerBinding(l,"animationend",v),n.registerBinding(l,"scroll",v)}),n.registerBinding(n.container,"contextmenu",function(n){n.preventDefault()});var y=function(l){for(var e=n.findContainerClientCoords(),t=e[0],u=e[1],r=e[2],i=e[3],o=l.touches?l.touches:[l],a=!1,s=0;s<o.length;s++){var c=o[s];if(t<=c.clientX&&c.clientX<=t+r&&u<=c.clientY&&c.clientY<=u+i){a=!0;break}}if(!a)return!1;for(var h=n.container,d=l.target.parentNode,f=!1;d;){if(d===h){f=!0;break}d=d.parentNode}return!!f};n.registerBinding(n.container,"mousedown",function(l){if(y(l)){l.preventDefault(),f(),n.hoverData.capture=!0,n.hoverData.which=l.which;var t=n.cy,u=[l.clientX,l.clientY],r=n.projectIntoViewport(u[0],u[1]),i=n.selection,a=n.findNearestElements(r[0],r[1],!0,!1),h=a[0],d=n.dragData.possibleDragElements;n.hoverData.mdownPos=r,n.hoverData.mdownGPos=u;if(3==l.which){n.hoverData.cxtStarted=!0;var p={originalEvent:l,type:"cxttapstart",position:{x:r[0],y:r[1]}};h?(h.activate(),h.emit(p),n.hoverData.down=h):t.emit(p),n.hoverData.downTime=(new Date).getTime(),n.hoverData.cxtDragged=!1}else if(1==l.which){if(h&&h.activate(),null!=h&&n.nodeIsGrabbable(h)){var g=function(n){return{originalEvent:l,type:n,position:{x:r[0],y:r[1]}}};if(o(h),h.selected()){d=n.dragData.possibleDragElements=t.collection();var v=t.$(function(l){return l.isNode()&&l.selected()&&n.nodeIsGrabbable(l)});s(v,{addToList:d}),h.emit(g("grabon")),v.forEach(function(n){n.emit(g("grab"))})}else d=n.dragData.possibleDragElements=t.collection(),c(h,{addToList:d}),h.emit(g("grabon")).emit(g("grab"));n.redrawHint("eles",!0),n.redrawHint("drag",!0)}n.hoverData.down=h,n.hoverData.downs=a,n.hoverData.downTime=(new Date).getTime(),e(h,["mousedown","tapstart","vmousedown"],l,{x:r[0],y:r[1]}),null==h?(i[4]=1,n.data.bgActivePosistion={x:r[0],y:r[1]},n.redrawHint("select",!0),n.redraw()):h.isEdge()&&(i[4]=1),n.hoverData.tapholdCancelled=!1,clearTimeout(n.hoverData.tapholdTimeout),n.hoverData.tapholdTimeout=setTimeout(function(){if(!n.hoverData.tapholdCancelled){var e=n.hoverData.down;e?e.emit({originalEvent:l,type:"taphold",position:{x:r[0],y:r[1]}}):t.emit({originalEvent:l,type:"taphold",position:{x:r[0],y:r[1]}})}},n.tapholdDuration)}i[0]=i[2]=r[0],i[1]=i[3]=r[1]}},!1),n.registerBinding(window,"mousemove",function(l){if(n.hoverData.capture||y(l)){var u=!1,i=n.cy,o=i.zoom(),a=[l.clientX,l.clientY],c=n.projectIntoViewport(a[0],a[1]),d=n.hoverData.mdownPos,f=n.hoverData.mdownGPos,p=n.selection,g=null;n.hoverData.draggingEles||n.hoverData.dragging||n.hoverData.selecting||(g=n.findNearestElement(c[0],c[1],!0,!1));var v,m=n.hoverData.last,b=n.hoverData.down,w=[c[0]-p[2],c[1]-p[3]],_=n.dragData.possibleDragElements;if(f){var E=a[0]-f[0],T=E*E,k=a[1]-f[1],C=T+k*k;n.hoverData.isOverThresholdDrag=v=C>=n.desktopTapThreshold2}var S=t(l);v&&(n.hoverData.tapholdCancelled=!0);u=!0,e(g,["mousemove","vmousemove","tapdrag"],l,{x:c[0],y:c[1]});var I=function(){n.data.bgActivePosistion=void 0,n.hoverData.selecting||i.emit({originalEvent:l,type:"boxstart",position:{x:c[0],y:c[1]}}),p[4]=1,n.hoverData.selecting=!0,n.redrawHint("select",!0),n.redraw()};if(3===n.hoverData.which){if(v){var N={originalEvent:l,type:"cxtdrag",position:{x:c[0],y:c[1]}};b?b.emit(N):i.emit(N),n.hoverData.cxtDragged=!0,n.hoverData.cxtOver&&g===n.hoverData.cxtOver||(n.hoverData.cxtOver&&n.hoverData.cxtOver.emit({originalEvent:l,type:"cxtdragout",position:{x:c[0],y:c[1]}}),n.hoverData.cxtOver=g,g&&g.emit({originalEvent:l,type:"cxtdragover",position:{x:c[0],y:c[1]}}))}}else if(n.hoverData.dragging){if(u=!0,i.panningEnabled()&&i.userPanningEnabled()){var D;if(n.hoverData.justStartedPan){var O=n.hoverData.mdownPos;D={x:(c[0]-O[0])*o,y:(c[1]-O[1])*o},n.hoverData.justStartedPan=!1}else D={x:w[0]*o,y:w[1]*o};i.panBy(D),n.hoverData.dragged=!0}c=n.projectIntoViewport(l.clientX,l.clientY)}else if(1!=p[4]||null!=b&&!b.isEdge()){if(b&&b.isEdge()&&b.active()&&b.unactivate(),b&&b.grabbed()||g==m||(m&&e(m,["mouseout","tapdragout"],l,{x:c[0],y:c[1]}),g&&e(g,["mouseover","tapdragover"],l,{x:c[0],y:c[1]}),n.hoverData.last=g),b)if(v){if(i.boxSelectionEnabled()&&S)b&&b.grabbed()&&(h(_),b.emit("freeon"),_.emit("free"),n.dragData.didDrag&&(b.emit("dragfreeon"),_.emit("dragfree"))),I();else if(b&&b.grabbed()&&n.nodeIsDraggable(b)){var A=!n.dragData.didDrag;A&&n.redrawHint("eles",!0),n.dragData.didDrag=!0;var P=i.collection();n.hoverData.draggingEles||s(_,{inDragLayer:!0});var M={x:0,y:0};if(x(w[0])&&x(w[1])&&(M.x+=w[0],M.y+=w[1],A)){var L=n.hoverData.dragDelta;L&&x(L[0])&&x(L[1])&&(M.x+=L[0],M.y+=L[1])}for(var R=0;R<_.length;R++){var F=_[R];n.nodeIsDraggable(F)&&F.grabbed()&&P.merge(F)}n.hoverData.draggingEles=!0,P.silentShift(M).emit("position drag"),n.redrawHint("drag",!0),n.redraw()}}else!function(){var l=n.hoverData.dragDelta=n.hoverData.dragDelta||[];0===l.length?(l.push(w[0]),l.push(w[1])):(l[0]+=w[0],l[1]+=w[1])}();u=!0}else if(v){if(n.hoverData.dragging||!i.boxSelectionEnabled()||!S&&i.panningEnabled()&&i.userPanningEnabled()){if(!n.hoverData.selecting&&i.panningEnabled()&&i.userPanningEnabled()){r(b,n.hoverData.downs)&&(n.hoverData.dragging=!0,n.hoverData.justStartedPan=!0,p[4]=0,n.data.bgActivePosistion=zn(d),n.redrawHint("select",!0),n.redraw())}}else I();b&&b.isEdge()&&b.active()&&b.unactivate()}return p[2]=c[0],p[3]=c[1],u?(l.stopPropagation&&l.stopPropagation(),l.preventDefault&&l.preventDefault(),!1):void 0}},!1),n.registerBinding(window,"mouseup",function(u){if(n.hoverData.capture){n.hoverData.capture=!1;var r=n.cy,i=n.projectIntoViewport(u.clientX,u.clientY),o=n.selection,a=n.findNearestElement(i[0],i[1],!0,!1),s=n.dragData.possibleDragElements,c=n.hoverData.down,d=t(u);if(n.data.bgActivePosistion&&(n.redrawHint("select",!0),n.redraw()),n.hoverData.tapholdCancelled=!0,n.data.bgActivePosistion=void 0,c&&c.unactivate(),3===n.hoverData.which){var f={originalEvent:u,type:"cxttapend",position:{x:i[0],y:i[1]}};if(c?c.emit(f):r.emit(f),!n.hoverData.cxtDragged){var p={originalEvent:u,type:"cxttap",position:{x:i[0],y:i[1]}};c?c.emit(p):r.emit(p)}n.hoverData.cxtDragged=!1,n.hoverData.which=null}else if(1===n.hoverData.which){if(e(a,["mouseup","tapend","vmouseup"],u,{x:i[0],y:i[1]}),n.dragData.didDrag||n.hoverData.dragged||n.hoverData.selecting||n.hoverData.isOverThresholdDrag||e(c,["click","tap","vclick"],u,{x:i[0],y:i[1]}),null!=c||n.dragData.didDrag||n.hoverData.selecting||n.hoverData.dragged||t(u)||(r.$(l).unselect(["tapunselect"]),s.length>0&&n.redrawHint("eles",!0),n.dragData.possibleDragElements=s=r.collection()),a!=c||n.dragData.didDrag||n.hoverData.selecting||null!=a&&a._private.selectable&&(n.hoverData.dragging||("additive"===r.selectionType()||d?a.selected()?a.unselect(["tapunselect"]):a.select(["tapselect"]):d||(r.$(l).unmerge(a).unselect(["tapunselect"]),a.select(["tapselect"]))),n.redrawHint("eles",!0)),n.hoverData.selecting){var g=r.collection(n.getAllInBox(o[0],o[1],o[2],o[3]));n.redrawHint("select",!0),g.length>0&&n.redrawHint("eles",!0),r.emit({type:"boxend",originalEvent:u,position:{x:i[0],y:i[1]}});var v=function(n){return n.selectable()&&!n.selected()};"additive"===r.selectionType()?g.emit("box").stdFilter(v).select().emit("boxselect"):(d||r.$(l).unmerge(g).unselect(),g.emit("box").stdFilter(v).select().emit("boxselect")),n.redraw()}if(n.hoverData.dragging&&(n.hoverData.dragging=!1,n.redrawHint("select",!0),n.redrawHint("eles",!0),n.redraw()),!o[4]){n.redrawHint("drag",!0),n.redrawHint("eles",!0);var y=c&&c.grabbed();h(s),y&&(c.emit("freeon"),s.emit("free"),n.dragData.didDrag&&(c.emit("dragfreeon"),s.emit("dragfree")))}}o[4]=0,n.hoverData.down=null,n.hoverData.cxtStarted=!1,n.hoverData.draggingEles=!1,n.hoverData.selecting=!1,n.hoverData.isOverThresholdDrag=!1,n.dragData.didDrag=!1,n.hoverData.dragged=!1,n.hoverData.dragDelta=[],n.hoverData.mdownPos=null,n.hoverData.mdownGPos=null}},!1);var m,b,w,_,E,T,k,C,S,I,N,D,O;n.registerBinding(n.container,"wheel",function(l){if(!n.scrollingPage){var e,t=n.cy,u=n.projectIntoViewport(l.clientX,l.clientY),r=[u[0]*t.zoom()+t.pan().x,u[1]*t.zoom()+t.pan().y];n.hoverData.draggingEles||n.hoverData.dragging||n.hoverData.cxtStarted||0!==n.selection[4]?l.preventDefault():t.panningEnabled()&&t.userPanningEnabled()&&t.zoomingEnabled()&&t.userZoomingEnabled()&&(l.preventDefault(),n.data.wheelZooming=!0,clearTimeout(n.data.wheelTimeout),n.data.wheelTimeout=setTimeout(function(){n.data.wheelZooming=!1,n.redrawHint("eles",!0),n.redraw()},150),e=null!=l.deltaY?l.deltaY/-250:null!=l.wheelDeltaY?l.wheelDeltaY/1e3:l.wheelDelta/1e3,e*=n.wheelSensitivity,1===l.deltaMode&&(e*=33),t.zoom({level:t.zoom()*Math.pow(10,e),renderedPosition:{x:r[0],y:r[1]}}))}},!0),n.registerBinding(window,"scroll",function(l){n.scrollingPage=!0,clearTimeout(n.scrollingPageTimeout),n.scrollingPageTimeout=setTimeout(function(){n.scrollingPage=!1},250)},!0),n.registerBinding(n.container,"mouseout",function(l){var e=n.projectIntoViewport(l.clientX,l.clientY);n.cy.emit({originalEvent:l,type:"mouseout",position:{x:e[0],y:e[1]}})},!1),n.registerBinding(n.container,"mouseover",function(l){var e=n.projectIntoViewport(l.clientX,l.clientY);n.cy.emit({originalEvent:l,type:"mouseover",position:{x:e[0],y:e[1]}})},!1);var A,P,M,L,R=function(n,l,e,t){return Math.sqrt((e-n)*(e-n)+(t-l)*(t-l))},F=function(n,l,e,t){return(e-n)*(e-n)+(t-l)*(t-l)};if(n.registerBinding(n.container,"touchstart",A=function(l){if(y(l)){f(),n.touchData.capture=!0,n.data.bgActivePosistion=void 0;var t=n.cy,u=n.touchData.now,r=n.touchData.earlier;if(l.touches[0]){var i=n.projectIntoViewport(l.touches[0].clientX,l.touches[0].clientY);u[0]=i[0],u[1]=i[1]}if(l.touches[1]){i=n.projectIntoViewport(l.touches[1].clientX,l.touches[1].clientY);u[2]=i[0],u[3]=i[1]}if(l.touches[2]){i=n.projectIntoViewport(l.touches[2].clientX,l.touches[2].clientY);u[4]=i[0],u[5]=i[1]}if(l.touches[1]){h(n.dragData.touchDragEles);var a=n.findContainerClientCoords();S=a[0],I=a[1],N=a[2],D=a[3],m=l.touches[0].clientX-S,b=l.touches[0].clientY-I,w=l.touches[1].clientX-S,_=l.touches[1].clientY-I,O=0<=m&&m<=N&&0<=w&&w<=N&&0<=b&&b<=D&&0<=_&&_<=D;var d=t.pan(),p=t.zoom();E=R(m,b,w,_),T=F(m,b,w,_),C=[((k=[(m+w)/2,(b+_)/2])[0]-d.x)/p,(k[1]-d.y)/p];if(T<4e4&&!l.touches[2]){var g=n.findNearestElement(u[0],u[1],!0,!0),v=n.findNearestElement(u[2],u[3],!0,!0);return g&&g.isNode()?(g.activate().emit({originalEvent:l,type:"cxttapstart",position:{x:u[0],y:u[1]}}),n.touchData.start=g):v&&v.isNode()?(v.activate().emit({originalEvent:l,type:"cxttapstart",position:{x:u[0],y:u[1]}}),n.touchData.start=v):t.emit({originalEvent:l,type:"cxttapstart",position:{x:u[0],y:u[1]}}),n.touchData.start&&(n.touchData.start._private.grabbed=!1),n.touchData.cxt=!0,n.touchData.cxtDragged=!1,n.data.bgActivePosistion=void 0,void n.redraw()}}if(l.touches[2]);else if(l.touches[1]);else if(l.touches[0]){var x=n.findNearestElements(u[0],u[1],!0,!0),A=x[0];if(null!=A&&(A.activate(),n.touchData.start=A,n.touchData.starts=x,n.nodeIsGrabbable(A))){var P=n.dragData.touchDragEles=t.collection(),M=null;n.redrawHint("eles",!0),n.redrawHint("drag",!0),A.selected()?(M=t.$(function(l){return l.selected()&&n.nodeIsGrabbable(l)}),s(M,{addToList:P})):c(A,{addToList:P}),o(A);var L=function(n){return{originalEvent:l,type:n,position:{x:u[0],y:u[1]}}};A.emit(L("grabon")),M?M.forEach(function(n){n.emit(L("grab"))}):A.emit(L("grab"))}e(A,["touchstart","tapstart","vmousedown"],l,{x:u[0],y:u[1]}),null==A&&(n.data.bgActivePosistion={x:i[0],y:i[1]},n.redrawHint("select",!0),n.redraw()),n.touchData.singleTouchMoved=!1,n.touchData.singleTouchStartTime=+new Date,clearTimeout(n.touchData.tapholdTimeout),n.touchData.tapholdTimeout=setTimeout(function(){!1!==n.touchData.singleTouchMoved||n.pinching||n.touchData.selecting||e(n.touchData.start,["taphold"],l,{x:u[0],y:u[1]})},n.tapholdDuration)}if(l.touches.length>=1){for(var B=n.touchData.startPosition=[],j=0;j<u.length;j++)B[j]=r[j]=u[j];var U=l.touches[0];n.touchData.startGPosition=[U.clientX,U.clientY]}}},!1),n.registerBinding(window,"touchmove",P=function(l){var t=n.touchData.capture;if(t||y(l)){var u=n.selection,i=n.cy,o=n.touchData.now,a=n.touchData.earlier,c=i.zoom();if(l.touches[0]){var d=n.projectIntoViewport(l.touches[0].clientX,l.touches[0].clientY);o[0]=d[0],o[1]=d[1]}if(l.touches[1]){d=n.projectIntoViewport(l.touches[1].clientX,l.touches[1].clientY);o[2]=d[0],o[3]=d[1]}if(l.touches[2]){d=n.projectIntoViewport(l.touches[2].clientX,l.touches[2].clientY);o[4]=d[0],o[5]=d[1]}var f,p=n.touchData.startGPosition;if(t&&l.touches[0]&&p){for(var g=[],v=0;v<o.length;v++)g[v]=o[v]-a[v];var k=l.touches[0].clientX-p[0],N=k*k,D=l.touches[0].clientY-p[1];f=N+D*D>=n.touchTapThreshold2}if(t&&n.touchData.cxt){l.preventDefault();var A=l.touches[0].clientX-S,P=l.touches[0].clientY-I,M=l.touches[1].clientX-S,L=l.touches[1].clientY-I,B=F(A,P,M,L);if(B/T>=2.25||B>=22500){n.touchData.cxt=!1,n.data.bgActivePosistion=void 0,n.redrawHint("select",!0);var j={originalEvent:l,type:"cxttapend",position:{x:o[0],y:o[1]}};n.touchData.start?(n.touchData.start.unactivate().emit(j),n.touchData.start=null):i.emit(j)}}if(t&&n.touchData.cxt){j={originalEvent:l,type:"cxtdrag",position:{x:o[0],y:o[1]}};n.data.bgActivePosistion=void 0,n.redrawHint("select",!0),n.touchData.start?n.touchData.start.emit(j):i.emit(j),n.touchData.start&&(n.touchData.start._private.grabbed=!1),n.touchData.cxtDragged=!0;var U=n.findNearestElement(o[0],o[1],!0,!0);n.touchData.cxtOver&&U===n.touchData.cxtOver||(n.touchData.cxtOver&&n.touchData.cxtOver.emit({originalEvent:l,type:"cxtdragout",position:{x:o[0],y:o[1]}}),n.touchData.cxtOver=U,U&&U.emit({originalEvent:l,type:"cxtdragover",position:{x:o[0],y:o[1]}}))}else if(t&&l.touches[2]&&i.boxSelectionEnabled())l.preventDefault(),n.data.bgActivePosistion=void 0,this.lastThreeTouch=+new Date,n.touchData.selecting||i.emit({originalEvent:l,type:"boxstart",position:{x:o[0],y:o[1]}}),n.touchData.selecting=!0,n.redrawHint("select",!0),u&&0!==u.length&&void 0!==u[0]?(u[2]=(o[0]+o[2]+o[4])/3,u[3]=(o[1]+o[3]+o[5])/3):(u[0]=(o[0]+o[2]+o[4])/3,u[1]=(o[1]+o[3]+o[5])/3,u[2]=(o[0]+o[2]+o[4])/3+1,u[3]=(o[1]+o[3]+o[5])/3+1),u[4]=1,n.touchData.selecting=!0,n.redraw();else if(t&&l.touches[1]&&i.zoomingEnabled()&&i.panningEnabled()&&i.userZoomingEnabled()&&i.userPanningEnabled()){if(l.preventDefault(),n.data.bgActivePosistion=void 0,n.redrawHint("select",!0),nn=n.dragData.touchDragEles){n.redrawHint("drag",!0);for(var z=0;z<nn.length;z++){var q=nn[z]._private;q.grabbed=!1,q.rscratch.inDragLayer=!1}}var V=n.touchData.start,H=(A=l.touches[0].clientX-S,P=l.touches[0].clientY-I,M=l.touches[1].clientX-S,L=l.touches[1].clientY-I,R(A,P,M,L)),G=H/E;if(O){var Y=(A-m+(M-w))/2,W=(P-b+(L-_))/2,X=i.zoom(),K=X*G,$=i.pan(),Z=C[0]*X+$.x,Q=C[1]*X+$.y,J={x:-K/X*(Z-$.x-Y)+Z,y:-K/X*(Q-$.y-W)+Q};if(V&&V.active()){var nn=n.dragData.touchDragEles;h(nn),n.redrawHint("drag",!0),n.redrawHint("eles",!0),V.unactivate().emit("freeon"),nn.emit("free"),n.dragData.didDrag&&(V.emit("dragfreeon"),nn.emit("dragfree"))}i.viewport({zoom:K,pan:J,cancelOnFailedZoom:!0}),E=H,m=A,b=P,w=M,_=L,n.pinching=!0}if(l.touches[0]){d=n.projectIntoViewport(l.touches[0].clientX,l.touches[0].clientY);o[0]=d[0],o[1]=d[1]}if(l.touches[1]){d=n.projectIntoViewport(l.touches[1].clientX,l.touches[1].clientY);o[2]=d[0],o[3]=d[1]}if(l.touches[2]){d=n.projectIntoViewport(l.touches[2].clientX,l.touches[2].clientY);o[4]=d[0],o[5]=d[1]}}else if(l.touches[0]){var ln=n.touchData.start,en=n.touchData.last;if(n.hoverData.draggingEles||n.swipePanning||(U=n.findNearestElement(o[0],o[1],!0,!0)),t&&null!=ln&&l.preventDefault(),t&&null!=ln&&n.nodeIsDraggable(ln))if(f){nn=n.dragData.touchDragEles;var tn=!n.dragData.didDrag;tn&&s(nn,{inDragLayer:!0}),n.dragData.didDrag=!0;var un={x:0,y:0};if(x(g[0])&&x(g[1]))if(un.x+=g[0],un.y+=g[1],tn)n.redrawHint("eles",!0),(rn=n.touchData.dragDelta)&&x(rn[0])&&x(rn[1])&&(un.x+=rn[0],un.y+=rn[1]);n.hoverData.draggingEles=!0,nn.silentShift(un).emit("position drag"),n.redrawHint("drag",!0),n.touchData.startPosition[0]==a[0]&&n.touchData.startPosition[1]==a[1]&&n.redrawHint("eles",!0),n.redraw()}else{var rn;0===(rn=n.touchData.dragDelta=n.touchData.dragDelta||[]).length?(rn.push(g[0]),rn.push(g[1])):(rn[0]+=g[0],rn[1]+=g[1])}if(e(ln||U,["touchmove","tapdrag","vmousemove"],l,{x:o[0],y:o[1]}),ln&&ln.grabbed()||U==en||(en&&en.emit({originalEvent:l,type:"tapdragout",position:{x:o[0],y:o[1]}}),U&&U.emit({originalEvent:l,type:"tapdragover",position:{x:o[0],y:o[1]}})),n.touchData.last=U,t)for(z=0;z<o.length;z++)o[z]&&n.touchData.startPosition[z]&&f&&(n.touchData.singleTouchMoved=!0);if(t&&(null==ln||ln.isEdge())&&i.panningEnabled()&&i.userPanningEnabled()){r(ln,n.touchData.starts)&&(l.preventDefault(),n.swipePanning?i.panBy({x:g[0]*c,y:g[1]*c}):f&&(n.swipePanning=!0,i.panBy({x:k*c,y:D*c}),ln&&(ln.unactivate(),n.data.bgActivePosistion||(n.data.bgActivePosistion=zn(n.touchData.startPosition)),n.redrawHint("select",!0),n.touchData.start=null)));d=n.projectIntoViewport(l.touches[0].clientX,l.touches[0].clientY);o[0]=d[0],o[1]=d[1]}}for(v=0;v<o.length;v++)a[v]=o[v];t&&l.touches.length>0&&!n.hoverData.draggingEles&&!n.swipePanning&&null!=n.data.bgActivePosistion&&(n.data.bgActivePosistion=void 0,n.redrawHint("select",!0),n.redraw())}},!1),n.registerBinding(window,"touchcancel",M=function(l){var e=n.touchData.start;n.touchData.capture=!1,e&&e.unactivate()}),n.registerBinding(window,"touchend",L=function(t){var u=n.touchData.start;if(n.touchData.capture){0===t.touches.length&&(n.touchData.capture=!1),t.preventDefault();var r=n.selection;n.swipePanning=!1,n.hoverData.draggingEles=!1;var i,o=n.cy,a=o.zoom(),s=n.touchData.now,c=n.touchData.earlier;if(t.touches[0]){var d=n.projectIntoViewport(t.touches[0].clientX,t.touches[0].clientY);s[0]=d[0],s[1]=d[1]}if(t.touches[1]){d=n.projectIntoViewport(t.touches[1].clientX,t.touches[1].clientY);s[2]=d[0],s[3]=d[1]}if(t.touches[2]){d=n.projectIntoViewport(t.touches[2].clientX,t.touches[2].clientY);s[4]=d[0],s[5]=d[1]}if(u&&u.unactivate(),n.touchData.cxt){if(i={originalEvent:t,type:"cxttapend",position:{x:s[0],y:s[1]}},u?u.emit(i):o.emit(i),!n.touchData.cxtDragged){var f={originalEvent:t,type:"cxttap",position:{x:s[0],y:s[1]}};u?u.emit(f):o.emit(f)}return n.touchData.start&&(n.touchData.start._private.grabbed=!1),n.touchData.cxt=!1,n.touchData.start=null,void n.redraw()}if(!t.touches[2]&&o.boxSelectionEnabled()&&n.touchData.selecting){n.touchData.selecting=!1;var p=o.collection(n.getAllInBox(r[0],r[1],r[2],r[3]));r[0]=void 0,r[1]=void 0,r[2]=void 0,r[3]=void 0,r[4]=0,n.redrawHint("select",!0),o.emit({type:"boxend",originalEvent:t,position:{x:s[0],y:s[1]}});p.emit("box").stdFilter(function(n){return n.selectable()&&!n.selected()}).select().emit("boxselect"),p.nonempty()&&n.redrawHint("eles",!0),n.redraw()}if(null!=u&&u.unactivate(),t.touches[2])n.data.bgActivePosistion=void 0,n.redrawHint("select",!0);else if(t.touches[1]);else if(t.touches[0]);else if(!t.touches[0]){n.data.bgActivePosistion=void 0,n.redrawHint("select",!0);var g=n.dragData.touchDragEles;if(null!=u){var v=u._private.grabbed;h(g),n.redrawHint("drag",!0),n.redrawHint("eles",!0),v&&(u.emit("freeon"),g.emit("free"),n.dragData.didDrag&&(u.emit("dragfreeon"),g.emit("dragfree"))),e(u,["touchend","tapend","vmouseup","tapdragout"],t,{x:s[0],y:s[1]}),u.unactivate(),n.touchData.start=null}else{var y=n.findNearestElement(s[0],s[1],!0,!0);e(y,["touchend","tapend","vmouseup","tapdragout"],t,{x:s[0],y:s[1]})}var m=n.touchData.startPosition[0]-s[0],b=m*m,w=n.touchData.startPosition[1]-s[1],_=(b+w*w)*a*a;n.touchData.singleTouchMoved||(u||o.$(":selected").unselect(["tapunselect"]),e(u,["tap","vclick"],t,{x:s[0],y:s[1]})),null!=u&&!n.dragData.didDrag&&u._private.selectable&&_<n.touchTapThreshold2&&!n.pinching&&("single"===o.selectionType()?(o.$(l).unmerge(u).unselect(["tapunselect"]),u.select(["tapselect"])):u.selected()?u.unselect(["tapunselect"]):u.select(["tapselect"]),n.redrawHint("eles",!0)),n.touchData.singleTouchMoved=!0}for(var x=0;x<s.length;x++)c[x]=s[x];n.dragData.didDrag=!1,0===t.touches.length&&(n.touchData.dragDelta=[],n.touchData.startPosition=null,n.touchData.startGPosition=null),t.touches.length<2&&(n.pinching=!1,n.redrawHint("eles",!0),n.redraw())}},!1),"undefined"==typeof TouchEvent){var B=[],j=function(n){return{clientX:n.clientX,clientY:n.clientY,force:1,identifier:n.pointerId,pageX:n.pageX,pageY:n.pageY,radiusX:n.width/2,radiusY:n.height/2,screenX:n.screenX,screenY:n.screenY,target:n.target}},U=function(n){B.push(function(n){return{event:n,touch:j(n)}}(n))},z=function(n){for(var l=0;l<B.length;l++){if(B[l].event.pointerId===n.pointerId)return void B.splice(l,1)}},q=function(n){n.touches=B.map(function(n){return n.touch})},V=function(n){return"mouse"===n.pointerType||4===n.pointerType};n.registerBinding(n.container,"pointerdown",function(n){V(n)||(n.preventDefault(),U(n),q(n),A(n))}),n.registerBinding(n.container,"pointerup",function(n){V(n)||(z(n),q(n),L(n))}),n.registerBinding(n.container,"pointercancel",function(n){V(n)||(z(n),q(n),M())}),n.registerBinding(n.container,"pointermove",function(n){V(n)||(n.preventDefault(),function(n){var l=B.filter(function(l){return l.event.pointerId===n.pointerId})[0];l.event=n,l.touch=j(n)}(n),q(n),P(n))})}};var wi={generatePolygon:function(n,l){return this.nodeShapes[n]={renderer:this,name:n,points:l,draw:function(n,l,e,t,u){this.renderer.nodeShapeImpl("polygon",n,l,e,t,u,this.points)},intersectLine:function(n,l,e,t,u,r,i){return yl(u,r,this.points,n,l,e/2,t/2,i)},checkPoint:function(n,l,e,t,u,r,i){return cl(n,l,this.points,r,i,t,u,[0,-1],e)}}}};wi.generateEllipse=function(){return this.nodeShapes.ellipse={renderer:this,name:"ellipse",draw:function(n,l,e,t,u){this.renderer.nodeShapeImpl(this.name,n,l,e,t,u)},intersectLine:function(n,l,e,t,u,r,i){return function(n,l,e,t,u,r){var i=e-n,o=t-l;i/=u,o/=r;var a=Math.sqrt(i*i+o*o),s=a-1;if(s<0)return[];var c=s/a;return[(e-n)*c+n,(t-l)*c+l]}(u,r,n,l,e/2+i,t/2+i)},checkPoint:function(n,l,e,t,u,r,i){return fl(n,l,t,u,r,i,e)}}},wi.generateRoundRectangle=function(){return this.nodeShapes["round-rectangle"]=this.nodeShapes.roundrectangle={renderer:this,name:"round-rectangle",points:bl(4,0),draw:function(n,l,e,t,u){this.renderer.nodeShapeImpl(this.name,n,l,e,t,u)},intersectLine:function(n,l,e,t,u,r,i){return ul(u,r,n,l,e,t,i)},checkPoint:function(n,l,e,t,u,r,i){var o=xl(t,u),a=2*o;return!!cl(n,l,this.points,r,i,t,u-a,[0,-1],e)||(!!cl(n,l,this.points,r,i,t-a,u,[0,-1],e)||(!!fl(n,l,a,a,r-t/2+o,i-u/2+o,e)||(!!fl(n,l,a,a,r+t/2-o,i-u/2+o,e)||(!!fl(n,l,a,a,r+t/2-o,i+u/2-o,e)||!!fl(n,l,a,a,r-t/2+o,i+u/2-o,e)))))}}},wi.generateCutRectangle=function(){return this.nodeShapes["cut-rectangle"]=this.nodeShapes.cutrectangle={renderer:this,name:"cut-rectangle",cornerLength:8,points:bl(4,0),draw:function(n,l,e,t,u){this.renderer.nodeShapeImpl(this.name,n,l,e,t,u)},generateCutTrianglePts:function(n,l,e,t){var u=this.cornerLength,r=l/2,i=n/2,o=e-i,a=e+i,s=t-r,c=t+r;return{topLeft:[o,s+u,o+u,s,o+u,s+u],topRight:[a-u,s,a,s+u,a-u,s+u],bottomRight:[a,c-u,a-u,c,a-u,c-u],bottomLeft:[o+u,c,o,c-u,o+u,c-u]}},intersectLine:function(n,l,e,t,u,r,i){var o=this.generateCutTrianglePts(e+2*i,t+2*i,n,l),a=[].concat.apply([],[o.topLeft.splice(0,4),o.topRight.splice(0,4),o.bottomRight.splice(0,4),o.bottomLeft.splice(0,4)]);return yl(u,r,a,n,l)},checkPoint:function(n,l,e,t,u,r,i){if(cl(n,l,this.points,r,i,t,u-2*this.cornerLength,[0,-1],e))return!0;if(cl(n,l,this.points,r,i,t-2*this.cornerLength,u,[0,-1],e))return!0;var o=this.generateCutTrianglePts(t,u,r,i);return sl(n,l,o.topLeft)||sl(n,l,o.topRight)||sl(n,l,o.bottomRight)||sl(n,l,o.bottomLeft)}}},wi.generateBarrel=function(){return this.nodeShapes.barrel={renderer:this,name:"barrel",points:bl(4,0),draw:function(n,l,e,t,u){this.renderer.nodeShapeImpl(this.name,n,l,e,t,u)},intersectLine:function(n,l,e,t,u,r,i){var o=this.generateBarrelBezierPts(e+2*i,t+2*i,n,l),a=function(n){var l=Xn({x:n[0],y:n[1]},{x:n[2],y:n[3]},{x:n[4],y:n[5]},.15),e=Xn({x:n[0],y:n[1]},{x:n[2],y:n[3]},{x:n[4],y:n[5]},.5),t=Xn({x:n[0],y:n[1]},{x:n[2],y:n[3]},{x:n[4],y:n[5]},.85);return[n[0],n[1],l.x,l.y,e.x,e.y,t.x,t.y,n[4],n[5]]},s=[].concat(a(o.topLeft),a(o.topRight),a(o.bottomRight),a(o.bottomLeft));return yl(u,r,s,n,l)},generateBarrelBezierPts:function(n,l,e,t){var u=l/2,r=n/2,i=e-r,o=e+r,a=t-u,s=t+u,c=El(n,l),h=c.heightOffset,d=c.widthOffset,f=c.ctrlPtOffsetPct*n,p={topLeft:[i,a+h,i+f,a,i+d,a],topRight:[o-d,a,o-f,a,o,a+h],bottomRight:[o,s-h,o-f,s,o-d,s],bottomLeft:[i+d,s,i+f,s,i,s-h]};return p.topLeft.isTop=!0,p.topRight.isTop=!0,p.bottomLeft.isBottom=!0,p.bottomRight.isBottom=!0,p},checkPoint:function(n,l,e,t,u,r,i){var o=El(t,u),a=o.heightOffset,s=o.widthOffset;if(cl(n,l,this.points,r,i,t,u-2*a,[0,-1],e))return!0;if(cl(n,l,this.points,r,i,t-2*s,u,[0,-1],e))return!0;for(var c=this.generateBarrelBezierPts(t,u,r,i),h=function(n,l,e){var t,u,r=e[4],i=e[2],o=e[0],a=e[5],s=e[1],c=Math.min(r,o),h=Math.max(r,o),d=Math.min(a,s),f=Math.max(a,s);if(c<=n&&n<=h&&d<=l&&l<=f){var p=[(t=r)-2*(u=i)+o,2*(u-t),t],g=function(n,l,e,t){var u=l*l-4*n*(e-=t);if(u<0)return[];var r=Math.sqrt(u),i=2*n;return[(-l+r)/i,(-l-r)/i]}(p[0],p[1],p[2],n).filter(function(n){return 0<=n&&n<=1});if(g.length>0)return g[0]}return null},d=Object.keys(c),f=0;f<d.length;f++){var p=c[d[f]],g=h(n,l,p);if(null!=g){var v=p[5],y=p[3],m=p[1],b=Wn(v,y,m,g);if(p.isTop&&b<=l)return!0;if(p.isBottom&&l<=b)return!0}}return!1}}},wi.generateBottomRoundrectangle=function(){return this.nodeShapes["bottom-round-rectangle"]=this.nodeShapes.bottomroundrectangle={renderer:this,name:"bottom-round-rectangle",points:bl(4,0),draw:function(n,l,e,t,u){this.renderer.nodeShapeImpl(this.name,n,l,e,t,u)},intersectLine:function(n,l,e,t,u,r,i){var o=l-(t/2+i),a=vl(u,r,n,l,n-(e/2+i),o,n+(e/2+i),o,!1);return a.length>0?a:ul(u,r,n,l,e,t,i)},checkPoint:function(n,l,e,t,u,r,i){var o=xl(t,u),a=2*o;if(cl(n,l,this.points,r,i,t,u-a,[0,-1],e))return!0;if(cl(n,l,this.points,r,i,t-a,u,[0,-1],e))return!0;var s=t/2+2*e,c=u/2+2*e;return!!sl(n,l,[r-s,i-c,r-s,i,r+s,i,r+s,i-c])||(!!fl(n,l,a,a,r+t/2-o,i+u/2-o,e)||!!fl(n,l,a,a,r-t/2+o,i+u/2-o,e))}}},wi.registerNodeShapes=function(){var n=this.nodeShapes={},l=this;this.generateEllipse(),this.generatePolygon("triangle",bl(3,0)),this.generatePolygon("rectangle",bl(4,0)),n.square=n.rectangle,this.generateRoundRectangle(),this.generateCutRectangle(),this.generateBarrel(),this.generateBottomRoundrectangle(),this.generatePolygon("diamond",[0,1,1,0,0,-1,-1,0]),this.generatePolygon("pentagon",bl(5,0)),this.generatePolygon("hexagon",bl(6,0)),this.generatePolygon("heptagon",bl(7,0)),this.generatePolygon("octagon",bl(8,0));var e=new Array(20),t=_l(5,0),u=_l(5,Math.PI/5),r=.5*(3-Math.sqrt(5));r*=1.57;for(var i=0;i<u.length/2;i++)u[2*i]*=r,u[2*i+1]*=r;for(i=0;i<5;i++)e[4*i]=t[2*i],e[4*i+1]=t[2*i+1],e[4*i+2]=u[2*i],e[4*i+3]=u[2*i+1];e=wl(e),this.generatePolygon("star",e),this.generatePolygon("vee",[-1,-1,0,-.333,1,-1,0,1]),this.generatePolygon("rhomboid",[-1,-1,.333,-1,1,1,-.333,1]),this.nodeShapes.concavehexagon=this.generatePolygon("concave-hexagon",[-1,-.95,-.75,0,-1,.95,1,.95,.75,0,1,-.95]),this.generatePolygon("tag",[-1,-1,.25,-1,1,0,.25,1,-1,1]),n.makePolygon=function(n){var e,t="polygon-"+n.join("$");return(e=this[t])?e:l.generatePolygon(t,n)}};var _i={timeToRender:function(){return this.redrawTotalTime/this.redrawCount},redraw:function(n){n=n||pn();var l=this;void 0===l.averageRedrawTime&&(l.averageRedrawTime=0),void 0===l.lastRedrawTime&&(l.lastRedrawTime=0),void 0===l.lastDrawTime&&(l.lastDrawTime=0),l.requestedFrame=!0,l.renderOptions=n},beforeRender:function(n,l){if(!this.destroyed){l=l||0;var e=this.beforeRenderCallbacks;e.push({fn:n,priority:l}),e.sort(function(n,l){return l.priority-n.priority})}}},xi=function(n,l,e){for(var t=n.beforeRenderCallbacks,u=0;u<t.length;u++)t[u].fn(l,e)};_i.startRenderLoop=function(){var n=this,l=n.cy;if(!n.renderLoopStarted){n.renderLoopStarted=!0;W(function e(t){if(!n.destroyed){if(l.batching());else if(n.requestedFrame&&!n.skipFrame){xi(n,!0,t);var u=X();n.render(n.renderOptions);var r=n.lastDrawTime=X();void 0===n.averageRedrawTime&&(n.averageRedrawTime=r-u),void 0===n.redrawCount&&(n.redrawCount=0),n.redrawCount++,void 0===n.redrawTotalTime&&(n.redrawTotalTime=0);var i=r-u;n.redrawTotalTime+=i,n.lastRedrawTime=i,n.averageRedrawTime=n.averageRedrawTime/2+i/2,n.requestedFrame=!1}else xi(n,!1,t);n.skipFrame=!1,W(e)}})}};var Ei=function(n){this.init(n)},Ti=Ei.prototype;Ti.clientFunctions=["redrawHint","render","renderTo","matchCanvasSize","nodeShapeImpl","arrowShapeImpl"],Ti.init=function(n){var l=this;l.options=n,l.cy=n.cy;var e=l.container=n.cy.container();if(h){var t=h.document,u=t.head,r="__________cytoscape_container",i=null!=t.getElementById("__________cytoscape_stylesheet");if(e.className.indexOf(r)<0&&(e.className=(e.className||"")+" "+r),!i){var o=t.createElement("style");o.id="__________cytoscape_stylesheet",o.innerHTML="."+r+" { position: relative; }",u.insertBefore(o,u.children[0])}"static"===h.getComputedStyle(e).getPropertyValue("position")&&cn("A Cytoscape container has style position:static and so can not use UI extensions properly")}l.selection=[void 0,void 0,void 0,void 0,0],l.bezierProjPcts=[.05,.225,.4,.5,.6,.775,.95],l.hoverData={down:null,last:null,downTime:null,triggerMode:null,dragging:!1,initialPan:[null,null],capture:!1},l.dragData={possibleDragElements:[]},l.touchData={start:null,capture:!1,startPosition:[null,null,null,null,null,null],singleTouchStartTime:null,singleTouchMoved:!0,now:[null,null,null,null,null,null],earlier:[null,null,null,null,null,null]},l.redraws=0,l.showFps=n.showFps,l.debug=n.debug,l.hideEdgesOnViewport=n.hideEdgesOnViewport,l.hideLabelsOnViewport=n.hideLabelsOnViewport,l.textureOnViewport=n.textureOnViewport,l.wheelSensitivity=n.wheelSensitivity,l.motionBlurEnabled=n.motionBlur,l.forcedPixelRatio=n.pixelRatio,l.motionBlur=n.motionBlur,l.motionBlurOpacity=n.motionBlurOpacity,l.motionBlurTransparency=1-l.motionBlurOpacity,l.motionBlurPxRatio=1,l.mbPxRBlurry=1,l.minMbLowQualFrames=4,l.fullQualityMb=!1,l.clearedForMotionBlur=[],l.desktopTapThreshold=n.desktopTapThreshold,l.desktopTapThreshold2=n.desktopTapThreshold*n.desktopTapThreshold,l.touchTapThreshold=n.touchTapThreshold,l.touchTapThreshold2=n.touchTapThreshold*n.touchTapThreshold,l.tapholdDuration=500,l.bindings=[],l.beforeRenderCallbacks=[],l.beforeRenderPriorities={animations:400,eleCalcs:300,eleTxrDeq:200,lyrTxrDeq:100},l.registerNodeShapes(),l.registerArrowShapes(),l.registerCalculationListeners()},Ti.notify=function(n,l){var e=this,t=e.cy;this.destroyed||("init"!==n?"destroy"!==n?(("add"===n||"remove"===n||"move"===n&&t.hasCompoundNodes()||"load"===n||"zorder"===n||"mount"===n)&&e.invalidateCachedZSortedEles(),"viewport"===n&&e.redrawHint("select",!0),"load"!==n&&"resize"!==n&&"mount"!==n||(e.invalidateContainerClientCoordsCache(),e.matchCanvasSize(e.container)),e.redrawHint("eles",!0),e.redrawHint("drag",!0),this.startRenderLoop(),this.redraw()):e.destroy():e.load())},Ti.destroy=function(){var n=this;n.destroyed=!0,n.cy.stopAnimationLoop();for(var l=0;l<n.bindings.length;l++){var e=n.bindings[l],t=e.target;(t.off||t.removeEventListener).apply(t,e.args)}if(n.bindings=[],n.beforeRenderCallbacks=[],n.onUpdateEleCalcsFns=[],n.removeObserver&&n.removeObserver.disconnect(),n.styleObserver&&n.styleObserver.disconnect(),n.labelCalcDiv)try{document.body.removeChild(n.labelCalcDiv)}catch(n){}},Ti.isHeadless=function(){return!1},[ei,yi,mi,bi,wi,_i].forEach(function(n){j(Ti,n)});var ki=function(n){return function(){var l=this,e=this.renderer;if(!l.dequeueingSetup){l.dequeueingSetup=!0;var t=u(function(){e.redrawHint("eles",!0),e.redrawHint("drag",!0),e.redraw()},n.deqRedrawThreshold),r=n.priority||an;e.beforeRender(function(u,r){for(var i=X(),o=e.averageRedrawTime,a=e.lastRedrawTime,s=[],c=e.cy.extent(),h=e.getPixelRatio();;){var d=X(),f=d-i,p=d-r;if(a<1e3/60){var g=1e3/60-(u?o:0);if(p>=n.deqFastCost*g)break}else if(u){if(f>=n.deqCost*a||f>=n.deqAvgCost*o)break}else if(p>=n.deqNoDrawCost*(1e3/60))break;var v=n.deq(l,h,c);if(!(v.length>0))break;for(var y=0;y<v.length;y++)s.push(v[y])}s.length>0&&(n.onDeqd(l,s),!u&&n.shouldRedraw(l,s,h,c)&&t())},r(l))}}},Ci=function(){function n(l){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:rn;o(this,n),this.idsByKey=new wn,this.keyForId=new wn,this.cachesByLvl=new wn,this.lvls=[],this.getKey=l,this.doesEleInvalidateKey=e}return s(n,[{key:"getIdsFor",value:function(n){null==n&&sn("Can not get id list for null key");var l=this.idsByKey,e=this.idsByKey.get(n);return e||(e=new xn,l.set(n,e)),e}},{key:"addIdForKey",value:function(n,l){null!=n&&this.getIdsFor(n).add(l)}},{key:"deleteIdForKey",value:function(n,l){null!=n&&this.getIdsFor(n).delete(l)}},{key:"getNumberOfIdsForKey",value:function(n){return null==n?0:this.getIdsFor(n).size}},{key:"updateKeyMappingFor",value:function(n){var l=n.id(),e=this.keyForId.get(l),t=this.getKey(n);this.deleteIdForKey(e,l),this.addIdForKey(t,l),this.keyForId.set(l,t)}},{key:"deleteKeyMappingFor",value:function(n){var l=n.id(),e=this.keyForId.get(l);this.deleteIdForKey(e,l),this.keyForId.delete(l)}},{key:"keyHasChangedFor",value:function(n){var l=n.id();return this.keyForId.get(l)!==this.getKey(n)}},{key:"isInvalid",value:function(n){return this.keyHasChangedFor(n)||this.doesEleInvalidateKey(n)}},{key:"getCachesAt",value:function(n){var l=this.cachesByLvl,e=this.lvls,t=l.get(n);return t||(t=new wn,l.set(n,t),e.push(n)),t}},{key:"getCache",value:function(n,l){return this.getCachesAt(l).get(n)}},{key:"get",value:function(n,l){var e=this.getKey(n),t=this.getCache(e,l);return null!=t&&this.updateKeyMappingFor(n),t}},{key:"getForCachedKey",value:function(n,l){var e=this.keyForId.get(n.id());return this.getCache(e,l)}},{key:"hasCache",value:function(n,l){return this.getCachesAt(l).has(n)}},{key:"has",value:function(n,l){var e=this.getKey(n);return this.hasCache(e,l)}},{key:"setCache",value:function(n,l,e){e.key=n,this.getCachesAt(l).set(n,e)}},{key:"set",value:function(n,l,e){var t=this.getKey(n);this.setCache(t,l,e),this.updateKeyMappingFor(n)}},{key:"deleteCache",value:function(n,l){this.getCachesAt(l).delete(n)}},{key:"delete",value:function(n,l){var e=this.getKey(n);this.deleteCache(e,l)}},{key:"invalidateKey",value:function(n){var l=this;this.lvls.forEach(function(e){return l.deleteCache(n,e)})}},{key:"invalidate",value:function(n){var l=n.id(),e=this.keyForId.get(l);this.deleteKeyMappingFor(n);var t=this.doesEleInvalidateKey(n);return t&&this.invalidateKey(e),t||0===this.getNumberOfIdsForKey(e)}}]),n}(),Si={dequeue:"dequeue",downscale:"downscale",highQuality:"highQuality"},Ii=gn({getKey:null,doesEleInvalidateKey:rn,drawElement:null,getBoundingBox:null,getRotationPoint:null,getRotationOffset:null,isVisible:un,allowEdgeTxrCaching:!0,allowParentTxrCaching:!0}),Ni=function(n,l){this.renderer=n,this.onDequeues=[];var e=Ii(l);j(this,e),this.lookup=new Ci(e.getKey,e.doesEleInvalidateKey),this.setupDequeueing()},Di=Ni.prototype;Di.reasons=Si,Di.getTextureQueue=function(n){return this.eleImgCaches=this.eleImgCaches||{},this.eleImgCaches[n]=this.eleImgCaches[n]||[]},Di.getRetiredTextureQueue=function(n){var l=this.eleImgCaches.retired=this.eleImgCaches.retired||{};return l[n]=l[n]||[]},Di.getElementQueue=function(){return this.eleCacheQueue=this.eleCacheQueue||new r(function(n,l){return l.reqs-n.reqs})},Di.getElementKeyToQueue=function(){return this.eleKeyToCacheQueue=this.eleKeyToCacheQueue||{}},Di.getElement=function(n,l,e,t,u){var r=this,i=this.renderer,o=i.cy.zoom(),a=this.lookup;if(0===l.w||0===l.h||isNaN(l.w)||isNaN(l.h)||!n.visible())return null;if(!r.allowEdgeTxrCaching&&n.isEdge()||!r.allowParentTxrCaching&&n.isParent())return null;if(null==t&&(t=Math.ceil(Vn(o*e))),t<-4)t=-4;else if(o>=7.99||t>3)return null;var s=Math.pow(2,t),c=l.h*s,h=l.w*s,d=i.eleTextBiggerThanMin(n,s);if(!this.isVisible(n,d))return null;var f,p=a.get(n,t);if(p&&p.invalidated&&(p.invalidated=!1,p.texture.invalidatedWidth-=p.width),p)return p;if(f=c<=25?25:c<=50?50:50*Math.ceil(c/50),c>1024||h>1024)return null;var g=r.getTextureQueue(f),v=g[g.length-2],y=function(){return r.recycleTexture(f,h)||r.addTexture(f,h)};v||(v=g[g.length-1]),v||(v=y()),v.width-v.usedWidth<h&&(v=y());for(var m,b=function(n){return n&&n.scaledLabelShown===d},w=u&&u===Si.dequeue,_=u&&u===Si.highQuality,x=u&&u===Si.downscale,E=t+1;E<=3;E++){var T=a.get(n,E);if(T){m=T;break}}var k=m&&m.level===t+1?m:null,C=function(){v.context.drawImage(k.texture.canvas,k.x,0,k.width,k.height,v.usedWidth,0,h,c)};if(v.context.setTransform(1,0,0,1,0,0),v.context.clearRect(v.usedWidth,0,h,f),b(k))C();else if(b(m)){if(!_)return r.queueElement(n,m.level-1),m;for(var S=m.level;S>t;S--)k=r.getElement(n,l,e,S,Si.downscale);C()}else{var I;if(!w&&!_&&!x)for(var N=t-1;N>=-4;N--){var D=a.get(n,N);if(D){I=D;break}}if(b(I))return r.queueElement(n,t),I;v.context.translate(v.usedWidth,0),v.context.scale(s,s),this.drawElement(v.context,n,l,d,!1),v.context.scale(1/s,1/s),v.context.translate(-v.usedWidth,0)}return p={x:v.usedWidth,texture:v,level:t,scale:s,width:h,height:c,scaledLabelShown:d},v.usedWidth+=Math.ceil(h+8),v.eleCaches.push(p),a.set(n,t,p),r.checkTextureFullness(v),p},Di.invalidateElements=function(n){for(var l=0;l<n.length;l++)this.invalidateElement(n[l])},Di.invalidateElement=function(n){var l=this.lookup,e=[];if(l.isInvalid(n)){for(var t=-4;t<=3;t++){var u=l.getForCachedKey(n,t);u&&e.push(u)}if(l.invalidate(n))for(var r=0;r<e.length;r++){var i=e[r],o=i.texture;o.invalidatedWidth+=i.width,i.invalidated=!0,this.checkTextureUtility(o)}this.removeFromQueue(n)}},Di.checkTextureUtility=function(n){n.invalidatedWidth>=.2*n.width&&this.retireTexture(n)},Di.checkTextureFullness=function(n){var l=this.getTextureQueue(n.height);n.usedWidth/n.width>.8&&n.fullnessChecks>=10?vn(l,n):n.fullnessChecks++},Di.retireTexture=function(n){var l=n.height,e=this.getTextureQueue(l),t=this.lookup;vn(e,n),n.retired=!0;for(var u=n.eleCaches,r=0;r<u.length;r++){var i=u[r];t.deleteCache(i.key,i.level)}yn(u),this.getRetiredTextureQueue(l).push(n)},Di.addTexture=function(n,l){var e={};return this.getTextureQueue(n).push(e),e.eleCaches=[],e.height=n,e.width=Math.max(1024,l),e.usedWidth=0,e.invalidatedWidth=0,e.fullnessChecks=0,e.canvas=this.renderer.makeOffscreenCanvas(e.width,e.height),e.context=e.canvas.getContext("2d"),e},Di.recycleTexture=function(n,l){for(var e=this.getTextureQueue(n),t=this.getRetiredTextureQueue(n),u=0;u<t.length;u++){var r=t[u];if(r.width>=l)return r.retired=!1,r.usedWidth=0,r.invalidatedWidth=0,r.fullnessChecks=0,yn(r.eleCaches),r.context.setTransform(1,0,0,1,0,0),r.context.clearRect(0,0,r.width,r.height),vn(t,r),e.push(r),r}},Di.queueElement=function(n,l){var e=this.getElementQueue(),t=this.getElementKeyToQueue(),u=this.getKey(n),r=t[u];if(r)r.level=Math.max(r.level,l),r.eles.merge(n),r.reqs++,e.updateItem(r);else{var i={eles:n.spawn().merge(n),level:l,reqs:1,key:u};e.push(i),t[u]=i}},Di.dequeue=function(n){for(var l=this.getElementQueue(),e=this.getElementKeyToQueue(),t=[],u=this.lookup,r=0;r<1&&l.size()>0;r++){var i=l.pop(),o=i.key,a=i.eles[0],s=u.hasCache(a,i.level);if(e[o]=null,!s){t.push(i);var c=this.getBoundingBox(a);this.getElement(a,c,n,i.level,Si.dequeue)}}return t},Di.removeFromQueue=function(n){var l=this.getElementQueue(),e=this.getElementKeyToQueue(),t=this.getKey(n),u=e[t];null!=u&&(1===u.eles.length?(u.reqs=tn,l.updateItem(u),l.pop(),e[t]=null):u.eles.unmerge(n))},Di.onDequeue=function(n){this.onDequeues.push(n)},Di.offDequeue=function(n){vn(this.onDequeues,n)},Di.setupDequeueing=ki({deqRedrawThreshold:100,deqCost:.15,deqAvgCost:.1,deqNoDrawCost:.9,deqFastCost:.9,deq:function(n,l,e){return n.dequeue(l,e)},onDeqd:function(n,l){for(var e=0;e<n.onDequeues.length;e++){(0,n.onDequeues[e])(l)}},shouldRedraw:function(n,l,e,t){for(var u=0;u<l.length;u++)for(var r=l[u].eles,i=0;i<r.length;i++){var o=r[i].boundingBox();if(ll(o,t))return!0}return!1},priority:function(n){return n.renderer.beforeRenderPriorities.eleTxrDeq}});var Oi=function(n){var l=this,e=l.renderer=n,t=e.cy;l.layersByLevel={},l.firstGet=!0,l.lastInvalidationTime=X()-500,l.skipping=!1,l.eleTxrDeqs=t.collection(),l.scheduleElementRefinement=u(function(){l.refineElementTextures(l.eleTxrDeqs),l.eleTxrDeqs.unmerge(l.eleTxrDeqs)},50),e.beforeRender(function(n,e){e-l.lastInvalidationTime<=250?l.skipping=!0:l.skipping=!1});l.layersQueue=new r(function(n,l){return l.reqs-n.reqs}),l.setupDequeueing()},Ai=Oi.prototype,Pi=0,Mi=Math.pow(2,53)-1;Ai.makeLayer=function(n,l){var e=Math.pow(2,l),t=Math.ceil(n.w*e),u=Math.ceil(n.h*e),r=this.renderer.makeOffscreenCanvas(t,u),i={id:Pi=++Pi%Mi,bb:n,level:l,width:t,height:u,canvas:r,context:r.getContext("2d"),eles:[],elesQueue:[],reqs:0},o=i.context,a=-i.bb.x1,s=-i.bb.y1;return o.scale(e,e),o.translate(a,s),i},Ai.getLayers=function(n,l,e){var t=this,u=t.renderer.cy.zoom(),r=t.firstGet;if(t.firstGet=!1,null==e)if((e=Math.ceil(Vn(u*l)))<-4)e=-4;else if(u>=3.99||e>2)return null;t.validateLayersElesOrdering(e,n);var i,o,a=t.layersByLevel,s=Math.pow(2,e),c=a[e]=a[e]||[];if(t.levelIsComplete(e,n))return c;!function(){var l=function(l){if(t.validateLayersElesOrdering(l,n),t.levelIsComplete(l,n))return o=a[l],!0},u=function(n){if(!o)for(var t=e+n;-4<=t&&t<=2&&!l(t);t+=n);};u(1),u(-1);for(var r=c.length-1;r>=0;r--){var i=c[r];i.invalid&&vn(c,i)}}();var h=function(l){var u=(l=l||{}).after;if(function(){if(!i){i=$n();for(var l=0;l<n.length;l++)e=i,t=n[l].boundingBox(),e.x1=Math.min(e.x1,t.x1),e.x2=Math.max(e.x2,t.x2),e.w=e.x2-e.x1,e.y1=Math.min(e.y1,t.y1),e.y2=Math.max(e.y2,t.y2),e.h=e.y2-e.y1}var e,t}(),i.w*s*(i.h*s)>16e6)return null;var r=t.makeLayer(i,e);if(null!=u){var o=c.indexOf(u)+1;c.splice(o,0,r)}else(void 0===l.insert||l.insert)&&c.unshift(r);return r};if(t.skipping&&!r)return null;for(var d=null,f=n.length/1,p=!r,g=0;g<n.length;g++){var v=n[g],y=v._private.rscratch,m=y.imgLayerCaches=y.imgLayerCaches||{},b=m[e];if(b)d=b;else{if((!d||d.eles.length>=f||!tl(d.bb,v.boundingBox()))&&!(d=h({insert:!0,after:d})))return null;o||p?t.queueLayer(d,v):t.drawEleInLayer(d,v,e,l),d.eles.push(v),m[e]=d}}return o||(p?null:c)},Ai.getEleLevelForLayerLevel=function(n,l){return n},Ai.drawEleInLayer=function(n,l,e,t){var u=this.renderer,r=n.context,i=l.boundingBox();0!==i.w&&0!==i.h&&l.visible()&&(e=this.getEleLevelForLayerLevel(e,t),u.setImgSmoothing(r,!1),u.drawCachedElement(r,l,null,null,e,!0),u.setImgSmoothing(r,!0))},Ai.levelIsComplete=function(n,l){var e=this.layersByLevel[n];if(!e||0===e.length)return!1;for(var t=0,u=0;u<e.length;u++){var r=e[u];if(r.reqs>0)return!1;if(r.invalid)return!1;t+=r.eles.length}return t===l.length},Ai.validateLayersElesOrdering=function(n,l){var e=this.layersByLevel[n];if(e)for(var t=0;t<e.length;t++){for(var u=e[t],r=-1,i=0;i<l.length;i++)if(u.eles[0]===l[i]){r=i;break}if(r<0)this.invalidateLayer(u);else{var o=r;for(i=0;i<u.eles.length;i++)if(u.eles[i]!==l[o+i]){this.invalidateLayer(u);break}}}},Ai.updateElementsInLayers=function(n,l){for(var e=k(n[0]),t=0;t<n.length;t++)for(var u=e?null:n[t],r=e?n[t]:n[t].ele,i=r._private.rscratch,o=i.imgLayerCaches=i.imgLayerCaches||{},a=-4;a<=2;a++){var s=o[a];s&&(u&&this.getEleLevelForLayerLevel(s.level)!==u.level||l(s,r,u))}},Ai.haveLayers=function(){for(var n=!1,l=-4;l<=2;l++){var e=this.layersByLevel[l];if(e&&e.length>0){n=!0;break}}return n},Ai.invalidateElements=function(n){var l=this;0!==n.length&&(l.lastInvalidationTime=X(),0!==n.length&&l.haveLayers()&&l.updateElementsInLayers(n,function(n,e,t){l.invalidateLayer(n)}))},Ai.invalidateLayer=function(n){if(this.lastInvalidationTime=X(),!n.invalid){var l=n.level,e=n.eles,t=this.layersByLevel[l];vn(t,n),n.elesQueue=[],n.invalid=!0,n.replacement&&(n.replacement.invalid=!0);for(var u=0;u<e.length;u++){var r=e[u]._private.rscratch.imgLayerCaches;r&&(r[l]=null)}}},Ai.refineElementTextures=function(n){var l=this;l.updateElementsInLayers(n,function(n,e,t){var u=n.replacement;if(u||((u=n.replacement=l.makeLayer(n.bb,n.level)).replaces=n,u.eles=n.eles),!u.reqs)for(var r=0;r<u.eles.length;r++)l.queueLayer(u,u.eles[r])})},Ai.enqueueElementRefinement=function(n){this.eleTxrDeqs.merge(n),this.scheduleElementRefinement()},Ai.queueLayer=function(n,l){var e=this.layersQueue,t=n.elesQueue,u=t.hasId=t.hasId||{};if(!n.replacement){if(l){if(u[l.id()])return;t.push(l),u[l.id()]=!0}n.reqs?(n.reqs++,e.updateItem(n)):(n.reqs=1,e.push(n))}},Ai.dequeue=function(n){for(var l=this.layersQueue,e=[],t=0;t<1&&0!==l.size();){var u=l.peek();if(u.replacement)l.pop();else if(u.replaces&&u!==u.replaces.replacement)l.pop();else if(u.invalid)l.pop();else{var r=u.elesQueue.shift();r&&(this.drawEleInLayer(u,r,u.level,n),t++),0===e.length&&e.push(!0),0===u.elesQueue.length&&(l.pop(),u.reqs=0,u.replaces&&this.applyLayerReplacement(u),this.requestRedraw())}}return e},Ai.applyLayerReplacement=function(n){var l=this.layersByLevel[n.level],e=n.replaces,t=l.indexOf(e);if(!(t<0||e.invalid)){l[t]=n;for(var u=0;u<n.eles.length;u++){var r=n.eles[u]._private,i=r.imgLayerCaches=r.imgLayerCaches||{};i&&(i[n.level]=n)}this.requestRedraw()}},Ai.requestRedraw=u(function(){var n=this.renderer;n.redrawHint("eles",!0),n.redrawHint("drag",!0),n.redraw()},100),Ai.setupDequeueing=ki({deqRedrawThreshold:50,deqCost:.15,deqAvgCost:.1,deqNoDrawCost:.9,deqFastCost:.9,deq:function(n,l){return n.dequeue(l)},onDeqd:an,shouldRedraw:un,priority:function(n){return n.renderer.beforeRenderPriorities.lyrTxrDeq}});var Li,Ri={};function Fi(n,l){for(var e=0;e<l.length;e++){var t=l[e];n.lineTo(t.x,t.y)}}function Bi(n,l,e){for(var t,u=0;u<l.length;u++){var r=l[u];0===u&&(t=r),n.lineTo(r.x,r.y)}n.quadraticCurveTo(e.x,e.y,t.x,t.y)}function ji(n,l,e){n.beginPath&&n.beginPath();for(var t=l,u=0;u<t.length;u++){var r=t[u];n.lineTo(r.x,r.y)}var i=e,o=e[0];n.moveTo(o.x,o.y);for(u=1;u<i.length;u++){r=i[u];n.lineTo(r.x,r.y)}n.closePath&&n.closePath()}function Ui(n,l,e,t){n.arc(l,e,t,0,2*Math.PI,!1)}Ri.arrowShapeImpl=function(n){return(Li||(Li={polygon:Fi,"triangle-backcurve":Bi,"triangle-tee":ji,"triangle-cross":ji,circle:Ui}))[n]};var zi={drawElement:function(n,l,e,t,u,r){l.isNode()?this.drawNode(n,l,e,t,u,r):this.drawEdge(n,l,e,t,u,r)},drawElementOverlay:function(n,l){l.isNode()?this.drawNodeOverlay(n,l):this.drawEdgeOverlay(n,l)},drawCachedElementPortion:function(n,l,e,t,u,r,i){var o=this,a=e.getBoundingBox(l);if(0!==a.w&&0!==a.h){var s=e.getElement(l,a,t,u,r);if(null!=s){var c=l.pstyle("opacity").pfValue;if(0===c)return;var h,d,f,p,g,v,y=i(o,l),m=a.x1,b=a.y1,w=a.w,_=a.h;if(0!==y){var x=e.getRotationPoint(l);f=x.x,p=x.y,n.translate(f,p),n.rotate(y),(g=o.getImgSmoothing(n))||o.setImgSmoothing(n,!0);var E=e.getRotationOffset(l);h=E.x,d=E.y}else h=m,d=b;1!==c&&(v=n.globalAlpha,n.globalAlpha=v*c),n.drawImage(s.texture.canvas,s.x,0,s.width,s.height,h,d,w,_),1!==c&&(n.globalAlpha=v),0!==y&&(n.rotate(-y),n.translate(-f,-p),g||o.setImgSmoothing(n,!1))}else e.drawElement(n,l)}}},qi=function(){return 0},Vi=function(n,l){return n.getTextAngle(l,null)},Hi=function(n,l){return n.getTextAngle(l,"source")},Gi=function(n,l){return n.getTextAngle(l,"target")};zi.drawCachedElement=function(n,l,e,t,u,r){var i=this,o=i.data,a=o.eleTxrCache,s=o.lblTxrCache,c=o.slbTxrCache,h=o.tlbTxrCache,d=l.boundingBox(),f=!0===r?a.reasons.highQuality:null;0!==d.w&&0!==d.h&&l.visible()&&(t&&!ll(d,t)||(i.drawCachedElementPortion(n,l,a,e,u,f,qi),i.drawCachedElementPortion(n,l,s,e,u,f,Vi),l.isEdge()&&(i.drawCachedElementPortion(n,l,c,e,u,f,Hi),i.drawCachedElementPortion(n,l,h,e,u,f,Gi)),i.drawElementOverlay(n,l)))},zi.drawElements=function(n,l){for(var e=0;e<l.length;e++){var t=l[e];this.drawElement(n,t)}},zi.drawCachedElements=function(n,l,e,t){for(var u=0;u<l.length;u++){var r=l[u];this.drawCachedElement(n,r,e,t)}},zi.drawCachedNodes=function(n,l,e,t){for(var u=0;u<l.length;u++){var r=l[u];r.isNode()&&this.drawCachedElement(n,r,e,t)}},zi.drawLayeredElements=function(n,l,e,t){var u=this.data.lyrTxrCache.getLayers(l,e);if(u)for(var r=0;r<u.length;r++){var i=u[r],o=i.bb;0!==o.w&&0!==o.h&&n.drawImage(i.canvas,o.x1,o.y1,o.w,o.h)}else this.drawCachedElements(n,l,e,t)};var Yi={drawEdge:function(n,l,e){var t=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],u=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i=this,o=l._private.rscratch;if(l.visible()&&!o.badLine&&null!=o.allpts&&!isNaN(o.allpts[0])){var a;e&&(a=e,n.translate(-a.x1,-a.y1));var s=r?l.pstyle("opacity").value:1,c=l.pstyle("line-style").value,h=l.pstyle("width").pfValue,d=l.pstyle("line-cap").value,f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s;n.lineWidth=h,n.lineCap=d,i.eleStrokeStyle(n,l,e),i.drawEdgePath(l,n,o.allpts,c),n.lineCap="butt"},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s;i.drawArrowheads(n,l,e)};if(n.lineJoin="round","yes"===l.pstyle("ghost").value){var g=l.pstyle("ghost-offset-x").pfValue,v=l.pstyle("ghost-offset-y").pfValue,y=l.pstyle("ghost-opacity").value,m=s*y;n.translate(g,v),f(m),p(m),n.translate(-g,-v)}f(),p(),u&&i.drawEdgeOverlay(n,l),i.drawElementText(n,l,null,t),e&&n.translate(a.x1,a.y1)}},drawEdgeOverlay:function(n,l){if(l.visible()){var e=l.pstyle("overlay-opacity").value;if(0!==e){var t=this,u=t.usePaths(),r=l._private.rscratch,i=2*l.pstyle("overlay-padding").pfValue,o=l.pstyle("overlay-color").value;n.lineWidth=i,"self"!==r.edgeType||u?n.lineCap="round":n.lineCap="butt",t.colorStrokeStyle(n,o[0],o[1],o[2],e),t.drawEdgePath(l,n,r.allpts,"solid")}}},drawEdgePath:function(n,l,e,t){var u,r=n._private.rscratch,i=l,o=!1,a=this.usePaths(),s=n.pstyle("line-dash-pattern").pfValue,c=n.pstyle("line-dash-offset").pfValue;if(a){var h=e.join("$");r.pathCacheKey&&r.pathCacheKey===h?(u=l=r.pathCache,o=!0):(u=l=new Path2D,r.pathCacheKey=h,r.pathCache=u)}if(i.setLineDash)switch(t){case"dotted":i.setLineDash([1,1]);break;case"dashed":i.setLineDash(s),i.lineDashOffset=c;break;case"solid":i.setLineDash([])}if(!o&&!r.badLine)switch(l.beginPath&&l.beginPath(),l.moveTo(e[0],e[1]),r.edgeType){case"bezier":case"self":case"compound":case"multibezier":for(var d=2;d+3<e.length;d+=4)l.quadraticCurveTo(e[d],e[d+1],e[d+2],e[d+3]);break;case"straight":case"segments":case"haystack":for(var f=2;f+1<e.length;f+=2)l.lineTo(e[f],e[f+1])}l=i,a?l.stroke(u):l.stroke(),l.setLineDash&&l.setLineDash([])},drawArrowheads:function(n,l,e){var t=l._private.rscratch,u="haystack"===t.edgeType;u||this.drawArrowhead(n,l,"source",t.arrowStartX,t.arrowStartY,t.srcArrowAngle,e),this.drawArrowhead(n,l,"mid-target",t.midX,t.midY,t.midtgtArrowAngle,e),this.drawArrowhead(n,l,"mid-source",t.midX,t.midY,t.midsrcArrowAngle,e),u||this.drawArrowhead(n,l,"target",t.arrowEndX,t.arrowEndY,t.tgtArrowAngle,e)},drawArrowhead:function(n,l,e,t,u,r,i){if(!(isNaN(t)||null==t||isNaN(u)||null==u||isNaN(r)||null==r)){var o=l.pstyle(e+"-arrow-shape").value;if("none"!==o){var a="hollow"===l.pstyle(e+"-arrow-fill").value?"both":"filled",s=l.pstyle(e+"-arrow-fill").value,c=l.pstyle("width").pfValue,h=l.pstyle("opacity").value;void 0===i&&(i=h);var d=n.globalCompositeOperation;1===i&&"hollow"!==s||(n.globalCompositeOperation="destination-out",this.colorFillStyle(n,255,255,255,1),this.colorStrokeStyle(n,255,255,255,1),this.drawArrowShape(l,n,a,c,o,t,u,r),n.globalCompositeOperation=d);var f=l.pstyle(e+"-arrow-color").value;this.colorFillStyle(n,f[0],f[1],f[2],i),this.colorStrokeStyle(n,f[0],f[1],f[2],i),this.drawArrowShape(l,n,s,c,o,t,u,r)}}},drawArrowShape:function(n,l,e,t,u,r,i,o){var a,s=this,c=this.usePaths()&&"triangle-cross"!==u,h=!1,d=l,f={x:r,y:i},p=n.pstyle("arrow-scale").value,g=this.getArrowWidth(t,p),v=s.arrowShapes[u];if(c){var y=s.arrowPathCache=s.arrowPathCache||[],m=Q(u),b=y[m];null!=b?(a=l=b,h=!0):(a=l=new Path2D,y[m]=a)}l.beginPath&&l.beginPath(),h||(c?v.draw(l,1,0,{x:0,y:0},1):v.draw(l,g,o,f,t)),l.closePath&&l.closePath(),l=d,c&&(l.translate(r,i),l.rotate(o),l.scale(g,g)),"filled"!==e&&"both"!==e||(c?l.fill(a):l.fill()),"hollow"!==e&&"both"!==e||(l.lineWidth=(v.matchEdgeWidth?t:1)/(c?g:1),l.lineJoin="miter",c?l.stroke(a):l.stroke()),c&&(l.scale(1/g,1/g),l.rotate(-o),l.translate(-r,-i))}},Wi={safeDrawImage:function(n,l,e,t,u,r,i,o,a,s){u<=0||r<=0||a<=0||s<=0||n.drawImage(l,e,t,u,r,i,o,a,s)},drawInscribedImage:function(n,l,e,t,u){var r=this,i=e.position(),o=i.x,a=i.y,s=e.cy().style(),c=s.getIndexedStyle.bind(s),h=c(e,"background-fit","value",t),d=c(e,"background-repeat","value",t),f=e.width(),p=e.height(),g=2*e.padding(),v=f+("inner"===c(e,"background-width-relative-to","value",t)?0:g),y=p+("inner"===c(e,"background-height-relative-to","value",t)?0:g),m=e._private.rscratch,b="node"===e.pstyle("background-clip").value,w=c(e,"background-image-opacity","value",t)*u,_=l.width||l.cachedW,x=l.height||l.cachedH;null!=_&&null!=x||(document.body.appendChild(l),_=l.cachedW=l.width||l.offsetWidth,x=l.cachedH=l.height||l.offsetHeight,document.body.removeChild(l));var E=_,T=x;if("auto"!==c(e,"background-width","value",t)&&(E="%"===c(e,"background-width","units",t)?c(e,"background-width","pfValue",t)*v:c(e,"background-width","pfValue",t)),"auto"!==c(e,"background-height","value",t)&&(T="%"===c(e,"background-height","units",t)?c(e,"background-height","pfValue",t)*y:c(e,"background-height","pfValue",t)),0!==E&&0!==T){if("contain"===h)E*=k=Math.min(v/E,y/T),T*=k;else if("cover"===h){var k;E*=k=Math.max(v/E,y/T),T*=k}var C=o-v/2,S=c(e,"background-position-x","units",t),I=c(e,"background-position-x","pfValue",t);C+="%"===S?(v-E)*I:I;var N=c(e,"background-offset-x","units",t),D=c(e,"background-offset-x","pfValue",t);C+="%"===N?(v-E)*D:D;var O=a-y/2,A=c(e,"background-position-y","units",t),P=c(e,"background-position-y","pfValue",t);O+="%"===A?(y-T)*P:P;var M=c(e,"background-offset-y","units",t),L=c(e,"background-offset-y","pfValue",t);O+="%"===M?(y-T)*L:L,m.pathCache&&(C-=o,O-=a,o=0,a=0);var R=n.globalAlpha;if(n.globalAlpha=w,"no-repeat"===d)b&&(n.save(),m.pathCache?n.clip(m.pathCache):(r.nodeShapes[r.getNodeShape(e)].draw(n,o,a,v,y),n.clip())),r.safeDrawImage(n,l,0,0,_,x,C,O,E,T),b&&n.restore();else{var F=n.createPattern(l,d);n.fillStyle=F,r.nodeShapes[r.getNodeShape(e)].draw(n,o,a,v,y),n.translate(C,O),n.fill(),n.translate(-C,-O)}n.globalAlpha=R}}},Xi={};Xi.eleTextBiggerThanMin=function(n,l){if(!l){var e=n.cy().zoom(),t=this.getPixelRatio(),u=Math.ceil(Vn(e*t));l=Math.pow(2,u)}return!(n.pstyle("font-size").pfValue*l<n.pstyle("min-zoomed-font-size").pfValue)},Xi.drawElementText=function(n,l,e,t,u){var r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i=this;if(null==t){if(!i.eleTextBiggerThanMin(l))return}else if(!1===t)return;if(l.isNode()){if(!(o=l.pstyle("label"))||!o.value)return;switch(l.pstyle("text-halign").strValue){case"left":n.textAlign="right";break;case"right":n.textAlign="left";break;default:n.textAlign="center"}n.textBaseline="bottom"}else{var o=l.pstyle("label"),a=l.pstyle("source-label"),s=l.pstyle("target-label");if(!(o&&o.value||a&&a.value||s&&s.value))return;n.textAlign="center",n.textBaseline="bottom"}var c,h=!e;e&&(c=e,n.translate(-c.x1,-c.y1)),null==u?(i.drawText(n,l,null,h,r),l.isEdge()&&(i.drawText(n,l,"source",h,r),i.drawText(n,l,"target",h,r))):i.drawText(n,l,u,h,r),e&&n.translate(c.x1,c.y1)},Xi.getFontCache=function(n){var l;this.fontCaches=this.fontCaches||[];for(var e=0;e<this.fontCaches.length;e++)if((l=this.fontCaches[e]).context===n)return l;return l={context:n},this.fontCaches.push(l),l},Xi.setupTextStyle=function(n,l){var e=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],t=l.pstyle("font-style").strValue,u=l.pstyle("font-size").pfValue+"px",r=l.pstyle("font-family").strValue,i=l.pstyle("font-weight").strValue,o=l.pstyle("text-opacity").value*(e?l.effectiveOpacity():1),a=l.pstyle("text-outline-opacity").value*o,s=l.pstyle("color").value,c=l.pstyle("text-outline-color").value;n.font=t+" "+i+" "+u+" "+r,n.lineJoin="round",this.colorFillStyle(n,s[0],s[1],s[2],o),this.colorStrokeStyle(n,c[0],c[1],c[2],a)},Xi.getTextAngle=function(n,l){var e=n._private.rscratch,t=l?l+"-":"",u=n.pstyle(t+"text-rotation"),r=mn(e,"labelAngle",l);return"autorotate"===u.strValue?n.isEdge()?r:0:"none"===u.strValue?0:u.pfValue},Xi.drawText=function(n,l,e){var t=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],u=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=l._private.rscratch,i=u?l.effectiveOpacity():1;if(0!==i&&0!==l.pstyle("text-opacity").value){"main"===e&&(e=null);var o,a,s,c,h,d,f=mn(r,"labelX",e),p=mn(r,"labelY",e),g=this.getLabelText(l,e);if(null!=g&&""!==g&&!isNaN(f)&&!isNaN(p)){this.setupTextStyle(n,l,u);var v,y=e?e+"-":"",m=mn(r,"labelWidth",e),b=mn(r,"labelHeight",e),w=l.pstyle(y+"text-margin-x").pfValue,_=l.pstyle(y+"text-margin-y").pfValue,x=l.isEdge(),E=l.pstyle("text-halign").value,T=l.pstyle("text-valign").value;if(x&&(E="center",T="center"),f+=w,p+=_,0!==(v=t?this.getTextAngle(l,e):0)){var k=f,C=p;n.translate(k,C),n.rotate(v),f=0,p=0}switch(T){case"top":break;case"center":p+=b/2;break;case"bottom":p+=b}var S=l.pstyle("text-background-opacity").value,I=l.pstyle("text-border-opacity").value,N=l.pstyle("text-border-width").pfValue,D=l.pstyle("text-background-padding").pfValue;if(S>0||N>0&&I>0){var O=f-D;switch(E){case"left":O-=m;break;case"center":O-=m/2}var A=p-b-D,P=m+2*D,M=b+2*D;if(S>0){var L=n.fillStyle,R=l.pstyle("text-background-color").value;n.fillStyle="rgba("+R[0]+","+R[1]+","+R[2]+","+S*i+")","roundrectangle"==l.pstyle("text-background-shape").strValue?(a=O,s=A,c=P,h=M,d=(d=2)||5,(o=n).beginPath(),o.moveTo(a+d,s),o.lineTo(a+c-d,s),o.quadraticCurveTo(a+c,s,a+c,s+d),o.lineTo(a+c,s+h-d),o.quadraticCurveTo(a+c,s+h,a+c-d,s+h),o.lineTo(a+d,s+h),o.quadraticCurveTo(a,s+h,a,s+h-d),o.lineTo(a,s+d),o.quadraticCurveTo(a,s,a+d,s),o.closePath(),o.fill()):n.fillRect(O,A,P,M),n.fillStyle=L}if(N>0&&I>0){var F=n.strokeStyle,B=n.lineWidth,j=l.pstyle("text-border-color").value,U=l.pstyle("text-border-style").value;if(n.strokeStyle="rgba("+j[0]+","+j[1]+","+j[2]+","+I*i+")",n.lineWidth=N,n.setLineDash)switch(U){case"dotted":n.setLineDash([1,1]);break;case"dashed":n.setLineDash([4,2]);break;case"double":n.lineWidth=N/4,n.setLineDash([]);break;case"solid":n.setLineDash([])}if(n.strokeRect(O,A,P,M),"double"===U){var z=N/2;n.strokeRect(O+z,A+z,P-2*z,M-2*z)}n.setLineDash&&n.setLineDash([]),n.lineWidth=B,n.strokeStyle=F}}var q=2*l.pstyle("text-outline-width").pfValue;if(q>0&&(n.lineWidth=q),"wrap"===l.pstyle("text-wrap").value){var V=mn(r,"labelWrapCachedLines",e),H=b/V.length;switch(T){case"top":p-=(V.length-1)*H;break;case"center":case"bottom":p-=(V.length-1)*H}for(var G=0;G<V.length;G++)q>0&&n.strokeText(V[G],f,p),n.fillText(V[G],f,p),p+=H}else q>0&&n.strokeText(g,f,p),n.fillText(g,f,p);0!==v&&(n.rotate(-v),n.translate(-k,-C))}}};var Ki={drawNode:function(n,l,e){var t,u,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],a=this,s=l._private,c=s.rscratch,h=l.position();if(x(h.x)&&x(h.y)&&l.visible()){var d,f,p=o?l.effectiveOpacity():1,g=a.usePaths(),v=!1,y=l.padding();t=l.width()+2*y,u=l.height()+2*y,e&&(f=e,n.translate(-f.x1,-f.y1));for(var m=l.pstyle("background-image").value,b=new Array(m.length),w=new Array(m.length),_=0,E=0;E<m.length;E++){var T=m[E];if(b[E]=null!=T&&"none"!==T){var k=l.cy().style().getIndexedStyle(l,"background-image-crossorigin","value",E);_++,w[E]=a.getCachedImage(T,k,function(){s.backgroundTimestamp=Date.now(),l.emitAndNotify("background")})}}var C=l.pstyle("background-blacken").value,S=l.pstyle("border-width").pfValue,I=l.pstyle("background-opacity").value*p,N=l.pstyle("border-color").value,D=l.pstyle("border-style").value,O=l.pstyle("border-opacity").value*p;n.lineJoin="miter";var A=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I;a.eleFillStyle(n,l,e)},P=function(){var l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:O;a.colorStrokeStyle(n,N[0],N[1],N[2],l)},M=l.pstyle("shape").strValue,L=l.pstyle("shape-polygon-points").pfValue;if(g){n.translate(h.x,h.y);var R=a.nodePathCache=a.nodePathCache||[],F=J("polygon"===M?M+","+L.join(","):M,""+u,""+t),B=R[F];null!=B?(d=B,v=!0,c.pathCache=d):(d=new Path2D,R[F]=c.pathCache=d)}var j=function(){if(!v){var e=h;g&&(e={x:0,y:0}),a.nodeShapes[a.getNodeShape(l)].draw(d||n,e.x,e.y,t,u)}g?n.fill(d):n.fill()},U=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p,t=s.backgrounding,u=0,r=0;r<w.length;r++)b[r]&&w[r].complete&&!w[r].error&&(u++,a.drawInscribedImage(n,w[r],l,r,e));s.backgrounding=!(u===_),t!==s.backgrounding&&l.updateStyle(!1)},z=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:p;a.hasPie(l)&&(a.drawPie(n,l,r),e&&(g||a.nodeShapes[a.getNodeShape(l)].draw(n,h.x,h.y,t,u)))},q=function(){var l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p,e=(C>0?C:-C)*l,t=C>0?0:255;0!==C&&(a.colorFillStyle(n,t,t,t,e),g?n.fill(d):n.fill())},V=function(){if(S>0){if(n.lineWidth=S,n.lineCap="butt",n.setLineDash)switch(D){case"dotted":n.setLineDash([1,1]);break;case"dashed":n.setLineDash([4,2]);break;case"solid":case"double":n.setLineDash([])}if(g?n.stroke(d):n.stroke(),"double"===D){n.lineWidth=S/3;var l=n.globalCompositeOperation;n.globalCompositeOperation="destination-out",g?n.stroke(d):n.stroke(),n.globalCompositeOperation=l}n.setLineDash&&n.setLineDash([])}};if("yes"===l.pstyle("ghost").value){var H=l.pstyle("ghost-offset-x").pfValue,G=l.pstyle("ghost-offset-y").pfValue,Y=l.pstyle("ghost-opacity").value,W=Y*p;n.translate(H,G),A(Y*I),j(),U(W),z(0!==C||0!==S),q(W),P(Y*O),V(),n.translate(-H,-G)}A(),j(),U(),z(0!==C||0!==S),q(),P(),V(),g&&n.translate(-h.x,-h.y),a.drawElementText(n,l,null,r),i&&a.drawNodeOverlay(n,l,h,t,u),e&&n.translate(f.x1,f.y1)}},drawNodeOverlay:function(n,l,e,t,u){if(l.visible()){var r=l.pstyle("overlay-padding").pfValue,i=l.pstyle("overlay-opacity").value,o=l.pstyle("overlay-color").value;if(i>0){if(e=e||l.position(),null==t||null==u){var a=l.padding();t=l.width()+2*a,u=l.height()+2*a}this.colorFillStyle(n,o[0],o[1],o[2],i),this.nodeShapes.roundrectangle.draw(n,e.x,e.y,t+2*r,u+2*r),n.fill()}}},hasPie:function(n){return(n=n[0])._private.hasPie},drawPie:function(n,l,e,t){l=l[0],t=t||l.position();var u=l.cy().style(),r=l.pstyle("pie-size"),i=t.x,o=t.y,a=l.width(),s=l.height(),c=Math.min(a,s)/2,h=0;this.usePaths()&&(i=0,o=0),"%"===r.units?c*=r.pfValue:void 0!==r.pfValue&&(c=r.pfValue/2);for(var d=1;d<=u.pieBackgroundN;d++){var f=l.pstyle("pie-"+d+"-background-size").value,p=l.pstyle("pie-"+d+"-background-color").value,g=l.pstyle("pie-"+d+"-background-opacity").value*e,v=f/100;v+h>1&&(v=1-h);var y=1.5*Math.PI+2*Math.PI*h,m=y+2*Math.PI*v;0===f||h>=1||h+v>1||(n.beginPath(),n.moveTo(i,o),n.arc(i,o,c,y,m),n.closePath(),this.colorFillStyle(n,p[0],p[1],p[2],g),n.fill(),h+=v)}}},$i={};$i.getPixelRatio=function(){var n=this.data.contexts[0];if(null!=this.forcedPixelRatio)return this.forcedPixelRatio;var l=n.backingStorePixelRatio||n.webkitBackingStorePixelRatio||n.mozBackingStorePixelRatio||n.msBackingStorePixelRatio||n.oBackingStorePixelRatio||n.backingStorePixelRatio||1;return(window.devicePixelRatio||1)/l},$i.paintCache=function(n){for(var l,e=this.paintCaches=this.paintCaches||[],t=!0,u=0;u<e.length;u++)if((l=e[u]).context===n){t=!1;break}return t&&(l={context:n},e.push(l)),l},$i.createGradientStyleFor=function(n,l,e,t,u){var r,i=this.usePaths(),o=e.pstyle(l+"-gradient-stop-colors").value,a=e.pstyle(l+"-gradient-stop-positions").pfValue;if("radial-gradient"===t)if(e.isEdge()){var s=e.sourceEndpoint(),c=e.targetEndpoint(),h=e.midpoint(),d=Hn(s,h),f=Hn(c,h);r=n.createRadialGradient(h.x,h.y,0,h.x,h.y,Math.max(d,f))}else{var p=i?{x:0,y:0}:e.position(),g=e.width(),v=e.height();r=n.createRadialGradient(p.x,p.y,0,p.x,p.y,Math.max(g,v))}else if(e.isEdge()){var y=e.sourceEndpoint(),m=e.targetEndpoint();r=n.createLinearGradient(y.x,y.y,m.x,m.y)}else{var b=i?{x:0,y:0}:e.position(),w=e.width()/2,_=e.height()/2;switch(e.pstyle("background-gradient-direction").value){case"to-bottom":r=n.createLinearGradient(b.x,b.y-_,b.x,b.y+_);break;case"to-top":r=n.createLinearGradient(b.x,b.y+_,b.x,b.y-_);break;case"to-left":r=n.createLinearGradient(b.x-w,b.y,b.x+w,b.y);break;case"to-right":r=n.createLinearGradient(b.x+w,b.y,b.x-w,b.y);break;case"to-bottom-right":case"to-right-bottom":r=n.createLinearGradient(b.x-w,b.y-_,b.x+w,b.y+_);break;case"to-top-right":case"to-right-top":r=n.createLinearGradient(b.x-w,b.y+_,b.x+w,b.y-_);break;case"to-bottom-left":case"to-left-bottom":r=n.createLinearGradient(b.x+w,b.y-_,b.x-w,b.y+_);break;case"to-top-left":case"to-left-top":r=n.createLinearGradient(b.x+w,b.y+_,b.x-w,b.y-_)}}if(!r)return null;for(var x=a.length===o.length,E=o.length,T=0;T<E;T++)r.addColorStop(x?a[T]:T/(E-1),"rgba("+o[T][0]+","+o[T][1]+","+o[T][2]+","+u+")");return r},$i.gradientFillStyle=function(n,l,e,t){var u=this.createGradientStyleFor(n,"background",l,e,t);if(!u)return null;n.fillStyle=u},$i.colorFillStyle=function(n,l,e,t,u){n.fillStyle="rgba("+l+","+e+","+t+","+u+")"},$i.eleFillStyle=function(n,l,e){var t=l.pstyle("background-fill").value;if("linear-gradient"===t||"radial-gradient"===t)this.gradientFillStyle(n,l,t,e);else{var u=l.pstyle("background-color").value;this.colorFillStyle(n,u[0],u[1],u[2],e)}},$i.gradientStrokeStyle=function(n,l,e,t){var u=this.createGradientStyleFor(n,"line",l,e,t);if(!u)return null;n.strokeStyle=u},$i.colorStrokeStyle=function(n,l,e,t,u){n.strokeStyle="rgba("+l+","+e+","+t+","+u+")"},$i.eleStrokeStyle=function(n,l,e){var t=l.pstyle("line-fill").value;if("linear-gradient"===t||"radial-gradient"===t)this.gradientStrokeStyle(n,l,t,e);else{var u=l.pstyle("line-color").value;this.colorStrokeStyle(n,u[0],u[1],u[2],e)}},$i.matchCanvasSize=function(n){var l=this,e=l.data,t=l.findContainerClientCoords(),u=t[2],r=t[3],i=l.getPixelRatio(),o=l.motionBlurPxRatio;n!==l.data.bufferCanvases[l.MOTIONBLUR_BUFFER_NODE]&&n!==l.data.bufferCanvases[l.MOTIONBLUR_BUFFER_DRAG]||(i=o);var a,s=u*i,c=r*i;if(s!==l.canvasWidth||c!==l.canvasHeight){l.fontCaches=null;var h=e.canvasContainer;h.style.width=u+"px",h.style.height=r+"px";for(var d=0;d<l.CANVAS_LAYERS;d++)(a=e.canvases[d]).width=s,a.height=c,a.style.width=u+"px",a.style.height=r+"px";for(d=0;d<l.BUFFER_COUNT;d++)(a=e.bufferCanvases[d]).width=s,a.height=c,a.style.width=u+"px",a.style.height=r+"px";l.textureMult=1,i<=1&&(a=e.bufferCanvases[l.TEXTURE_BUFFER],l.textureMult=2,a.width=s*l.textureMult,a.height=c*l.textureMult),l.canvasWidth=s,l.canvasHeight=c}},$i.renderTo=function(n,l,e,t){this.render({forcedContext:n,forcedZoom:l,forcedPan:e,drawAllLayers:!0,forcedPxRatio:t})},$i.render=function(n){var l=(n=n||pn()).forcedContext,e=n.drawAllLayers,t=n.drawOnlyNodeLayer,u=n.forcedZoom,r=n.forcedPan,i=this,o=void 0===n.forcedPxRatio?this.getPixelRatio():n.forcedPxRatio,a=i.cy,s=i.data,c=s.canvasNeedsRedraw,h=i.textureOnViewport&&!l&&(i.pinching||i.hoverData.dragging||i.swipePanning||i.data.wheelZooming),d=void 0!==n.motionBlur?n.motionBlur:i.motionBlur,f=i.motionBlurPxRatio,p=a.hasCompoundNodes(),g=i.hoverData.draggingEles,v=!(!i.hoverData.selecting&&!i.touchData.selecting),y=d=d&&!l&&i.motionBlurEnabled&&!v;l||(i.prevPxRatio!==o&&(i.invalidateContainerClientCoordsCache(),i.matchCanvasSize(i.container),i.redrawHint("eles",!0),i.redrawHint("drag",!0)),i.prevPxRatio=o),!l&&i.motionBlurTimeout&&clearTimeout(i.motionBlurTimeout),d&&(null==i.mbFrames&&(i.mbFrames=0),i.mbFrames++,i.mbFrames<3&&(y=!1),i.mbFrames>i.minMbLowQualFrames&&(i.motionBlurPxRatio=i.mbPxRBlurry)),i.clearingMotionBlur&&(i.motionBlurPxRatio=1),i.textureDrawLastFrame&&!h&&(c[i.NODE]=!0,c[i.SELECT_BOX]=!0);var m=a.style(),b=a.zoom(),w=void 0!==u?u:b,_=a.pan(),x={x:_.x,y:_.y},E={zoom:b,pan:{x:_.x,y:_.y}},T=i.prevViewport;void 0===T||E.zoom!==T.zoom||E.pan.x!==T.pan.x||E.pan.y!==T.pan.y||g&&!p||(i.motionBlurPxRatio=1),r&&(x=r),w*=o,x.x*=o,x.y*=o;var k=i.getCachedZSortedEles();function C(n,l,e,t,u){var r=n.globalCompositeOperation;n.globalCompositeOperation="destination-out",i.colorFillStyle(n,255,255,255,i.motionBlurTransparency),n.fillRect(l,e,t,u),n.globalCompositeOperation=r}function S(n,t){var o,a,c,h;i.clearingMotionBlur||n!==s.bufferContexts[i.MOTIONBLUR_BUFFER_NODE]&&n!==s.bufferContexts[i.MOTIONBLUR_BUFFER_DRAG]?(o=x,a=w,c=i.canvasWidth,h=i.canvasHeight):(o={x:_.x*f,y:_.y*f},a=b*f,c=i.canvasWidth*f,h=i.canvasHeight*f),n.setTransform(1,0,0,1,0,0),"motionBlur"===t?C(n,0,0,c,h):l||void 0!==t&&!t||n.clearRect(0,0,c,h),e||(n.translate(o.x,o.y),n.scale(a,a)),r&&n.translate(r.x,r.y),u&&n.scale(u,u)}if(h||(i.textureDrawLastFrame=!1),h){if(i.textureDrawLastFrame=!0,!i.textureCache){i.textureCache={},i.textureCache.bb=a.mutableElements().boundingBox(),i.textureCache.texture=i.data.bufferCanvases[i.TEXTURE_BUFFER];var I=i.data.bufferContexts[i.TEXTURE_BUFFER];I.setTransform(1,0,0,1,0,0),I.clearRect(0,0,i.canvasWidth*i.textureMult,i.canvasHeight*i.textureMult),i.render({forcedContext:I,drawOnlyNodeLayer:!0,forcedPxRatio:o*i.textureMult}),(E=i.textureCache.viewport={zoom:a.zoom(),pan:a.pan(),width:i.canvasWidth,height:i.canvasHeight}).mpan={x:(0-E.pan.x)/E.zoom,y:(0-E.pan.y)/E.zoom}}c[i.DRAG]=!1,c[i.NODE]=!1;var N=s.contexts[i.NODE],D=i.textureCache.texture;E=i.textureCache.viewport;N.setTransform(1,0,0,1,0,0),d?C(N,0,0,E.width,E.height):N.clearRect(0,0,E.width,E.height);var O=m.core("outside-texture-bg-color").value,A=m.core("outside-texture-bg-opacity").value;i.colorFillStyle(N,O[0],O[1],O[2],A),N.fillRect(0,0,E.width,E.height);b=a.zoom();S(N,!1),N.clearRect(E.mpan.x,E.mpan.y,E.width/E.zoom/o,E.height/E.zoom/o),N.drawImage(D,E.mpan.x,E.mpan.y,E.width/E.zoom/o,E.height/E.zoom/o)}else i.textureOnViewport&&!l&&(i.textureCache=null);var P=a.extent(),M=i.pinching||i.hoverData.dragging||i.swipePanning||i.data.wheelZooming||i.hoverData.draggingEles,L=i.hideEdgesOnViewport&&M,R=[];if(R[i.NODE]=!c[i.NODE]&&d&&!i.clearedForMotionBlur[i.NODE]||i.clearingMotionBlur,R[i.NODE]&&(i.clearedForMotionBlur[i.NODE]=!0),R[i.DRAG]=!c[i.DRAG]&&d&&!i.clearedForMotionBlur[i.DRAG]||i.clearingMotionBlur,R[i.DRAG]&&(i.clearedForMotionBlur[i.DRAG]=!0),c[i.NODE]||e||t||R[i.NODE]){var F=d&&!R[i.NODE]&&1!==f;S(N=l||(F?i.data.bufferContexts[i.MOTIONBLUR_BUFFER_NODE]:s.contexts[i.NODE]),d&&!F?"motionBlur":void 0),L?i.drawCachedNodes(N,k.nondrag,o,P):i.drawLayeredElements(N,k.nondrag,o,P),i.debug&&i.drawDebugPoints(N,k.nondrag),e||d||(c[i.NODE]=!1)}if(!t&&(c[i.DRAG]||e||R[i.DRAG])){F=d&&!R[i.DRAG]&&1!==f;S(N=l||(F?i.data.bufferContexts[i.MOTIONBLUR_BUFFER_DRAG]:s.contexts[i.DRAG]),d&&!F?"motionBlur":void 0),L?i.drawCachedNodes(N,k.drag,o,P):i.drawCachedElements(N,k.drag,o,P),i.debug&&i.drawDebugPoints(N,k.drag),e||d||(c[i.DRAG]=!1)}if(i.showFps||!t&&c[i.SELECT_BOX]&&!e){if(S(N=l||s.contexts[i.SELECT_BOX]),1==i.selection[4]&&(i.hoverData.selecting||i.touchData.selecting)){b=i.cy.zoom();var B=m.core("selection-box-border-width").value/b;N.lineWidth=B,N.fillStyle="rgba("+m.core("selection-box-color").value[0]+","+m.core("selection-box-color").value[1]+","+m.core("selection-box-color").value[2]+","+m.core("selection-box-opacity").value+")",N.fillRect(i.selection[0],i.selection[1],i.selection[2]-i.selection[0],i.selection[3]-i.selection[1]),B>0&&(N.strokeStyle="rgba("+m.core("selection-box-border-color").value[0]+","+m.core("selection-box-border-color").value[1]+","+m.core("selection-box-border-color").value[2]+","+m.core("selection-box-opacity").value+")",N.strokeRect(i.selection[0],i.selection[1],i.selection[2]-i.selection[0],i.selection[3]-i.selection[1]))}if(s.bgActivePosistion&&!i.hoverData.selecting){b=i.cy.zoom();var j=s.bgActivePosistion;N.fillStyle="rgba("+m.core("active-bg-color").value[0]+","+m.core("active-bg-color").value[1]+","+m.core("active-bg-color").value[2]+","+m.core("active-bg-opacity").value+")",N.beginPath(),N.arc(j.x,j.y,m.core("active-bg-size").pfValue/b,0,2*Math.PI),N.fill()}var U=i.lastRedrawTime;if(i.showFps&&U){U=Math.round(U);var z=Math.round(1e3/U);N.setTransform(1,0,0,1,0,0),N.fillStyle="rgba(255, 0, 0, 0.75)",N.strokeStyle="rgba(255, 0, 0, 0.75)",N.lineWidth=1,N.fillText("1 frame = "+U+" ms = "+z+" fps",0,20);N.strokeRect(0,30,250,20),N.fillRect(0,30,250*Math.min(z/60,1),20)}e||(c[i.SELECT_BOX]=!1)}if(d&&1!==f){var q=s.contexts[i.NODE],V=i.data.bufferCanvases[i.MOTIONBLUR_BUFFER_NODE],H=s.contexts[i.DRAG],G=i.data.bufferCanvases[i.MOTIONBLUR_BUFFER_DRAG],Y=function(n,l,e){n.setTransform(1,0,0,1,0,0),e||!y?n.clearRect(0,0,i.canvasWidth,i.canvasHeight):C(n,0,0,i.canvasWidth,i.canvasHeight);var t=f;n.drawImage(l,0,0,i.canvasWidth*t,i.canvasHeight*t,0,0,i.canvasWidth,i.canvasHeight)};(c[i.NODE]||R[i.NODE])&&(Y(q,V,R[i.NODE]),c[i.NODE]=!1),(c[i.DRAG]||R[i.DRAG])&&(Y(H,G,R[i.DRAG]),c[i.DRAG]=!1)}i.prevViewport=E,i.clearingMotionBlur&&(i.clearingMotionBlur=!1,i.motionBlurCleared=!0,i.motionBlur=!0),d&&(i.motionBlurTimeout=setTimeout(function(){i.motionBlurTimeout=null,i.clearedForMotionBlur[i.NODE]=!1,i.clearedForMotionBlur[i.DRAG]=!1,i.motionBlur=!1,i.clearingMotionBlur=!h,i.mbFrames=0,c[i.NODE]=!0,c[i.DRAG]=!0,i.redraw()},100)),l||a.emit("render")};for(var Zi={drawPolygonPath:function(n,l,e,t,u,r){var i=t/2,o=u/2;n.beginPath&&n.beginPath(),n.moveTo(l+i*r[0],e+o*r[1]);for(var a=1;a<r.length/2;a++)n.lineTo(l+i*r[2*a],e+o*r[2*a+1]);n.closePath()},drawRoundRectanglePath:function(n,l,e,t,u){var r=t/2,i=u/2,o=xl(t,u);n.beginPath&&n.beginPath(),n.moveTo(l,e-i),n.arcTo(l+r,e-i,l+r,e,o),n.arcTo(l+r,e+i,l,e+i,o),n.arcTo(l-r,e+i,l-r,e,o),n.arcTo(l-r,e-i,l,e-i,o),n.lineTo(l,e-i),n.closePath()},drawBottomRoundRectanglePath:function(n,l,e,t,u){var r=t/2,i=u/2,o=xl(t,u);n.beginPath&&n.beginPath(),n.moveTo(l,e-i),n.lineTo(l+r,e-i),n.lineTo(l+r,e),n.arcTo(l+r,e+i,l,e+i,o),n.arcTo(l-r,e+i,l-r,e,o),n.lineTo(l-r,e-i),n.lineTo(l,e-i),n.closePath()},drawCutRectanglePath:function(n,l,e,t,u){var r=t/2,i=u/2;n.beginPath&&n.beginPath(),n.moveTo(l-r+8,e-i),n.lineTo(l+r-8,e-i),n.lineTo(l+r,e-i+8),n.lineTo(l+r,e+i-8),n.lineTo(l+r-8,e+i),n.lineTo(l-r+8,e+i),n.lineTo(l-r,e+i-8),n.lineTo(l-r,e-i+8),n.closePath()},drawBarrelPath:function(n,l,e,t,u){var r=t/2,i=u/2,o=l-r,a=l+r,s=e-i,c=e+i,h=El(t,u),d=h.widthOffset,f=h.heightOffset,p=h.ctrlPtOffsetPct*d;n.beginPath&&n.beginPath(),n.moveTo(o,s+f),n.lineTo(o,c-f),n.quadraticCurveTo(o+p,c,o+d,c),n.lineTo(a-d,c),n.quadraticCurveTo(a-p,c,a,c-f),n.lineTo(a,s+f),n.quadraticCurveTo(a-p,s,a-d,s),n.lineTo(o+d,s),n.quadraticCurveTo(o+p,s,o,s+f),n.closePath()}},Qi=Math.sin(0),Ji=Math.cos(0),no={},lo={},eo=Math.PI/40,to=0*Math.PI;to<2*Math.PI;to+=eo)no[to]=Math.sin(to),lo[to]=Math.cos(to);Zi.drawEllipsePath=function(n,l,e,t,u){if(n.beginPath&&n.beginPath(),n.ellipse)n.ellipse(l,e,t/2,u/2,0,0,2*Math.PI);else for(var r,i,o=t/2,a=u/2,s=0*Math.PI;s<2*Math.PI;s+=eo)r=l-o*no[s]*Qi+o*lo[s]*Ji,i=e+a*lo[s]*Qi+a*no[s]*Ji,0===s?n.moveTo(r,i):n.lineTo(r,i);n.closePath()};var uo={};function ro(n){var l=n.indexOf(",");return n.substr(l+1)}function io(n,l,e){var t=function(){return l.toDataURL(e,n.quality)};switch(n.output){case"blob-promise":return new Ne(function(t,u){try{l.toBlob(function(n){null!=n?t(n):u(new Error("`canvas.toBlob()` sent a null value in its callback"))},e,n.quality)}catch(n){u(n)}});case"blob":return function(n,l){for(var e=atob(n),t=new ArrayBuffer(e.length),u=new Uint8Array(t),r=0;r<e.length;r++)u[r]=e.charCodeAt(r);return new Blob([t],{type:l})}(ro(t()),e);case"base64":return ro(t());case"base64uri":default:return t()}}uo.createBuffer=function(n,l){var e=document.createElement("canvas");return e.width=n,e.height=l,[e,e.getContext("2d")]},uo.bufferCanvasImage=function(n){var l=this.cy,e=l.mutableElements().boundingBox(),t=this.findContainerClientCoords(),u=n.full?Math.ceil(e.w):t[2],r=n.full?Math.ceil(e.h):t[3],i=x(n.maxWidth)||x(n.maxHeight),o=this.getPixelRatio(),a=1;if(void 0!==n.scale)u*=n.scale,r*=n.scale,a=n.scale;else if(i){var s=1/0,c=1/0;x(n.maxWidth)&&(s=a*n.maxWidth/u),x(n.maxHeight)&&(c=a*n.maxHeight/r),u*=a=Math.min(s,c),r*=a}i||(u*=o,r*=o,a*=o);var h=document.createElement("canvas");h.width=u,h.height=r,h.style.width=u+"px",h.style.height=r+"px";var d=h.getContext("2d");if(u>0&&r>0){d.clearRect(0,0,u,r),d.globalCompositeOperation="source-over";var f=this.getCachedZSortedEles();if(n.full)d.translate(-e.x1*a,-e.y1*a),d.scale(a,a),this.drawElements(d,f),d.scale(1/a,1/a),d.translate(e.x1*a,e.y1*a);else{var p=l.pan(),g={x:p.x*a,y:p.y*a};a*=l.zoom(),d.translate(g.x,g.y),d.scale(a,a),this.drawElements(d,f),d.scale(1/a,1/a),d.translate(-g.x,-g.y)}n.bg&&(d.globalCompositeOperation="destination-over",d.fillStyle=n.bg,d.rect(0,0,u,r),d.fill())}return h},uo.png=function(n){return io(n,this.bufferCanvasImage(n),"image/png")},uo.jpg=function(n){return io(n,this.bufferCanvasImage(n),"image/jpeg")};var oo={nodeShapeImpl:function(n,l,e,t,u,r,i){switch(n){case"ellipse":return this.drawEllipsePath(l,e,t,u,r);case"polygon":return this.drawPolygonPath(l,e,t,u,r,i);case"roundrectangle":case"round-rectangle":return this.drawRoundRectanglePath(l,e,t,u,r);case"cutrectangle":case"cut-rectangle":return this.drawCutRectanglePath(l,e,t,u,r);case"bottomroundrectangle":case"bottom-round-rectangle":return this.drawBottomRoundRectanglePath(l,e,t,u,r);case"barrel":return this.drawBarrelPath(l,e,t,u,r)}}},ao=co,so=co.prototype;function co(n){var l=this;l.data={canvases:new Array(so.CANVAS_LAYERS),contexts:new Array(so.CANVAS_LAYERS),canvasNeedsRedraw:new Array(so.CANVAS_LAYERS),bufferCanvases:new Array(so.BUFFER_COUNT),bufferContexts:new Array(so.CANVAS_LAYERS)};var e="-webkit-tap-highlight-color: rgba(0,0,0,0);";l.data.canvasContainer=document.createElement("div");var t=l.data.canvasContainer.style;l.data.canvasContainer.setAttribute("style",e),t.position="relative",t.zIndex="0",t.overflow="hidden";var u=n.cy.container();u.appendChild(l.data.canvasContainer),(u.getAttribute("style")||"").indexOf(e)<0&&u.setAttribute("style",(u.getAttribute("style")||"")+e);for(var r=0;r<so.CANVAS_LAYERS;r++){var i=l.data.canvases[r]=document.createElement("canvas");l.data.contexts[r]=i.getContext("2d"),i.setAttribute("style","-webkit-user-select: none; -moz-user-select: -moz-none; user-select: none; -webkit-tap-highlight-color: rgba(0,0,0,0); outline-style: none;"+(O()?" -ms-touch-action: none; touch-action: none; ":"")),i.style.position="absolute",i.setAttribute("data-id","layer"+r),i.style.zIndex=String(so.CANVAS_LAYERS-r),l.data.canvasContainer.appendChild(i),l.data.canvasNeedsRedraw[r]=!1}l.data.topCanvas=l.data.canvases[0],l.data.canvases[so.NODE].setAttribute("data-id","layer"+so.NODE+"-node"),l.data.canvases[so.SELECT_BOX].setAttribute("data-id","layer"+so.SELECT_BOX+"-selectbox"),l.data.canvases[so.DRAG].setAttribute("data-id","layer"+so.DRAG+"-drag");for(r=0;r<so.BUFFER_COUNT;r++)l.data.bufferCanvases[r]=document.createElement("canvas"),l.data.bufferContexts[r]=l.data.bufferCanvases[r].getContext("2d"),l.data.bufferCanvases[r].style.position="absolute",l.data.bufferCanvases[r].setAttribute("data-id","buffer"+r),l.data.bufferCanvases[r].style.zIndex=String(-r-1),l.data.bufferCanvases[r].style.visibility="hidden";l.pathsEnabled=!0;var o=$n(),a=function(n){return{x:-n.w/2,y:-n.h/2}},s=function(n){return n.boundingBox(),n[0]._private.bodyBounds},c=function(n){return n.boundingBox(),n[0]._private.labelBounds.main||o},h=function(n){return n.boundingBox(),n[0]._private.labelBounds.source||o},d=function(n){return n.boundingBox(),n[0]._private.labelBounds.target||o},f=function(n,l){return l},p=function(n,l){return{x:n.x+l.pstyle("text-margin-x").pfValue,y:n.y+l.pstyle("text-margin-y").pfValue}},g=function(n,l,e){var t=n[0]._private.rscratch;return{x:t[l],y:t[e]}},v=l.data.eleTxrCache=new Ni(l,{getKey:function(n){return n[0]._private.nodeKey},doesEleInvalidateKey:function(n){var l=n[0]._private;return!(l.oldBackgroundTimestamp===l.backgroundTimestamp)},drawElement:function(n,e,t,u,r){return l.drawElement(n,e,t,!1,!1,r)},getBoundingBox:s,getRotationPoint:function(n){return{x:((l=s(n)).x1+l.x2)/2,y:(l.y1+l.y2)/2};var l},getRotationOffset:function(n){return a(s(n))},allowEdgeTxrCaching:!1,allowParentTxrCaching:!1}),y=l.data.lblTxrCache=new Ni(l,{getKey:function(n){return n[0]._private.labelStyleKey},drawElement:function(n,e,t,u,r){return l.drawElementText(n,e,t,u,"main",r)},getBoundingBox:c,getRotationPoint:function(n){return p(g(n,"labelX","labelY"),n)},getRotationOffset:function(n){var l=c(n),e=a(c(n));if(n.isNode()){switch(n.pstyle("text-halign").value){case"left":e.x=-l.w;break;case"right":e.x=0}switch(n.pstyle("text-valign").value){case"top":e.y=-l.h;break;case"bottom":e.y=0}}return e},isVisible:f}),m=l.data.slbTxrCache=new Ni(l,{getKey:function(n){return n[0]._private.sourceLabelStyleKey},drawElement:function(n,e,t,u,r){return l.drawElementText(n,e,t,u,"source",r)},getBoundingBox:h,getRotationPoint:function(n){return p(g(n,"sourceLabelX","sourceLabelY"),n)},getRotationOffset:function(n){return a(h(n))},isVisible:f}),b=l.data.tlbTxrCache=new Ni(l,{getKey:function(n){return n[0]._private.targetLabelStyleKey},drawElement:function(n,e,t,u,r){return l.drawElementText(n,e,t,u,"target",r)},getBoundingBox:d,getRotationPoint:function(n){return p(g(n,"sourceLabelX","sourceLabelY"),n)},getRotationOffset:function(n){return a(d(n))},isVisible:f}),w=l.data.lyrTxrCache=new Oi(l);l.onUpdateEleCalcs(function(n,l){v.invalidateElements(l),y.invalidateElements(l),m.invalidateElements(l),b.invalidateElements(l),w.invalidateElements(l);for(var e=0;e<l.length;e++){var t=l[e]._private;t.oldBackgroundTimestamp=t.backgroundTimestamp}});var _=function(n){for(var l=0;l<n.length;l++)w.enqueueElementRefinement(n[l].ele)};v.onDequeue(_),y.onDequeue(_),m.onDequeue(_),b.onDequeue(_)}so.CANVAS_LAYERS=3,so.SELECT_BOX=0,so.DRAG=1,so.NODE=2,so.BUFFER_COUNT=3,so.TEXTURE_BUFFER=0,so.MOTIONBLUR_BUFFER_NODE=1,so.MOTIONBLUR_BUFFER_DRAG=2,so.redrawHint=function(n,l){var e=this;switch(n){case"eles":e.data.canvasNeedsRedraw[so.NODE]=l;break;case"drag":e.data.canvasNeedsRedraw[so.DRAG]=l;break;case"select":e.data.canvasNeedsRedraw[so.SELECT_BOX]=l}};var ho="undefined"!=typeof Path2D;so.path2dEnabled=function(n){if(void 0===n)return this.pathsEnabled;this.pathsEnabled=!!n},so.usePaths=function(){return ho&&this.pathsEnabled},so.setImgSmoothing=function(n,l){null!=n.imageSmoothingEnabled?n.imageSmoothingEnabled=l:(n.webkitImageSmoothingEnabled=l,n.mozImageSmoothingEnabled=l,n.msImageSmoothingEnabled=l)},so.getImgSmoothing=function(n){return null!=n.imageSmoothingEnabled?n.imageSmoothingEnabled:n.webkitImageSmoothingEnabled||n.mozImageSmoothingEnabled||n.msImageSmoothingEnabled},so.makeOffscreenCanvas=function(n,l){var e;return"undefined"!==("undefined"==typeof OffscreenCanvas?"undefined":i(OffscreenCanvas))?e=new OffscreenCanvas(n,l):((e=document.createElement("canvas")).width=n,e.height=l),e},[Ri,zi,Yi,Wi,Xi,Ki,$i,Zi,uo,oo].forEach(function(n){j(so,n)});var fo=[{type:"layout",extensions:Jr},{type:"renderer",extensions:[{name:"null",impl:ni},{name:"base",impl:Ei},{name:"canvas",impl:ao}]}],po={},go={};function vo(n,l,e){var t=e,u=function(e){sn("Can not register `"+l+"` for `"+n+"` since `"+e+"` already exists in the prototype and can not be overridden")};if("core"===n){if(Sr.prototype[l])return u(l);Sr.prototype[l]=e}else if("collection"===n){if(Gu.prototype[l])return u(l);Gu.prototype[l]=e}else if("layout"===n){for(var r=function(n){this.options=n,e.call(this,n),_(this._private)||(this._private={}),this._private.cy=n.cy,this._private.listeners=[],this.createEmitter()},i=r.prototype=Object.create(e.prototype),o=[],a=0;a<o.length;a++){var s=o[a];i[s]=i[s]||function(){return this}}i.start&&!i.run?i.run=function(){return this.start(),this}:!i.start&&i.run&&(i.start=function(){return this.run(),this});var c=e.prototype.stop;i.stop=function(){var n=this.options;if(n&&n.animate){var l=this.animations;if(l)for(var e=0;e<l.length;e++)l[e].stop()}return c?c.call(this):this.emit("layoutstop"),this},i.destroy||(i.destroy=function(){return this}),i.cy=function(){return this._private.cy};var h=function(n){return n._private.cy},d={addEventFields:function(n,l){l.layout=n,l.cy=h(n),l.target=n},bubble:function(){return!0},parent:function(n){return h(n)}};j(i,{createEmitter:function(){return this._private.emitter=new su(d,this),this},emitter:function(){return this._private.emitter},on:function(n,l){return this.emitter().on(n,l),this},one:function(n,l){return this.emitter().one(n,l),this},once:function(n,l){return this.emitter().one(n,l),this},removeListener:function(n,l){return this.emitter().removeListener(n,l),this},emit:function(n,l){return this.emitter().emit(n,l),this}}),Ae.eventAliasesOn(i),t=r}else if("renderer"===n&&"null"!==l&&"base"!==l){var f=yo("renderer","base"),p=f.prototype,g=e,v=e.prototype,y=function(){f.apply(this,arguments),g.apply(this,arguments)},m=y.prototype;for(var b in p){var w=p[b];if(null!=v[b])return u(b);m[b]=w}for(var x in v)m[x]=v[x];p.clientFunctions.forEach(function(n){m[n]=m[n]||function(){sn("Renderer does not implement `renderer."+n+"()` on its prototype")}}),t=y}return q({map:po,keys:[n,l],value:t})}function yo(n,l){return V({map:po,keys:[n,l]})}var mo=function(){return 2===arguments.length?yo.apply(null,arguments):3===arguments.length?vo.apply(null,arguments):4===arguments.length?function(n,l,e,t){return V({map:go,keys:[n,l,e,t]})}.apply(null,arguments):5===arguments.length?function(n,l,e,t,u){return q({map:go,keys:[n,l,e,t],value:u})}.apply(null,arguments):void sn("Invalid extension access syntax")};Sr.prototype.extension=mo,fo.forEach(function(n){n.extensions.forEach(function(l){vo(n.type,l.name,l.impl)})});var bo=function n(){if(!(this instanceof n))return new n;this.length=0},wo=bo.prototype;wo.instanceString=function(){return"stylesheet"},wo.selector=function(n){return this[this.length++]={selector:n,properties:[]},this},wo.css=function(n,l){var e=this.length-1;if(m(n))this[e].properties.push({name:n,value:l});else if(_(n))for(var t=n,u=Object.keys(t),r=0;r<u.length;r++){var i=u[r],o=t[i];if(null!=o){var a=Er.properties[i]||Er.properties[M(i)];if(null!=a){var s=a.name,c=o;this[e].properties.push({name:s,value:c})}}}return this},wo.style=wo.css,wo.generateStyle=function(n){var l=new Er(n);return this.appendToStyle(l)},wo.appendToStyle=function(n){for(var l=0;l<this.length;l++){var e=this[l],t=e.selector,u=e.properties;n.selector(t);for(var r=0;r<u.length;r++){var i=u[r];n.css(i.name,i.value)}}return n};var _o=function(n){return void 0===n&&(n={}),_(n)?new Sr(n):m(n)?mo.apply(mo,arguments):void 0};_o.use=function(n){var l=Array.prototype.slice.call(arguments,1);return l.unshift(_o),n.apply(null,l),this},_o.version="3.4.1",_o.stylesheet=_o.Stylesheet=bo,n.exports=_o}).call(this,e(124).setImmediate)},function(n,l,e){(function(n){var t=void 0!==n&&n||"undefined"!=typeof self&&self||window,u=Function.prototype.apply;function r(n,l){this._id=n,this._clearFn=l}l.setTimeout=function(){return new r(u.call(setTimeout,t,arguments),clearTimeout)},l.setInterval=function(){return new r(u.call(setInterval,t,arguments),clearInterval)},l.clearTimeout=l.clearInterval=function(n){n&&n.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(t,this._id)},l.enroll=function(n,l){clearTimeout(n._idleTimeoutId),n._idleTimeout=l},l.unenroll=function(n){clearTimeout(n._idleTimeoutId),n._idleTimeout=-1},l._unrefActive=l.active=function(n){clearTimeout(n._idleTimeoutId);var l=n._idleTimeout;l>=0&&(n._idleTimeoutId=setTimeout(function(){n._onTimeout&&n._onTimeout()},l))},e(125),l.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==n&&n.setImmediate||this&&this.setImmediate,l.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==n&&n.clearImmediate||this&&this.clearImmediate}).call(this,e(43))},function(n,l,e){(function(n,l){!function(n,e){"use strict";if(!n.setImmediate){var t,u,r,i,o,a=1,s={},c=!1,h=n.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(n);d=d&&d.setTimeout?d:n,"[object process]"==={}.toString.call(n.process)?t=function(n){l.nextTick(function(){p(n)})}:!function(){if(n.postMessage&&!n.importScripts){var l=!0,e=n.onmessage;return n.onmessage=function(){l=!1},n.postMessage("","*"),n.onmessage=e,l}}()?n.MessageChannel?((r=new MessageChannel).port1.onmessage=function(n){p(n.data)},t=function(n){r.port2.postMessage(n)}):h&&"onreadystatechange"in h.createElement("script")?(u=h.documentElement,t=function(n){var l=h.createElement("script");l.onreadystatechange=function(){p(n),l.onreadystatechange=null,u.removeChild(l),l=null},u.appendChild(l)}):t=function(n){setTimeout(p,0,n)}:(i="setImmediate$"+Math.random()+"$",o=function(l){l.source===n&&"string"==typeof l.data&&0===l.data.indexOf(i)&&p(+l.data.slice(i.length))},n.addEventListener?n.addEventListener("message",o,!1):n.attachEvent("onmessage",o),t=function(l){n.postMessage(i+l,"*")}),d.setImmediate=function(n){"function"!=typeof n&&(n=new Function(""+n));for(var l=new Array(arguments.length-1),e=0;e<l.length;e++)l[e]=arguments[e+1];var u={callback:n,args:l};return s[a]=u,t(a),a++},d.clearImmediate=f}function f(n){delete s[n]}function p(n){if(c)setTimeout(p,0,n);else{var l=s[n];if(l){c=!0;try{!function(n){var l=n.callback,t=n.args;switch(t.length){case 0:l();break;case 1:l(t[0]);break;case 2:l(t[0],t[1]);break;case 3:l(t[0],t[1],t[2]);break;default:l.apply(e,t)}}(l)}finally{f(n),c=!1}}}}}("undefined"==typeof self?void 0===n?this:n:self)}).call(this,e(43),e(126))},function(n,l){var e,t,u=n.exports={};function r(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(n){if(e===setTimeout)return setTimeout(n,0);if((e===r||!e)&&setTimeout)return e=setTimeout,setTimeout(n,0);try{return e(n,0)}catch(l){try{return e.call(null,n,0)}catch(l){return e.call(this,n,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:r}catch(n){e=r}try{t="function"==typeof clearTimeout?clearTimeout:i}catch(n){t=i}}();var a,s=[],c=!1,h=-1;function d(){c&&a&&(c=!1,a.length?s=a.concat(s):h=-1,s.length&&f())}function f(){if(!c){var n=o(d);c=!0;for(var l=s.length;l;){for(a=s,s=[];++h<l;)a&&a[h].run();h=-1,l=s.length}a=null,c=!1,function(n){if(t===clearTimeout)return clearTimeout(n);if((t===i||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(n);try{t(n)}catch(l){try{return t.call(null,n)}catch(l){return t.call(this,n)}}}(n)}}function p(n,l){this.fun=n,this.array=l}function g(){}u.nextTick=function(n){var l=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)l[e-1]=arguments[e];s.push(new p(n,l)),1!==s.length||c||o(f)},p.prototype.run=function(){this.fun.apply(null,this.array)},u.title="browser",u.browser=!0,u.env={},u.argv=[],u.version="",u.versions={},u.on=g,u.addListener=g,u.once=g,u.off=g,u.removeListener=g,u.removeAllListeners=g,u.emit=g,u.prependListener=g,u.prependOnceListener=g,u.listeners=function(n){return[]},u.binding=function(n){throw new Error("process.binding is not supported")},u.cwd=function(){return"/"},u.chdir=function(n){throw new Error("process.chdir is not supported")},u.umask=function(){return 0}},function(n,l,e){(function(l){var e="Expected a function",t=NaN,u="[object Symbol]",r=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,a=/^0o[0-7]+$/i,s=parseInt,c="object"==typeof l&&l&&l.Object===Object&&l,h="object"==typeof self&&self&&self.Object===Object&&self,d=c||h||Function("return this")(),f=Object.prototype.toString,p=Math.max,g=Math.min,v=function(){return d.Date.now()};function y(n){var l=typeof n;return!!n&&("object"==l||"function"==l)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&f.call(n)==u}(n))return t;if(y(n)){var l="function"==typeof n.valueOf?n.valueOf():n;n=y(l)?l+"":l}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(r,"");var e=o.test(n);return e||a.test(n)?s(n.slice(2),e?2:8):i.test(n)?t:+n}n.exports=function(n,l,t){var u,r,i,o,a,s,c=0,h=!1,d=!1,f=!0;if("function"!=typeof n)throw new TypeError(e);function b(l){var e=u,t=r;return u=r=void 0,c=l,o=n.apply(t,e)}function w(n){var e=n-s;return void 0===s||e>=l||e<0||d&&n-c>=i}function _(){var n=v();if(w(n))return x(n);a=setTimeout(_,function(n){var e=l-(n-s);return d?g(e,i-(n-c)):e}(n))}function x(n){return a=void 0,f&&u?b(n):(u=r=void 0,o)}function E(){var n=v(),e=w(n);if(u=arguments,r=this,s=n,e){if(void 0===a)return function(n){return c=n,a=setTimeout(_,l),h?b(n):o}(s);if(d)return a=setTimeout(_,l),b(s)}return void 0===a&&(a=setTimeout(_,l)),o}return l=m(l)||0,y(t)&&(h=!!t.leading,i=(d="maxWait"in t)?p(m(t.maxWait)||0,l):i,f="trailing"in t?!!t.trailing:f),E.cancel=function(){void 0!==a&&clearTimeout(a),c=0,u=s=r=a=void 0},E.flush=function(){return void 0===a?o:x(v())},E}}).call(this,e(43))},function(n,l,e){n.exports=e(129)},function(n,l,e){var t,u,r;(function(){var e,i,o,a,s,c,h,d,f,p,g,v,y,m,b;o=Math.floor,p=Math.min,i=function(n,l){return n<l?-1:n>l?1:0},f=function(n,l,e,t,u){var r;if(null==e&&(e=0),null==u&&(u=i),e<0)throw new Error("lo must be non-negative");for(null==t&&(t=n.length);e<t;)u(l,n[r=o((e+t)/2)])<0?t=r:e=r+1;return[].splice.apply(n,[e,e-e].concat(l)),l},c=function(n,l,e){return null==e&&(e=i),n.push(l),m(n,0,n.length-1,e)},s=function(n,l){var e,t;return null==l&&(l=i),e=n.pop(),n.length?(t=n[0],n[0]=e,b(n,0,l)):t=e,t},d=function(n,l,e){var t;return null==e&&(e=i),t=n[0],n[0]=l,b(n,0,e),t},h=function(n,l,e){var t;return null==e&&(e=i),n.length&&e(n[0],l)<0&&(l=(t=[n[0],l])[0],n[0]=t[1],b(n,0,e)),l},a=function(n,l){var e,t,u,r,a,s;for(null==l&&(l=i),a=[],t=0,u=(r=function(){s=[];for(var l=0,e=o(n.length/2);0<=e?l<e:l>e;0<=e?l++:l--)s.push(l);return s}.apply(this).reverse()).length;t<u;t++)e=r[t],a.push(b(n,e,l));return a},y=function(n,l,e){var t;if(null==e&&(e=i),-1!==(t=n.indexOf(l)))return m(n,0,t,e),b(n,t,e)},g=function(n,l,e){var t,u,r,o,s;if(null==e&&(e=i),!(u=n.slice(0,l)).length)return u;for(a(u,e),r=0,o=(s=n.slice(l)).length;r<o;r++)t=s[r],h(u,t,e);return u.sort(e).reverse()},v=function(n,l,e){var t,u,r,o,c,h,d,g,v;if(null==e&&(e=i),10*l<=n.length){if(!(r=n.slice(0,l).sort(e)).length)return r;for(u=r[r.length-1],o=0,h=(d=n.slice(l)).length;o<h;o++)e(t=d[o],u)<0&&(f(r,t,0,null,e),r.pop(),u=r[r.length-1]);return r}for(a(n,e),v=[],c=0,g=p(l,n.length);0<=g?c<g:c>g;0<=g?++c:--c)v.push(s(n,e));return v},m=function(n,l,e,t){var u,r,o;for(null==t&&(t=i),u=n[e];e>l&&t(u,r=n[o=e-1>>1])<0;)n[e]=r,e=o;return n[e]=u},b=function(n,l,e){var t,u,r,o,a;for(null==e&&(e=i),u=n.length,a=l,r=n[l],t=2*l+1;t<u;)(o=t+1)<u&&!(e(n[t],n[o])<0)&&(t=o),n[l]=n[t],t=2*(l=t)+1;return n[l]=r,m(n,a,l,e)},e=function(){function n(n){this.cmp=null!=n?n:i,this.nodes=[]}return n.push=c,n.pop=s,n.replace=d,n.pushpop=h,n.heapify=a,n.updateItem=y,n.nlargest=g,n.nsmallest=v,n.prototype.push=function(n){return c(this.nodes,n,this.cmp)},n.prototype.pop=function(){return s(this.nodes,this.cmp)},n.prototype.peek=function(){return this.nodes[0]},n.prototype.contains=function(n){return-1!==this.nodes.indexOf(n)},n.prototype.replace=function(n){return d(this.nodes,n,this.cmp)},n.prototype.pushpop=function(n){return h(this.nodes,n,this.cmp)},n.prototype.heapify=function(){return a(this.nodes,this.cmp)},n.prototype.updateItem=function(n){return y(this.nodes,n,this.cmp)},n.prototype.clear=function(){return this.nodes=[]},n.prototype.empty=function(){return 0===this.nodes.length},n.prototype.size=function(){return this.nodes.length},n.prototype.clone=function(){var l;return(l=new n).nodes=this.nodes.slice(0),l},n.prototype.toArray=function(){return this.nodes.slice(0)},n.prototype.insert=n.prototype.push,n.prototype.top=n.prototype.peek,n.prototype.front=n.prototype.peek,n.prototype.has=n.prototype.contains,n.prototype.copy=n.prototype.clone,n}(),u=[],void 0===(r="function"==typeof(t=function(){return e})?t.apply(l,u):t)||(n.exports=r)}).call(this)},function(n,l,e){var t;t=function(){return function(n){var l={};function e(t){if(l[t])return l[t].exports;var u=l[t]={i:t,l:!1,exports:{}};return n[t].call(u.exports,u,u.exports,e),u.l=!0,u.exports}return e.m=n,e.c=l,e.i=function(n){return n},e.d=function(n,l,t){e.o(n,l)||Object.defineProperty(n,l,{configurable:!1,enumerable:!0,get:t})},e.n=function(n){var l=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(l,"a",l),l},e.o=function(n,l){return Object.prototype.hasOwnProperty.call(n,l)},e.p="",e(e.s=32)}([function(n,l,e){"use strict";function t(){}t.PROOF_QUALITY=0,t.DEFAULT_QUALITY=1,t.DRAFT_QUALITY=2,t.DEFAULT_CREATE_BENDS_AS_NEEDED=!1,t.DEFAULT_INCREMENTAL=!1,t.DEFAULT_ANIMATION_ON_LAYOUT=!0,t.DEFAULT_ANIMATION_DURING_LAYOUT=!1,t.DEFAULT_ANIMATION_PERIOD=50,t.DEFAULT_UNIFORM_LEAF_NODE_SIZES=!1,t.DEFAULT_GRAPH_MARGIN=15,t.NODE_DIMENSIONS_INCLUDE_LABELS=!1,t.SIMPLE_NODE_SIZE=40,t.SIMPLE_NODE_HALF_SIZE=t.SIMPLE_NODE_SIZE/2,t.EMPTY_COMPOUND_NODE_SIZE=40,t.MIN_EDGE_LENGTH=1,t.WORLD_BOUNDARY=1e6,t.INITIAL_WORLD_BOUNDARY=t.WORLD_BOUNDARY/1e3,t.WORLD_CENTER_X=1200,t.WORLD_CENTER_Y=900,n.exports=t},function(n,l,e){"use strict";var t=e(0);function u(){}for(var r in t)u[r]=t[r];u.MAX_ITERATIONS=2500,u.DEFAULT_EDGE_LENGTH=50,u.DEFAULT_SPRING_STRENGTH=.45,u.DEFAULT_REPULSION_STRENGTH=4500,u.DEFAULT_GRAVITY_STRENGTH=.4,u.DEFAULT_COMPOUND_GRAVITY_STRENGTH=1,u.DEFAULT_GRAVITY_RANGE_FACTOR=3.8,u.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=1.5,u.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION=!0,u.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION=!0,u.DEFAULT_COOLING_FACTOR_INCREMENTAL=.5,u.MAX_NODE_DISPLACEMENT_INCREMENTAL=100,u.MAX_NODE_DISPLACEMENT=3*u.MAX_NODE_DISPLACEMENT_INCREMENTAL,u.MIN_REPULSION_DIST=u.DEFAULT_EDGE_LENGTH/10,u.CONVERGENCE_CHECK_PERIOD=100,u.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=.1,u.MIN_EDGE_LENGTH=1,u.GRID_CALCULATION_CHECK_PERIOD=10,n.exports=u},function(n,l,e){"use strict";function t(){}t.MAX_VALUE=2147483647,t.MIN_VALUE=-2147483648,n.exports=t},function(n,l,e){"use strict";var t=e(10),u=e(7),r=e(8);function i(n,l,e){t.call(this,e),this.isOverlapingSourceAndTarget=!1,this.vGraphObject=e,this.bendpoints=[],this.source=n,this.target=l}for(var o in i.prototype=Object.create(t.prototype),t)i[o]=t[o];i.prototype.getSource=function(){return this.source},i.prototype.getTarget=function(){return this.target},i.prototype.isInterGraph=function(){return this.isInterGraph},i.prototype.getLength=function(){return this.length},i.prototype.isOverlapingSourceAndTarget=function(){return this.isOverlapingSourceAndTarget},i.prototype.getBendpoints=function(){return this.bendpoints},i.prototype.getLca=function(){return this.lca},i.prototype.getSourceInLca=function(){return this.sourceInLca},i.prototype.getTargetInLca=function(){return this.targetInLca},i.prototype.getOtherEnd=function(n){if(this.source===n)return this.target;if(this.target===n)return this.source;throw"Node is not incident with this edge"},i.prototype.getOtherEndInGraph=function(n,l){for(var e=this.getOtherEnd(n),t=l.getGraphManager().getRoot();;){if(e.getOwner()==l)return e;if(e.getOwner()==t)break;e=e.getOwner().getParent()}return null},i.prototype.updateLength=function(){var n=new Array(4);this.isOverlapingSourceAndTarget=u.getIntersection(this.target.getRect(),this.source.getRect(),n),this.isOverlapingSourceAndTarget||(this.lengthX=n[0]-n[2],this.lengthY=n[1]-n[3],Math.abs(this.lengthX)<1&&(this.lengthX=r.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=r.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY))},i.prototype.updateLengthSimple=function(){this.lengthX=this.target.getCenterX()-this.source.getCenterX(),this.lengthY=this.target.getCenterY()-this.source.getCenterY(),Math.abs(this.lengthX)<1&&(this.lengthX=r.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=r.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY)},n.exports=i},function(n,l,e){"use strict";var t=e(10),u=e(2),r=e(0),i=e(9),o=e(11),a=e(3),s=e(6),c=e(14),h=e(13),d=e(31);function f(n,l,e){t.call(this,e),this.estimatedSize=u.MIN_VALUE,this.margin=r.DEFAULT_GRAPH_MARGIN,this.edges=[],this.nodes=[],this.isConnected=!1,this.parent=n,null!=l&&l instanceof i?this.graphManager=l:null!=l&&l instanceof Layout&&(this.graphManager=l.graphManager)}for(var p in f.prototype=Object.create(t.prototype),t)f[p]=t[p];f.prototype.getNodes=function(){return this.nodes},f.prototype.getEdges=function(){return this.edges},f.prototype.getGraphManager=function(){return this.graphManager},f.prototype.getParent=function(){return this.parent},f.prototype.getLeft=function(){return this.left},f.prototype.getRight=function(){return this.right},f.prototype.getTop=function(){return this.top},f.prototype.getBottom=function(){return this.bottom},f.prototype.isConnected=function(){return this.isConnected},f.prototype.add=function(n,l,e){if(null==l&&null==e){var t=n;if(null==this.graphManager)throw"Graph has no graph mgr!";if(this.getNodes().indexOf(t)>-1)throw"Node already in graph!";return t.owner=this,this.getNodes().push(t),t}var u=n;if(!(this.getNodes().indexOf(l)>-1&&this.getNodes().indexOf(e)>-1))throw"Source or target not in graph!";if(l.owner!=e.owner||l.owner!=this)throw"Both owners must be this graph!";return l.owner!=e.owner?null:(u.source=l,u.target=e,u.isInterGraph=!1,this.getEdges().push(u),l.edges.push(u),e!=l&&e.edges.push(u),u)},f.prototype.remove=function(n){var l=n;if(n instanceof o){if(null==l)throw"Node is null!";if(null==l.owner||l.owner!=this)throw"Owner graph is invalid!";if(null==this.graphManager)throw"Owner graph manager is invalid!";for(var e=l.edges.slice(),t=e.length,u=0;u<t;u++)(r=e[u]).isInterGraph?this.graphManager.remove(r):r.source.owner.remove(r);if(-1==(i=this.nodes.indexOf(l)))throw"Node not in owner node list!";this.nodes.splice(i,1)}else if(n instanceof a){var r;if(null==(r=n))throw"Edge is null!";if(null==r.source||null==r.target)throw"Source and/or target is null!";if(null==r.source.owner||null==r.target.owner||r.source.owner!=this||r.target.owner!=this)throw"Source and/or target owner is invalid!";var i,s=r.source.edges.indexOf(r),c=r.target.edges.indexOf(r);if(!(s>-1&&c>-1))throw"Source and/or target doesn't know this edge!";if(r.source.edges.splice(s,1),r.target!=r.source&&r.target.edges.splice(c,1),-1==(i=r.source.owner.getEdges().indexOf(r)))throw"Not in owner's edge list!";r.source.owner.getEdges().splice(i,1)}},f.prototype.updateLeftTop=function(){for(var n,l,e,t=u.MAX_VALUE,r=u.MAX_VALUE,i=this.getNodes(),o=i.length,a=0;a<o;a++){var s=i[a];t>(n=s.getTop())&&(t=n),r>(l=s.getLeft())&&(r=l)}return t==u.MAX_VALUE?null:(e=null!=i[0].getParent().paddingLeft?i[0].getParent().paddingLeft:this.margin,this.left=r-e,this.top=t-e,new h(this.left,this.top))},f.prototype.updateBounds=function(n){for(var l,e,t,r,i,o=u.MAX_VALUE,a=-u.MAX_VALUE,s=u.MAX_VALUE,h=-u.MAX_VALUE,d=this.nodes,f=d.length,p=0;p<f;p++){var g=d[p];n&&null!=g.child&&g.updateBounds(),o>(l=g.getLeft())&&(o=l),a<(e=g.getRight())&&(a=e),s>(t=g.getTop())&&(s=t),h<(r=g.getBottom())&&(h=r)}var v=new c(o,s,a-o,h-s);o==u.MAX_VALUE&&(this.left=this.parent.getLeft(),this.right=this.parent.getRight(),this.top=this.parent.getTop(),this.bottom=this.parent.getBottom()),i=null!=d[0].getParent().paddingLeft?d[0].getParent().paddingLeft:this.margin,this.left=v.x-i,this.right=v.x+v.width+i,this.top=v.y-i,this.bottom=v.y+v.height+i},f.calculateBounds=function(n){for(var l,e,t,r,i=u.MAX_VALUE,o=-u.MAX_VALUE,a=u.MAX_VALUE,s=-u.MAX_VALUE,h=n.length,d=0;d<h;d++){var f=n[d];i>(l=f.getLeft())&&(i=l),o<(e=f.getRight())&&(o=e),a>(t=f.getTop())&&(a=t),s<(r=f.getBottom())&&(s=r)}return new c(i,a,o-i,s-a)},f.prototype.getInclusionTreeDepth=function(){return this==this.graphManager.getRoot()?1:this.parent.getInclusionTreeDepth()},f.prototype.getEstimatedSize=function(){if(this.estimatedSize==u.MIN_VALUE)throw"assert failed";return this.estimatedSize},f.prototype.calcEstimatedSize=function(){for(var n=0,l=this.nodes,e=l.length,t=0;t<e;t++){n+=l[t].calcEstimatedSize()}return this.estimatedSize=0==n?r.EMPTY_COMPOUND_NODE_SIZE:n/Math.sqrt(this.nodes.length),this.estimatedSize},f.prototype.updateConnected=function(){var n=this;if(0!=this.nodes.length){var l,e,t=new d,u=new s,r=this.nodes[0];for(r.withChildren().forEach(function(n){t.push(n)});0!==t.length;){r=t.shift(),u.add(r);for(var i=(l=r.getEdges()).length,o=0;o<i;o++){if(null!=(e=l[o].getOtherEndInGraph(r,this))&&!u.contains(e))e.withChildren().forEach(function(n){t.push(n)})}}if(this.isConnected=!1,u.size()>=this.nodes.length){var a=0;i=u.size();Object.keys(u.set).forEach(function(l){u.set[l].owner==n&&a++}),a==this.nodes.length&&(this.isConnected=!0)}}else this.isConnected=!0},n.exports=f},function(n,l,e){"use strict";function t(n,l){null==n&&null==l?(this.x=0,this.y=0):(this.x=n,this.y=l)}t.prototype.getX=function(){return this.x},t.prototype.getY=function(){return this.y},t.prototype.setX=function(n){this.x=n},t.prototype.setY=function(n){this.y=n},t.prototype.getDifference=function(n){return new DimensionD(this.x-n.x,this.y-n.y)},t.prototype.getCopy=function(){return new t(this.x,this.y)},t.prototype.translate=function(n){return this.x+=n.width,this.y+=n.height,this},n.exports=t},function(n,l,e){"use strict";var t=e(16);function u(){this.set={}}u.prototype.add=function(n){var l=t.createID(n);this.contains(l)||(this.set[l]=n)},u.prototype.remove=function(n){delete this.set[t.createID(n)]},u.prototype.clear=function(){this.set={}},u.prototype.contains=function(n){return this.set[t.createID(n)]==n},u.prototype.isEmpty=function(){return 0===this.size()},u.prototype.size=function(){return Object.keys(this.set).length},u.prototype.addAllTo=function(n){for(var l=Object.keys(this.set),e=l.length,t=0;t<e;t++)n.push(this.set[l[t]])},u.prototype.size=function(){return Object.keys(this.set).length},u.prototype.addAll=function(n){for(var l=n.length,e=0;e<l;e++){var t=n[e];this.add(t)}},n.exports=u},function(n,l,e){"use strict";function t(){}t.calcSeparationAmount=function(n,l,e,u){if(!n.intersects(l))throw"assert failed";var r=new Array(2);t.decideDirectionsForOverlappingNodes(n,l,r),e[0]=Math.min(n.getRight(),l.getRight())-Math.max(n.x,l.x),e[1]=Math.min(n.getBottom(),l.getBottom())-Math.max(n.y,l.y),n.getX()<=l.getX()&&n.getRight()>=l.getRight()?e[0]+=Math.min(l.getX()-n.getX(),n.getRight()-l.getRight()):l.getX()<=n.getX()&&l.getRight()>=n.getRight()&&(e[0]+=Math.min(n.getX()-l.getX(),l.getRight()-n.getRight())),n.getY()<=l.getY()&&n.getBottom()>=l.getBottom()?e[1]+=Math.min(l.getY()-n.getY(),n.getBottom()-l.getBottom()):l.getY()<=n.getY()&&l.getBottom()>=n.getBottom()&&(e[1]+=Math.min(n.getY()-l.getY(),l.getBottom()-n.getBottom()));var i=Math.abs((l.getCenterY()-n.getCenterY())/(l.getCenterX()-n.getCenterX()));l.getCenterY()==n.getCenterY()&&l.getCenterX()==n.getCenterX()&&(i=1);var o=i*e[0],a=e[1]/i;e[0]<a?a=e[0]:o=e[1],e[0]=-1*r[0]*(a/2+u),e[1]=-1*r[1]*(o/2+u)},t.decideDirectionsForOverlappingNodes=function(n,l,e){n.getCenterX()<l.getCenterX()?e[0]=-1:e[0]=1,n.getCenterY()<l.getCenterY()?e[1]=-1:e[1]=1},t.getIntersection2=function(n,l,e){var u=n.getCenterX(),r=n.getCenterY(),i=l.getCenterX(),o=l.getCenterY();if(n.intersects(l))return e[0]=u,e[1]=r,e[2]=i,e[3]=o,!0;var a=n.getX(),s=n.getY(),c=n.getRight(),h=n.getX(),d=n.getBottom(),f=n.getRight(),p=n.getWidthHalf(),g=n.getHeightHalf(),v=l.getX(),y=l.getY(),m=l.getRight(),b=l.getX(),w=l.getBottom(),_=l.getRight(),x=l.getWidthHalf(),E=l.getHeightHalf(),T=!1,k=!1;if(u==i){if(r>o)return e[0]=u,e[1]=s,e[2]=i,e[3]=w,!1;if(r<o)return e[0]=u,e[1]=d,e[2]=i,e[3]=y,!1}else if(r==o){if(u>i)return e[0]=a,e[1]=r,e[2]=m,e[3]=o,!1;if(u<i)return e[0]=c,e[1]=r,e[2]=v,e[3]=o,!1}else{var C,S,I,N,D,O,A=n.height/n.width,P=l.height/l.width,M=(o-r)/(i-u);if(-A==M?u>i?(e[0]=h,e[1]=d,T=!0):(e[0]=c,e[1]=s,T=!0):A==M&&(u>i?(e[0]=a,e[1]=s,T=!0):(e[0]=f,e[1]=d,T=!0)),-P==M?i>u?(e[2]=b,e[3]=w,k=!0):(e[2]=m,e[3]=y,k=!0):P==M&&(i>u?(e[2]=v,e[3]=y,k=!0):(e[2]=_,e[3]=w,k=!0)),T&&k)return!1;if(u>i?r>o?(C=t.getCardinalDirection(A,M,4),S=t.getCardinalDirection(P,M,2)):(C=t.getCardinalDirection(-A,M,3),S=t.getCardinalDirection(-P,M,1)):r>o?(C=t.getCardinalDirection(-A,M,1),S=t.getCardinalDirection(-P,M,3)):(C=t.getCardinalDirection(A,M,2),S=t.getCardinalDirection(P,M,4)),!T)switch(C){case 1:N=s,I=u+-g/M,e[0]=I,e[1]=N;break;case 2:I=f,N=r+p*M,e[0]=I,e[1]=N;break;case 3:N=d,I=u+g/M,e[0]=I,e[1]=N;break;case 4:I=h,N=r+-p*M,e[0]=I,e[1]=N}if(!k)switch(S){case 1:O=y,D=i+-E/M,e[2]=D,e[3]=O;break;case 2:D=_,O=o+x*M,e[2]=D,e[3]=O;break;case 3:O=w,D=i+E/M,e[2]=D,e[3]=O;break;case 4:D=b,O=o+-x*M,e[2]=D,e[3]=O}}return!1},t.getCardinalDirection=function(n,l,e){return n>l?e:1+e%4},t.getIntersection=function(n,l,e,u){if(null==u)return t.getIntersection2(n,l,e);var r,i,o,a,s,c,h,d=n.x,f=n.y,p=l.x,g=l.y,v=e.x,y=e.y,m=u.x,b=u.y;return s=p*f-d*g,c=m*y-v*b,0==(h=(r=g-f)*(a=v-m)-(i=b-y)*(o=d-p))?null:new Point((o*c-a*s)/h,(i*s-r*c)/h)},t.HALF_PI=.5*Math.PI,t.ONE_AND_HALF_PI=1.5*Math.PI,t.TWO_PI=2*Math.PI,t.THREE_PI=3*Math.PI,n.exports=t},function(n,l,e){"use strict";function t(){}t.sign=function(n){return n>0?1:n<0?-1:0},t.floor=function(n){return n<0?Math.ceil(n):Math.floor(n)},t.ceil=function(n){return n<0?Math.floor(n):Math.ceil(n)},n.exports=t},function(n,l,e){"use strict";var t,u=e(3);function r(n){t=e(4),this.layout=n,this.graphs=[],this.edges=[]}r.prototype.addRoot=function(){var n=this.layout.newGraph(),l=this.layout.newNode(null),e=this.add(n,l);return this.setRootGraph(e),this.rootGraph},r.prototype.add=function(n,l,e,t,u){if(null==e&&null==t&&null==u){if(null==n)throw"Graph is null!";if(null==l)throw"Parent node is null!";if(this.graphs.indexOf(n)>-1)throw"Graph already in this graph mgr!";if(this.graphs.push(n),null!=n.parent)throw"Already has a parent!";if(null!=l.child)throw"Already has a child!";return n.parent=l,l.child=n,n}u=e,e=n;var r=(t=l).getOwner(),i=u.getOwner();if(null==r||r.getGraphManager()!=this)throw"Source not in this graph mgr!";if(null==i||i.getGraphManager()!=this)throw"Target not in this graph mgr!";if(r==i)return e.isInterGraph=!1,r.add(e,t,u);if(e.isInterGraph=!0,e.source=t,e.target=u,this.edges.indexOf(e)>-1)throw"Edge already in inter-graph edge list!";if(this.edges.push(e),null==e.source||null==e.target)throw"Edge source and/or target is null!";if(-1!=e.source.edges.indexOf(e)||-1!=e.target.edges.indexOf(e))throw"Edge already in source and/or target incidency list!";return e.source.edges.push(e),e.target.edges.push(e),e},r.prototype.remove=function(n){if(n instanceof t){var l=n;if(l.getGraphManager()!=this)throw"Graph not in this graph mgr";if(l!=this.rootGraph&&(null==l.parent||l.parent.graphManager!=this))throw"Invalid parent node!";for(var e,r=[],i=(r=r.concat(l.getEdges())).length,o=0;o<i;o++)e=r[o],l.remove(e);var a,s=[];i=(s=s.concat(l.getNodes())).length;for(o=0;o<i;o++)a=s[o],l.remove(a);l==this.rootGraph&&this.setRootGraph(null);var c=this.graphs.indexOf(l);this.graphs.splice(c,1),l.parent=null}else if(n instanceof u){if(null==(e=n))throw"Edge is null!";if(!e.isInterGraph)throw"Not an inter-graph edge!";if(null==e.source||null==e.target)throw"Source and/or target is null!";if(-1==e.source.edges.indexOf(e)||-1==e.target.edges.indexOf(e))throw"Source and/or target doesn't know this edge!";c=e.source.edges.indexOf(e);if(e.source.edges.splice(c,1),c=e.target.edges.indexOf(e),e.target.edges.splice(c,1),null==e.source.owner||null==e.source.owner.getGraphManager())throw"Edge owner graph or owner graph manager is null!";if(-1==e.source.owner.getGraphManager().edges.indexOf(e))throw"Not in owner graph manager's edge list!";c=e.source.owner.getGraphManager().edges.indexOf(e);e.source.owner.getGraphManager().edges.splice(c,1)}},r.prototype.updateBounds=function(){this.rootGraph.updateBounds(!0)},r.prototype.getGraphs=function(){return this.graphs},r.prototype.getAllNodes=function(){if(null==this.allNodes){for(var n=[],l=this.getGraphs(),e=l.length,t=0;t<e;t++)n=n.concat(l[t].getNodes());this.allNodes=n}return this.allNodes},r.prototype.resetAllNodes=function(){this.allNodes=null},r.prototype.resetAllEdges=function(){this.allEdges=null},r.prototype.resetAllNodesToApplyGravitation=function(){this.allNodesToApplyGravitation=null},r.prototype.getAllEdges=function(){if(null==this.allEdges){for(var n=[],l=this.getGraphs(),e=(l.length,0);e<l.length;e++)n=n.concat(l[e].getEdges());n=n.concat(this.edges),this.allEdges=n}return this.allEdges},r.prototype.getAllNodesToApplyGravitation=function(){return this.allNodesToApplyGravitation},r.prototype.setAllNodesToApplyGravitation=function(n){if(null!=this.allNodesToApplyGravitation)throw"assert failed";this.allNodesToApplyGravitation=n},r.prototype.getRoot=function(){return this.rootGraph},r.prototype.setRootGraph=function(n){if(n.getGraphManager()!=this)throw"Root not in this graph mgr!";this.rootGraph=n,null==n.parent&&(n.parent=this.layout.newNode("Root node"))},r.prototype.getLayout=function(){return this.layout},r.prototype.isOneAncestorOfOther=function(n,l){if(null==n||null==l)throw"assert failed";if(n==l)return!0;for(var e,t=n.getOwner();;){if(null==(e=t.getParent()))break;if(e==l)return!0;if(null==(t=e.getOwner()))break}for(t=l.getOwner();;){if(null==(e=t.getParent()))break;if(e==n)return!0;if(null==(t=e.getOwner()))break}return!1},r.prototype.calcLowestCommonAncestors=function(){for(var n,l,e,t,u,r=this.getAllEdges(),i=r.length,o=0;o<i;o++)if(l=(n=r[o]).source,e=n.target,n.lca=null,n.sourceInLca=l,n.targetInLca=e,l!=e){for(t=l.getOwner();null==n.lca;){for(n.targetInLca=e,u=e.getOwner();null==n.lca;){if(u==t){n.lca=u;break}if(u==this.rootGraph)break;if(null!=n.lca)throw"assert failed";n.targetInLca=u.getParent(),u=n.targetInLca.getOwner()}if(t==this.rootGraph)break;null==n.lca&&(n.sourceInLca=t.getParent(),t=n.sourceInLca.getOwner())}if(null==n.lca)throw"assert failed"}else n.lca=l.getOwner()},r.prototype.calcLowestCommonAncestor=function(n,l){if(n==l)return n.getOwner();for(var e=n.getOwner();;){if(null==e)break;for(var t=l.getOwner();;){if(null==t)break;if(t==e)return t;t=t.getParent().getOwner()}e=e.getParent().getOwner()}return e},r.prototype.calcInclusionTreeDepths=function(n,l){var e;null==n&&null==l&&(n=this.rootGraph,l=1);for(var t=n.getNodes(),u=t.length,r=0;r<u;r++)(e=t[r]).inclusionTreeDepth=l,null!=e.child&&this.calcInclusionTreeDepths(e.child,l+1)},r.prototype.includesInvalidEdge=function(){for(var n,l=this.edges.length,e=0;e<l;e++)if(n=this.edges[e],this.isOneAncestorOfOther(n.source,n.target))return!0;return!1},n.exports=r},function(n,l,e){"use strict";n.exports=function(n){this.vGraphObject=n}},function(n,l,e){"use strict";var t=e(10),u=e(2),r=e(14),i=e(0),o=e(26),a=e(5),s=e(6);function c(n,l,e,i){null==e&&null==i&&(i=l),t.call(this,i),null!=n.graphManager&&(n=n.graphManager),this.estimatedSize=u.MIN_VALUE,this.inclusionTreeDepth=u.MAX_VALUE,this.vGraphObject=i,this.edges=[],this.graphManager=n,this.rect=null!=e&&null!=l?new r(l.x,l.y,e.width,e.height):new r}for(var h in c.prototype=Object.create(t.prototype),t)c[h]=t[h];c.prototype.getEdges=function(){return this.edges},c.prototype.getChild=function(){return this.child},c.prototype.getOwner=function(){return this.owner},c.prototype.getWidth=function(){return this.rect.width},c.prototype.setWidth=function(n){this.rect.width=n},c.prototype.getHeight=function(){return this.rect.height},c.prototype.setHeight=function(n){this.rect.height=n},c.prototype.getCenterX=function(){return this.rect.x+this.rect.width/2},c.prototype.getCenterY=function(){return this.rect.y+this.rect.height/2},c.prototype.getCenter=function(){return new a(this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2)},c.prototype.getLocation=function(){return new a(this.rect.x,this.rect.y)},c.prototype.getRect=function(){return this.rect},c.prototype.getDiagonal=function(){return Math.sqrt(this.rect.width*this.rect.width+this.rect.height*this.rect.height)},c.prototype.setRect=function(n,l){this.rect.x=n.x,this.rect.y=n.y,this.rect.width=l.width,this.rect.height=l.height},c.prototype.setCenter=function(n,l){this.rect.x=n-this.rect.width/2,this.rect.y=l-this.rect.height/2},c.prototype.setLocation=function(n,l){this.rect.x=n,this.rect.y=l},c.prototype.moveBy=function(n,l){this.rect.x+=n,this.rect.y+=l},c.prototype.getEdgeListToNode=function(n){var l=[],e=this;return e.edges.forEach(function(t){if(t.target==n){if(t.source!=e)throw"Incorrect edge source!";l.push(t)}}),l},c.prototype.getEdgesBetween=function(n){var l=[],e=this;return e.edges.forEach(function(t){if(t.source!=e&&t.target!=e)throw"Incorrect edge source and/or target";t.target!=n&&t.source!=n||l.push(t)}),l},c.prototype.getNeighborsList=function(){var n=new s,l=this;return l.edges.forEach(function(e){if(e.source==l)n.add(e.target);else{if(e.target!=l)throw"Incorrect incidency!";n.add(e.source)}}),n},c.prototype.withChildren=function(){var n=new Set;if(n.add(this),null!=this.child)for(var l=this.child.getNodes(),e=0;e<l.length;e++)l[e].withChildren().forEach(function(l){n.add(l)});return n},c.prototype.getNoOfChildren=function(){var n=0;if(null==this.child)n=1;else for(var l=this.child.getNodes(),e=0;e<l.length;e++)n+=l[e].getNoOfChildren();return 0==n&&(n=1),n},c.prototype.getEstimatedSize=function(){if(this.estimatedSize==u.MIN_VALUE)throw"assert failed";return this.estimatedSize},c.prototype.calcEstimatedSize=function(){return null==this.child?this.estimatedSize=(this.rect.width+this.rect.height)/2:(this.estimatedSize=this.child.calcEstimatedSize(),this.rect.width=this.estimatedSize,this.rect.height=this.estimatedSize,this.estimatedSize)},c.prototype.scatter=function(){var n,l,e=-i.INITIAL_WORLD_BOUNDARY,t=i.INITIAL_WORLD_BOUNDARY;n=i.WORLD_CENTER_X+o.nextDouble()*(t-e)+e;var u=-i.INITIAL_WORLD_BOUNDARY,r=i.INITIAL_WORLD_BOUNDARY;l=i.WORLD_CENTER_Y+o.nextDouble()*(r-u)+u,this.rect.x=n,this.rect.y=l},c.prototype.updateBounds=function(){if(null==this.getChild())throw"assert failed";if(0!=this.getChild().getNodes().length){var n=this.getChild();if(n.updateBounds(!0),this.rect.x=n.getLeft(),this.rect.y=n.getTop(),this.setWidth(n.getRight()-n.getLeft()),this.setHeight(n.getBottom()-n.getTop()),i.NODE_DIMENSIONS_INCLUDE_LABELS){var l=n.getRight()-n.getLeft(),e=n.getBottom()-n.getTop();this.labelWidth>l&&(this.rect.x-=(this.labelWidth-l)/2,this.setWidth(this.labelWidth)),this.labelHeight>e&&("center"==this.labelPos?this.rect.y-=(this.labelHeight-e)/2:"top"==this.labelPos&&(this.rect.y-=this.labelHeight-e),this.setHeight(this.labelHeight))}}},c.prototype.getInclusionTreeDepth=function(){if(this.inclusionTreeDepth==u.MAX_VALUE)throw"assert failed";return this.inclusionTreeDepth},c.prototype.transform=function(n){var l=this.rect.x;l>i.WORLD_BOUNDARY?l=i.WORLD_BOUNDARY:l<-i.WORLD_BOUNDARY&&(l=-i.WORLD_BOUNDARY);var e=this.rect.y;e>i.WORLD_BOUNDARY?e=i.WORLD_BOUNDARY:e<-i.WORLD_BOUNDARY&&(e=-i.WORLD_BOUNDARY);var t=new a(l,e),u=n.inverseTransformPoint(t);this.setLocation(u.x,u.y)},c.prototype.getLeft=function(){return this.rect.x},c.prototype.getRight=function(){return this.rect.x+this.rect.width},c.prototype.getTop=function(){return this.rect.y},c.prototype.getBottom=function(){return this.rect.y+this.rect.height},c.prototype.getParent=function(){return null==this.owner?null:this.owner.getParent()},n.exports=c},function(n,l,e){"use strict";var t=e(0),u=e(25),r=e(9),i=e(11),o=e(3),a=e(4),s=e(5),c=e(15),h=e(30),d=e(6);function f(n){h.call(this),this.layoutQuality=t.DEFAULT_QUALITY,this.createBendsAsNeeded=t.DEFAULT_CREATE_BENDS_AS_NEEDED,this.incremental=t.DEFAULT_INCREMENTAL,this.animationOnLayout=t.DEFAULT_ANIMATION_ON_LAYOUT,this.animationDuringLayout=t.DEFAULT_ANIMATION_DURING_LAYOUT,this.animationPeriod=t.DEFAULT_ANIMATION_PERIOD,this.uniformLeafNodeSizes=t.DEFAULT_UNIFORM_LEAF_NODE_SIZES,this.edgeToDummyNodes=new u,this.graphManager=new r(this),this.isLayoutFinished=!1,this.isSubLayout=!1,this.isRemoteUse=!1,null!=n&&(this.isRemoteUse=n)}f.RANDOM_SEED=1,f.prototype=Object.create(h.prototype),f.prototype.getGraphManager=function(){return this.graphManager},f.prototype.getAllNodes=function(){return this.graphManager.getAllNodes()},f.prototype.getAllEdges=function(){return this.graphManager.getAllEdges()},f.prototype.getAllNodesToApplyGravitation=function(){return this.graphManager.getAllNodesToApplyGravitation()},f.prototype.newGraphManager=function(){var n=new r(this);return this.graphManager=n,n},f.prototype.newGraph=function(n){return new a(null,this.graphManager,n)},f.prototype.newNode=function(n){return new i(this.graphManager,n)},f.prototype.newEdge=function(n){return new o(null,null,n)},f.prototype.checkLayoutSuccess=function(){return null==this.graphManager.getRoot()||0==this.graphManager.getRoot().getNodes().length||this.graphManager.includesInvalidEdge()},f.prototype.runLayout=function(){var n;return this.isLayoutFinished=!1,this.tilingPreLayout&&this.tilingPreLayout(),this.initParameters(),n=!this.checkLayoutSuccess()&&this.layout(),"during"!==t.ANIMATE&&(n&&(this.isSubLayout||this.doPostLayout()),this.tilingPostLayout&&this.tilingPostLayout(),this.isLayoutFinished=!0,n)},f.prototype.doPostLayout=function(){this.incremental||this.transform(),this.update()},f.prototype.update2=function(){if(this.createBendsAsNeeded&&(this.createBendpointsFromDummyNodes(),this.graphManager.resetAllEdges()),!this.isRemoteUse){for(var n=this.graphManager.getAllEdges(),l=0;l<n.length;l++)n[l];var e=this.graphManager.getRoot().getNodes();for(l=0;l<e.length;l++)e[l];this.update(this.graphManager.getRoot())}},f.prototype.update=function(n){if(null==n)this.update2();else if(n instanceof i){var l=n;if(null!=l.getChild())for(var e=l.getChild().getNodes(),t=0;t<e.length;t++)update(e[t]);if(null!=l.vGraphObject)l.vGraphObject.update(l)}else if(n instanceof o){var u=n;if(null!=u.vGraphObject)u.vGraphObject.update(u)}else if(n instanceof a){var r=n;if(null!=r.vGraphObject)r.vGraphObject.update(r)}},f.prototype.initParameters=function(){this.isSubLayout||(this.layoutQuality=t.DEFAULT_QUALITY,this.animationDuringLayout=t.DEFAULT_ANIMATION_DURING_LAYOUT,this.animationPeriod=t.DEFAULT_ANIMATION_PERIOD,this.animationOnLayout=t.DEFAULT_ANIMATION_ON_LAYOUT,this.incremental=t.DEFAULT_INCREMENTAL,this.createBendsAsNeeded=t.DEFAULT_CREATE_BENDS_AS_NEEDED,this.uniformLeafNodeSizes=t.DEFAULT_UNIFORM_LEAF_NODE_SIZES),this.animationDuringLayout&&(this.animationOnLayout=!1)},f.prototype.transform=function(n){if(null==n)this.transform(new s(0,0));else{var l=new c,e=this.graphManager.getRoot().updateLeftTop();if(null!=e){l.setWorldOrgX(n.x),l.setWorldOrgY(n.y),l.setDeviceOrgX(e.x),l.setDeviceOrgY(e.y);for(var t=this.getAllNodes(),u=0;u<t.length;u++)t[u].transform(l)}}},f.prototype.positionNodesRandomly=function(n){if(null==n)this.positionNodesRandomly(this.getGraphManager().getRoot()),this.getGraphManager().getRoot().updateBounds(!0);else for(var l,e,t=n.getNodes(),u=0;u<t.length;u++)null==(e=(l=t[u]).getChild())?l.scatter():0==e.getNodes().length?l.scatter():(this.positionNodesRandomly(e),l.updateBounds())},f.prototype.getFlatForest=function(){for(var n=[],l=!0,e=this.graphManager.getRoot().getNodes(),t=!0,r=0;r<e.length;r++)null!=e[r].getChild()&&(t=!1);if(!t)return n;var i=new d,o=[],a=new u,s=[];for(s=s.concat(e);s.length>0&&l;){for(o.push(s[0]);o.length>0&&l;){var c=o[0];o.splice(0,1),i.add(c);var h=c.getEdges();for(r=0;r<h.length;r++){var f=h[r].getOtherEnd(c);if(a.get(c)!=f){if(i.contains(f)){l=!1;break}o.push(f),a.put(f,c)}}}if(l){var p=[];i.addAllTo(p),n.push(p);for(r=0;r<p.length;r++){var g=p[r],v=s.indexOf(g);v>-1&&s.splice(v,1)}i=new d,a=new u}else n=[]}return n},f.prototype.createDummyNodesForBendpoints=function(n){for(var l=[],e=n.source,t=this.graphManager.calcLowestCommonAncestor(n.source,n.target),u=0;u<n.bendpoints.length;u++){var r=this.newNode(null);r.setRect(new Point(0,0),new Dimension(1,1)),t.add(r);var i=this.newEdge(null);this.graphManager.add(i,e,r),l.add(r),e=r}i=this.newEdge(null);return this.graphManager.add(i,e,n.target),this.edgeToDummyNodes.put(n,l),n.isInterGraph()?this.graphManager.remove(n):t.remove(n),l},f.prototype.createBendpointsFromDummyNodes=function(){var n=[];n=n.concat(this.graphManager.getAllEdges()),n=this.edgeToDummyNodes.keySet().concat(n);for(var l=0;l<n.length;l++){var e=n[l];if(e.bendpoints.length>0){for(var t=this.edgeToDummyNodes.get(e),u=0;u<t.length;u++){var r=t[u],i=new s(r.getCenterX(),r.getCenterY()),o=e.bendpoints.get(u);o.x=i.x,o.y=i.y,r.getOwner().remove(r)}this.graphManager.add(e,e.source,e.target)}}},f.transform=function(n,l,e,t){if(null!=e&&null!=t){var u=l;if(n<=50)u-=(l-l/e)/50*(50-n);else u+=(l*t-l)/50*(n-50);return u}var r,i;return n<=50?(r=9*l/500,i=l/10):(r=9*l/50,i=-8*l),r*n+i},f.findCenterOfTree=function(n){var l=[];l=l.concat(n);var e=[],t=new u,r=!1,i=null;1!=l.length&&2!=l.length||(r=!0,i=l[0]);for(var o=0;o<l.length;o++){var a=(h=l[o]).getNeighborsList().size();t.put(h,h.getNeighborsList().size()),1==a&&e.push(h)}var s=[];for(s=s.concat(e);!r;){var c=[];c=c.concat(s),s=[];for(o=0;o<l.length;o++){var h=l[o],d=l.indexOf(h);d>=0&&l.splice(d,1);var f=h.getNeighborsList();Object.keys(f.set).forEach(function(n){var l=f.set[n];if(e.indexOf(l)<0){var u=t.get(l)-1;1==u&&s.push(l),t.put(l,u)}})}e=e.concat(s),1!=l.length&&2!=l.length||(r=!0,i=l[0])}return i},f.prototype.setGraphManager=function(n){this.graphManager=n},n.exports=f},function(n,l,e){"use strict";function t(n,l,e){this.x=null,this.y=null,null==n&&null==l&&null==e?(this.x=0,this.y=0):"number"==typeof n&&"number"==typeof l&&null==e?(this.x=n,this.y=l):"Point"==n.constructor.name&&null==l&&null==e&&(e=n,this.x=e.x,this.y=e.y)}t.prototype.getX=function(){return this.x},t.prototype.getY=function(){return this.y},t.prototype.getLocation=function(){return new t(this.x,this.y)},t.prototype.setLocation=function(n,l,e){"Point"==n.constructor.name&&null==l&&null==e?(e=n,this.setLocation(e.x,e.y)):"number"==typeof n&&"number"==typeof l&&null==e&&(parseInt(n)==n&&parseInt(l)==l?this.move(n,l):(this.x=Math.floor(n+.5),this.y=Math.floor(l+.5)))},t.prototype.move=function(n,l){this.x=n,this.y=l},t.prototype.translate=function(n,l){this.x+=n,this.y+=l},t.prototype.equals=function(n){if("Point"==n.constructor.name){var l=n;return this.x==l.x&&this.y==l.y}return this==n},t.prototype.toString=function(){return(new t).constructor.name+"[x="+this.x+",y="+this.y+"]"},n.exports=t},function(n,l,e){"use strict";function t(n,l,e,t){this.x=0,this.y=0,this.width=0,this.height=0,null!=n&&null!=l&&null!=e&&null!=t&&(this.x=n,this.y=l,this.width=e,this.height=t)}t.prototype.getX=function(){return this.x},t.prototype.setX=function(n){this.x=n},t.prototype.getY=function(){return this.y},t.prototype.setY=function(n){this.y=n},t.prototype.getWidth=function(){return this.width},t.prototype.setWidth=function(n){this.width=n},t.prototype.getHeight=function(){return this.height},t.prototype.setHeight=function(n){this.height=n},t.prototype.getRight=function(){return this.x+this.width},t.prototype.getBottom=function(){return this.y+this.height},t.prototype.intersects=function(n){return!(this.getRight()<n.x)&&(!(this.getBottom()<n.y)&&(!(n.getRight()<this.x)&&!(n.getBottom()<this.y)))},t.prototype.getCenterX=function(){return this.x+this.width/2},t.prototype.getMinX=function(){return this.getX()},t.prototype.getMaxX=function(){return this.getX()+this.width},t.prototype.getCenterY=function(){return this.y+this.height/2},t.prototype.getMinY=function(){return this.getY()},t.prototype.getMaxY=function(){return this.getY()+this.height},t.prototype.getWidthHalf=function(){return this.width/2},t.prototype.getHeightHalf=function(){return this.height/2},n.exports=t},function(n,l,e){"use strict";var t=e(5);function u(n,l){this.lworldOrgX=0,this.lworldOrgY=0,this.ldeviceOrgX=0,this.ldeviceOrgY=0,this.lworldExtX=1,this.lworldExtY=1,this.ldeviceExtX=1,this.ldeviceExtY=1}u.prototype.getWorldOrgX=function(){return this.lworldOrgX},u.prototype.setWorldOrgX=function(n){this.lworldOrgX=n},u.prototype.getWorldOrgY=function(){return this.lworldOrgY},u.prototype.setWorldOrgY=function(n){this.lworldOrgY=n},u.prototype.getWorldExtX=function(){return this.lworldExtX},u.prototype.setWorldExtX=function(n){this.lworldExtX=n},u.prototype.getWorldExtY=function(){return this.lworldExtY},u.prototype.setWorldExtY=function(n){this.lworldExtY=n},u.prototype.getDeviceOrgX=function(){return this.ldeviceOrgX},u.prototype.setDeviceOrgX=function(n){this.ldeviceOrgX=n},u.prototype.getDeviceOrgY=function(){return this.ldeviceOrgY},u.prototype.setDeviceOrgY=function(n){this.ldeviceOrgY=n},u.prototype.getDeviceExtX=function(){return this.ldeviceExtX},u.prototype.setDeviceExtX=function(n){this.ldeviceExtX=n},u.prototype.getDeviceExtY=function(){return this.ldeviceExtY},u.prototype.setDeviceExtY=function(n){this.ldeviceExtY=n},u.prototype.transformX=function(n){var l=0,e=this.lworldExtX;return 0!=e&&(l=this.ldeviceOrgX+(n-this.lworldOrgX)*this.ldeviceExtX/e),l},u.prototype.transformY=function(n){var l=0,e=this.lworldExtY;return 0!=e&&(l=this.ldeviceOrgY+(n-this.lworldOrgY)*this.ldeviceExtY/e),l},u.prototype.inverseTransformX=function(n){var l=0,e=this.ldeviceExtX;return 0!=e&&(l=this.lworldOrgX+(n-this.ldeviceOrgX)*this.lworldExtX/e),l},u.prototype.inverseTransformY=function(n){var l=0,e=this.ldeviceExtY;return 0!=e&&(l=this.lworldOrgY+(n-this.ldeviceOrgY)*this.lworldExtY/e),l},u.prototype.inverseTransformPoint=function(n){return new t(this.inverseTransformX(n.x),this.inverseTransformY(n.y))},n.exports=u},function(n,l,e){"use strict";var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};function u(){}u.lastID=0,u.createID=function(n){return u.isPrimitive(n)?n:null!=n.uniqueID?n.uniqueID:(n.uniqueID=u.getString(),u.lastID++,n.uniqueID)},u.getString=function(n){return null==n&&(n=u.lastID),"Object#"+n},u.isPrimitive=function(n){var l=void 0===n?"undefined":t(n);return null==n||"object"!=l&&"function"!=l},n.exports=u},function(n,l,e){"use strict";var t=e(1);function u(){}for(var r in t)u[r]=t[r];u.DEFAULT_USE_MULTI_LEVEL_SCALING=!1,u.DEFAULT_RADIAL_SEPARATION=t.DEFAULT_EDGE_LENGTH,u.DEFAULT_COMPONENT_SEPERATION=60,u.TILE=!0,u.TILING_PADDING_VERTICAL=10,u.TILING_PADDING_HORIZONTAL=10,n.exports=u},function(n,l,e){"use strict";var t=e(23);function u(n,l,e){t.call(this,n,l,e)}for(var r in u.prototype=Object.create(t.prototype),t)u[r]=t[r];n.exports=u},function(n,l,e){"use strict";var t=e(4);function u(n,l,e){t.call(this,n,l,e)}for(var r in u.prototype=Object.create(t.prototype),t)u[r]=t[r];n.exports=u},function(n,l,e){"use strict";var t=e(9);function u(n){t.call(this,n)}for(var r in u.prototype=Object.create(t.prototype),t)u[r]=t[r];n.exports=u},function(n,l,e){"use strict";var t=e(24),u=e(8);function r(n,l,e,u){t.call(this,n,l,e,u)}for(var i in r.prototype=Object.create(t.prototype),t)r[i]=t[i];r.prototype.move=function(){var n=this.graphManager.getLayout();this.displacementX=n.coolingFactor*(this.springForceX+this.repulsionForceX+this.gravitationForceX)/this.noOfChildren,this.displacementY=n.coolingFactor*(this.springForceY+this.repulsionForceY+this.gravitationForceY)/this.noOfChildren,Math.abs(this.displacementX)>n.coolingFactor*n.maxNodeDisplacement&&(this.displacementX=n.coolingFactor*n.maxNodeDisplacement*u.sign(this.displacementX)),Math.abs(this.displacementY)>n.coolingFactor*n.maxNodeDisplacement&&(this.displacementY=n.coolingFactor*n.maxNodeDisplacement*u.sign(this.displacementY)),null==this.child?this.moveBy(this.displacementX,this.displacementY):0==this.child.getNodes().length?this.moveBy(this.displacementX,this.displacementY):this.propogateDisplacementToChildren(this.displacementX,this.displacementY),n.totalDisplacement+=Math.abs(this.displacementX)+Math.abs(this.displacementY),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0},r.prototype.propogateDisplacementToChildren=function(n,l){for(var e,t=this.getChild().getNodes(),u=0;u<t.length;u++)null==(e=t[u]).getChild()?(e.moveBy(n,l),e.displacementX+=n,e.displacementY+=l):e.propogateDisplacementToChildren(n,l)},r.prototype.setPred1=function(n){this.pred1=n},r.prototype.getPred1=function(){return pred1},r.prototype.getPred2=function(){return pred2},r.prototype.setNext=function(n){this.next=n},r.prototype.getNext=function(){return next},r.prototype.setProcessed=function(n){this.processed=n},r.prototype.isProcessed=function(){return processed},n.exports=r},function(n,l,e){"use strict";var t=e(12),u=e(1),r=e(0),i=e(7),o=e(8),a=e(2);function s(){t.call(this),this.useSmartIdealEdgeLengthCalculation=u.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.idealEdgeLength=u.DEFAULT_EDGE_LENGTH,this.springConstant=u.DEFAULT_SPRING_STRENGTH,this.repulsionConstant=u.DEFAULT_REPULSION_STRENGTH,this.gravityConstant=u.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=u.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=u.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=u.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR,this.displacementThresholdPerNode=3*u.DEFAULT_EDGE_LENGTH/100,this.coolingFactor=u.DEFAULT_COOLING_FACTOR_INCREMENTAL,this.initialCoolingFactor=u.DEFAULT_COOLING_FACTOR_INCREMENTAL,this.totalDisplacement=0,this.oldTotalDisplacement=0,this.maxIterations=u.MAX_ITERATIONS}for(var c in s.prototype=Object.create(t.prototype),t)s[c]=t[c];s.prototype.initParameters=function(){t.prototype.initParameters.call(this,arguments),this.layoutQuality==r.DRAFT_QUALITY?(this.displacementThresholdPerNode+=.3,this.maxIterations*=.8):this.layoutQuality==r.PROOF_QUALITY&&(this.displacementThresholdPerNode-=.3,this.maxIterations*=1.2),this.totalIterations=0,this.notAnimatedIterations=0,this.useFRGridVariant=u.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION,this.grid=[],this.prunedNodesAll=[],this.growTreeIterations=0,this.afterGrowthIterations=0,this.isTreeGrowing=!1,this.isGrowthFinished=!1},s.prototype.calcIdealEdgeLengths=function(){for(var n,l,e,t,i,o,a=this.getGraphManager().getAllEdges(),s=0;s<a.length;s++)(n=a[s]).idealLength=this.idealEdgeLength,n.isInterGraph&&(e=n.getSource(),t=n.getTarget(),i=n.getSourceInLca().getEstimatedSize(),o=n.getTargetInLca().getEstimatedSize(),this.useSmartIdealEdgeLengthCalculation&&(n.idealLength+=i+o-2*r.SIMPLE_NODE_SIZE),l=n.getLca().getInclusionTreeDepth(),n.idealLength+=u.DEFAULT_EDGE_LENGTH*u.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR*(e.getInclusionTreeDepth()+t.getInclusionTreeDepth()-2*l))},s.prototype.initSpringEmbedder=function(){this.incremental?this.maxNodeDisplacement=u.MAX_NODE_DISPLACEMENT_INCREMENTAL:(this.coolingFactor=1,this.initialCoolingFactor=1,this.maxNodeDisplacement=u.MAX_NODE_DISPLACEMENT),this.maxIterations=Math.max(5*this.getAllNodes().length,this.maxIterations),this.totalDisplacementThreshold=this.displacementThresholdPerNode*this.getAllNodes().length,this.repulsionRange=this.calcRepulsionRange()},s.prototype.calcSpringForces=function(){for(var n,l=this.getAllEdges(),e=0;e<l.length;e++)n=l[e],this.calcSpringForce(n,n.idealLength)},s.prototype.calcRepulsionForces=function(){var n,l,e,t,r,i=this.getAllNodes();if(this.useFRGridVariant)for(this.totalIterations%u.GRID_CALCULATION_CHECK_PERIOD!=1||this.isTreeGrowing||this.isGrowthFinished||this.updateGrid(),r=new Set,n=0;n<i.length;n++)e=i[n],this.calculateRepulsionForceOfANode(e,r),r.add(e);else for(n=0;n<i.length;n++)for(e=i[n],l=n+1;l<i.length;l++)t=i[l],e.getOwner()==t.getOwner()&&this.calcRepulsionForce(e,t)},s.prototype.calcGravitationalForces=function(){for(var n,l=this.getAllNodesToApplyGravitation(),e=0;e<l.length;e++)n=l[e],this.calcGravitationalForce(n)},s.prototype.moveNodes=function(){for(var n=this.getAllNodes(),l=0;l<n.length;l++)n[l].move()},s.prototype.calcSpringForce=function(n,l){var e,t,u,r,i=n.getSource(),o=n.getTarget();if(this.uniformLeafNodeSizes&&null==i.getChild()&&null==o.getChild())n.updateLengthSimple();else if(n.updateLength(),n.isOverlapingSourceAndTarget)return;e=n.getLength(),u=(t=this.springConstant*(e-l))*(n.lengthX/e),r=t*(n.lengthY/e),i.springForceX+=u,i.springForceY+=r,o.springForceX-=u,o.springForceY-=r},s.prototype.calcRepulsionForce=function(n,l){var e,t,r,a,s,c,h,d=n.getRect(),f=l.getRect(),p=new Array(2),g=new Array(4);if(d.intersects(f)){i.calcSeparationAmount(d,f,p,u.DEFAULT_EDGE_LENGTH/2),c=2*p[0],h=2*p[1];var v=n.noOfChildren*l.noOfChildren/(n.noOfChildren+l.noOfChildren);n.repulsionForceX-=v*c,n.repulsionForceY-=v*h,l.repulsionForceX+=v*c,l.repulsionForceY+=v*h}else this.uniformLeafNodeSizes&&null==n.getChild()&&null==l.getChild()?(e=f.getCenterX()-d.getCenterX(),t=f.getCenterY()-d.getCenterY()):(i.getIntersection(d,f,g),e=g[2]-g[0],t=g[3]-g[1]),Math.abs(e)<u.MIN_REPULSION_DIST&&(e=o.sign(e)*u.MIN_REPULSION_DIST),Math.abs(t)<u.MIN_REPULSION_DIST&&(t=o.sign(t)*u.MIN_REPULSION_DIST),r=e*e+t*t,a=Math.sqrt(r),c=(s=this.repulsionConstant*n.noOfChildren*l.noOfChildren/r)*e/a,h=s*t/a,n.repulsionForceX-=c,n.repulsionForceY-=h,l.repulsionForceX+=c,l.repulsionForceY+=h},s.prototype.calcGravitationalForce=function(n){var l,e,t,u,r,i,o,a;e=((l=n.getOwner()).getRight()+l.getLeft())/2,t=(l.getTop()+l.getBottom())/2,u=n.getCenterX()-e,r=n.getCenterY()-t,i=Math.abs(u)+n.getWidth()/2,o=Math.abs(r)+n.getHeight()/2,n.getOwner()==this.graphManager.getRoot()?(i>(a=l.getEstimatedSize()*this.gravityRangeFactor)||o>a)&&(n.gravitationForceX=-this.gravityConstant*u,n.gravitationForceY=-this.gravityConstant*r):(i>(a=l.getEstimatedSize()*this.compoundGravityRangeFactor)||o>a)&&(n.gravitationForceX=-this.gravityConstant*u*this.compoundGravityConstant,n.gravitationForceY=-this.gravityConstant*r*this.compoundGravityConstant)},s.prototype.isConverged=function(){var n,l=!1;return this.totalIterations>this.maxIterations/3&&(l=Math.abs(this.totalDisplacement-this.oldTotalDisplacement)<2),n=this.totalDisplacement<this.totalDisplacementThreshold,this.oldTotalDisplacement=this.totalDisplacement,n||l},s.prototype.animate=function(){this.animationDuringLayout&&!this.isSubLayout&&(this.notAnimatedIterations==this.animationPeriod?(this.update(),this.notAnimatedIterations=0):this.notAnimatedIterations++)},s.prototype.calcGrid=function(n){var l,e;l=parseInt(Math.ceil((n.getRight()-n.getLeft())/this.repulsionRange)),e=parseInt(Math.ceil((n.getBottom()-n.getTop())/this.repulsionRange));for(var t=new Array(l),u=0;u<l;u++)t[u]=new Array(e);for(u=0;u<l;u++)for(var r=0;r<e;r++)t[u][r]=new Array;return t},s.prototype.addNodeToGrid=function(n,l,e){var t,u,r,i;t=parseInt(Math.floor((n.getRect().x-l)/this.repulsionRange)),u=parseInt(Math.floor((n.getRect().width+n.getRect().x-l)/this.repulsionRange)),r=parseInt(Math.floor((n.getRect().y-e)/this.repulsionRange)),i=parseInt(Math.floor((n.getRect().height+n.getRect().y-e)/this.repulsionRange));for(var o=t;o<=u;o++)for(var a=r;a<=i;a++)this.grid[o][a].push(n),n.setGridCoordinates(t,u,r,i)},s.prototype.updateGrid=function(){var n,l,e=this.getAllNodes();for(this.grid=this.calcGrid(this.graphManager.getRoot()),n=0;n<e.length;n++)l=e[n],this.addNodeToGrid(l,this.graphManager.getRoot().getLeft(),this.graphManager.getRoot().getTop())},s.prototype.calculateRepulsionForceOfANode=function(n,l){if(this.totalIterations%u.GRID_CALCULATION_CHECK_PERIOD==1&&!this.isTreeGrowing&&!this.isGrowthFinished||this.growTreeIterations%10==1&&this.isTreeGrowing||this.afterGrowthIterations%10==1&&this.isGrowthFinished){var e,t=new Set;n.surrounding=new Array;for(var r=this.grid,i=n.startX-1;i<n.finishX+2;i++)for(var o=n.startY-1;o<n.finishY+2;o++)if(!(i<0||o<0||i>=r.length||o>=r[0].length))for(var a=0;a<r[i][o].length;a++)if(e=r[i][o][a],n.getOwner()==e.getOwner()&&n!=e&&!l.has(e)&&!t.has(e)){var s=Math.abs(n.getCenterX()-e.getCenterX())-(n.getWidth()/2+e.getWidth()/2),c=Math.abs(n.getCenterY()-e.getCenterY())-(n.getHeight()/2+e.getHeight()/2);s<=this.repulsionRange&&c<=this.repulsionRange&&t.add(e)}n.surrounding=[].concat(function(n){if(Array.isArray(n)){for(var l=0,e=Array(n.length);l<n.length;l++)e[l]=n[l];return e}return Array.from(n)}(t))}for(i=0;i<n.surrounding.length;i++)this.calcRepulsionForce(n,n.surrounding[i])},s.prototype.calcRepulsionRange=function(){return 0},s.prototype.reduceTrees=function(){for(var n,l=[],e=!0;e;){var t=this.graphManager.getAllNodes(),u=[];e=!1;for(var r=0;r<t.length;r++)1!=(n=t[r]).getEdges().length||n.getEdges()[0].isInterGraph||null!=n.getChild()||(u.push([n,n.getEdges()[0],n.getOwner()]),e=!0);if(1==e){for(var i=[],o=0;o<u.length;o++)1==u[o][0].getEdges().length&&(i.push(u[o]),u[o][0].getOwner().remove(u[o][0]));l.push(i),this.graphManager.resetAllNodes(),this.graphManager.resetAllEdges()}}this.prunedNodesAll=l},s.prototype.growTree=function(n){for(var l,e=n[n.length-1],t=0;t<e.length;t++)l=e[t],this.findPlaceforPrunedNode(l),l[2].add(l[0]),l[2].add(l[1],l[1].source,l[1].target);n.splice(n.length-1,1),this.graphManager.resetAllNodes(),this.graphManager.resetAllEdges()},s.prototype.findPlaceforPrunedNode=function(n){var l,e,t=n[0],r=(e=t==n[1].source?n[1].target:n[1].source).startX,i=e.finishX,o=e.startY,s=e.finishY,c=[0,0,0,0];if(o>0)for(var h=r;h<=i;h++)c[0]+=this.grid[h][o-1].length+this.grid[h][o].length-1;if(i<this.grid.length-1)for(h=o;h<=s;h++)c[1]+=this.grid[i+1][h].length+this.grid[i][h].length-1;if(s<this.grid[0].length-1)for(h=r;h<=i;h++)c[2]+=this.grid[h][s+1].length+this.grid[h][s].length-1;if(r>0)for(h=o;h<=s;h++)c[3]+=this.grid[r-1][h].length+this.grid[r][h].length-1;for(var d,f,p=a.MAX_VALUE,g=0;g<c.length;g++)c[g]<p?(p=c[g],d=1,f=g):c[g]==p&&d++;if(3==d&&0==p)0==c[0]&&0==c[1]&&0==c[2]?l=1:0==c[0]&&0==c[1]&&0==c[3]?l=0:0==c[0]&&0==c[2]&&0==c[3]?l=3:0==c[1]&&0==c[2]&&0==c[3]&&(l=2);else if(2==d&&0==p){var v=Math.floor(2*Math.random());l=0==c[0]&&0==c[1]?0==v?0:1:0==c[0]&&0==c[2]?0==v?0:2:0==c[0]&&0==c[3]?0==v?0:3:0==c[1]&&0==c[2]?0==v?1:2:0==c[1]&&0==c[3]?0==v?1:3:0==v?2:3}else if(4==d&&0==p){l=v=Math.floor(4*Math.random())}else l=f;0==l?t.setCenter(e.getCenterX(),e.getCenterY()-e.getHeight()/2-u.DEFAULT_EDGE_LENGTH-t.getHeight()/2):1==l?t.setCenter(e.getCenterX()+e.getWidth()/2+u.DEFAULT_EDGE_LENGTH+t.getWidth()/2,e.getCenterY()):2==l?t.setCenter(e.getCenterX(),e.getCenterY()+e.getHeight()/2+u.DEFAULT_EDGE_LENGTH+t.getHeight()/2):t.setCenter(e.getCenterX()-e.getWidth()/2-u.DEFAULT_EDGE_LENGTH-t.getWidth()/2,e.getCenterY())},n.exports=s},function(n,l,e){"use strict";var t=e(3),u=e(1);function r(n,l,e){t.call(this,n,l,e),this.idealLength=u.DEFAULT_EDGE_LENGTH}for(var i in r.prototype=Object.create(t.prototype),t)r[i]=t[i];n.exports=r},function(n,l,e){"use strict";var t=e(11);function u(n,l,e,u){t.call(this,n,l,e,u),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0,this.startX=0,this.finishX=0,this.startY=0,this.finishY=0,this.surrounding=[]}for(var r in u.prototype=Object.create(t.prototype),t)u[r]=t[r];u.prototype.setGridCoordinates=function(n,l,e,t){this.startX=n,this.finishX=l,this.startY=e,this.finishY=t},n.exports=u},function(n,l,e){"use strict";var t=e(16);function u(){this.map={},this.keys=[]}u.prototype.put=function(n,l){var e=t.createID(n);this.contains(e)||(this.map[e]=l,this.keys.push(n))},u.prototype.contains=function(n){t.createID(n);return null!=this.map[n]},u.prototype.get=function(n){var l=t.createID(n);return this.map[l]},u.prototype.keySet=function(){return this.keys},n.exports=u},function(n,l,e){"use strict";function t(){}t.seed=1,t.x=0,t.nextDouble=function(){return t.x=1e4*Math.sin(t.seed++),t.x-Math.floor(t.x)},n.exports=t},function(n,l,e){"use strict";var t=e(29),u=(e(25),e(6),e(7),e(8),e(2),e(13),e(5)),r=(e(26),e(14),e(15),e(16),e(10),e(4),e(3),e(9),e(11),e(12),e(0)),i=(e(22),e(1)),o=(e(23),e(24),e(17)),a=(e(18),e(19),e(20),e(28)),s=e(21),c={ready:function(){},stop:function(){},nodeDimensionsIncludeLabels:!1,refresh:30,fit:!0,padding:10,randomize:!0,nodeRepulsion:4500,idealEdgeLength:50,edgeElasticity:.45,nestingFactor:.1,gravity:.25,numIter:2500,tile:!0,animate:"end",animationDuration:500,tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1,gravityRange:3.8,initialEnergyOnIncremental:.5};function h(n){this.options=function(n,l){var e={};for(var t in n)e[t]=n[t];for(var t in l)e[t]=l[t];return e}(c,n),d(this.options)}var d=function(n){null!=n.nodeRepulsion&&(o.DEFAULT_REPULSION_STRENGTH=i.DEFAULT_REPULSION_STRENGTH=n.nodeRepulsion),null!=n.idealEdgeLength&&(o.DEFAULT_EDGE_LENGTH=i.DEFAULT_EDGE_LENGTH=n.idealEdgeLength),null!=n.edgeElasticity&&(o.DEFAULT_SPRING_STRENGTH=i.DEFAULT_SPRING_STRENGTH=n.edgeElasticity),null!=n.nestingFactor&&(o.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=i.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=n.nestingFactor),null!=n.gravity&&(o.DEFAULT_GRAVITY_STRENGTH=i.DEFAULT_GRAVITY_STRENGTH=n.gravity),null!=n.numIter&&(o.MAX_ITERATIONS=i.MAX_ITERATIONS=n.numIter),null!=n.gravityRange&&(o.DEFAULT_GRAVITY_RANGE_FACTOR=i.DEFAULT_GRAVITY_RANGE_FACTOR=n.gravityRange),null!=n.gravityCompound&&(o.DEFAULT_COMPOUND_GRAVITY_STRENGTH=i.DEFAULT_COMPOUND_GRAVITY_STRENGTH=n.gravityCompound),null!=n.gravityRangeCompound&&(o.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=i.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=n.gravityRangeCompound),null!=n.initialEnergyOnIncremental&&(o.DEFAULT_COOLING_FACTOR_INCREMENTAL=i.DEFAULT_COOLING_FACTOR_INCREMENTAL=n.initialEnergyOnIncremental),o.NODE_DIMENSIONS_INCLUDE_LABELS=i.NODE_DIMENSIONS_INCLUDE_LABELS=r.NODE_DIMENSIONS_INCLUDE_LABELS=n.nodeDimensionsIncludeLabels,o.DEFAULT_INCREMENTAL=i.DEFAULT_INCREMENTAL=r.DEFAULT_INCREMENTAL=!n.randomize,o.ANIMATE=i.ANIMATE=r.ANIMATE=n.animate,o.TILE=n.tile,o.TILING_PADDING_VERTICAL="function"==typeof n.tilingPaddingVertical?n.tilingPaddingVertical.call():n.tilingPaddingVertical,o.TILING_PADDING_HORIZONTAL="function"==typeof n.tilingPaddingHorizontal?n.tilingPaddingHorizontal.call():n.tilingPaddingHorizontal};h.prototype.run=function(){var n,l,e=this.options,t=(this.idToLNode={},this.layout=new a),u=this;u.stopped=!1,this.cy=this.options.cy,this.cy.trigger({type:"layoutstart",layout:this});var r=t.newGraphManager();this.gm=r;var i=this.options.eles.nodes(),o=this.options.eles.edges();this.root=r.addRoot(),this.processChildrenList(this.root,this.getTopMostNodes(i),t);for(var s=0;s<o.length;s++){var c=o[s],h=this.idToLNode[c.data("source")],d=this.idToLNode[c.data("target")];if(0==h.getEdgesBetween(d).length)r.add(t.newEdge(),h,d).id=c.id()}var f=function(n,l){"number"==typeof n&&(n=l);var e=n.data("id"),t=u.idToLNode[e];return{x:t.getRect().getCenterX(),y:t.getRect().getCenterY()}},p=function r(){for(var i,o=function(){e.fit&&e.cy.fit(e.eles.nodes(),e.padding),n||(n=!0,u.cy.one("layoutready",e.ready),u.cy.trigger({type:"layoutready",layout:u}))},a=u.options.refresh,s=0;s<a&&!i;s++)i=u.stopped||u.layout.tick();if(i)return t.checkLayoutSuccess()&&!t.isSubLayout&&t.doPostLayout(),t.tilingPostLayout&&t.tilingPostLayout(),t.isLayoutFinished=!0,u.options.eles.nodes().positions(f),o(),u.cy.one("layoutstop",u.options.stop),u.cy.trigger({type:"layoutstop",layout:u}),l&&cancelAnimationFrame(l),void(n=!1);var c=u.layout.getPositionsData();e.eles.nodes().positions(function(n,l){"number"==typeof n&&(n=l);for(var e=n.id(),t=c[e],u=n;null==t&&(t=c[u.data("parent")]||c["DummyCompound_"+u.data("parent")],c[e]=t,null!=(u=u.parent()[0])););return null!=t?{x:t.x,y:t.y}:{x:n.x,y:n.y}}),o(),l=requestAnimationFrame(r)};return t.addListener("layoutstarted",function(){"during"===u.options.animate&&(l=requestAnimationFrame(p))}),t.runLayout(),"during"!==this.options.animate&&(u.options.eles.nodes().not(":parent").layoutPositions(u,u.options,f),n=!1),this},h.prototype.getTopMostNodes=function(n){for(var l={},e=0;e<n.length;e++)l[n[e].id()]=!0;return n.filter(function(n,e){"number"==typeof n&&(n=e);for(var t=n.parent()[0];null!=t;){if(l[t.id()])return!1;t=t.parent()[0]}return!0})},h.prototype.processChildrenList=function(n,l,e){for(var r=l.length,i=0;i<r;i++){var o,a,c=l[i],h=c.children(),d=c.layoutDimensions({nodeDimensionsIncludeLabels:this.options.nodeDimensionsIncludeLabels});if((o=null!=c.outerWidth()&&null!=c.outerHeight()?n.add(new s(e.graphManager,new u(c.position("x")-d.w/2,c.position("y")-d.h/2),new t(parseFloat(d.w),parseFloat(d.h)))):n.add(new s(this.graphManager))).id=c.data("id"),o.paddingLeft=parseInt(c.css("padding")),o.paddingTop=parseInt(c.css("padding")),o.paddingRight=parseInt(c.css("padding")),o.paddingBottom=parseInt(c.css("padding")),this.options.nodeDimensionsIncludeLabels&&c.isParent()){var f=c.boundingBox({includeLabels:!0,includeNodes:!1}).w,p=c.boundingBox({includeLabels:!0,includeNodes:!1}).h,g=c.css("text-halign");o.labelWidth=f,o.labelHeight=p,o.labelPos=g}if(this.idToLNode[c.data("id")]=o,isNaN(o.rect.x)&&(o.rect.x=0),isNaN(o.rect.y)&&(o.rect.y=0),null!=h&&h.length>0)a=e.getGraphManager().add(e.newGraph(),o),this.processChildrenList(a,h,e)}},h.prototype.stop=function(){return this.stopped=!0,this},n.exports=function(n){return h}},function(n,l,e){"use strict";var t=e(22),u=e(20),r=e(19),i=e(21),o=e(18),a=e(17),s=e(1),c=e(0),h=e(13),d=e(5),f=e(12),p=e(2),g=e(7),v=e(4),y=e(15);function m(){t.call(this),this.toBeTiled={}}for(var b in m.prototype=Object.create(t.prototype),t)m[b]=t[b];m.prototype.newGraphManager=function(){var n=new u(this);return this.graphManager=n,n},m.prototype.newGraph=function(n){return new r(null,this.graphManager,n)},m.prototype.newNode=function(n){return new i(this.graphManager,n)},m.prototype.newEdge=function(n){return new o(null,null,n)},m.prototype.initParameters=function(){t.prototype.initParameters.call(this,arguments),this.isSubLayout||(a.DEFAULT_EDGE_LENGTH<10?this.idealEdgeLength=10:this.idealEdgeLength=a.DEFAULT_EDGE_LENGTH,this.useSmartIdealEdgeLengthCalculation=a.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.springConstant=s.DEFAULT_SPRING_STRENGTH,this.repulsionConstant=s.DEFAULT_REPULSION_STRENGTH,this.gravityConstant=s.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=s.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=s.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=s.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR)},m.prototype.layout=function(){return c.DEFAULT_CREATE_BENDS_AS_NEEDED&&(this.createBendpoints(),this.graphManager.resetAllEdges()),this.level=0,this.classicLayout()},m.prototype.classicLayout=function(){if(this.nodesWithGravity=this.calculateNodesToApplyGravitationTo(),this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity),this.calcNoOfChildrenForAllNodes(),this.graphManager.calcLowestCommonAncestors(),this.graphManager.calcInclusionTreeDepths(),this.graphManager.getRoot().calcEstimatedSize(),this.calcIdealEdgeLengths(),!this.incremental){var n=this.getFlatForest();if(n.length>0)this.positionNodesRadially(n);else{this.reduceTrees(),this.graphManager.resetAllNodesToApplyGravitation();var l=new Set(this.getAllNodes()),e=this.nodesWithGravity.filter(function(n){return l.has(n)});this.graphManager.setAllNodesToApplyGravitation(e),this.positionNodesRandomly()}}return this.initSpringEmbedder(),this.runSpringEmbedder(),!0},m.prototype.tick=function(){if(this.totalIterations++,this.totalIterations===this.maxIterations&&!this.isTreeGrowing&&!this.isGrowthFinished){if(!(this.prunedNodesAll.length>0))return!0;this.isTreeGrowing=!0}if(this.totalIterations%s.CONVERGENCE_CHECK_PERIOD==0&&!this.isTreeGrowing&&!this.isGrowthFinished){if(this.isConverged()){if(!(this.prunedNodesAll.length>0))return!0;this.isTreeGrowing=!0}this.coolingFactor=this.initialCoolingFactor*((this.maxIterations-this.totalIterations)/this.maxIterations),this.animationPeriod=Math.ceil(this.initialAnimationPeriod*Math.sqrt(this.coolingFactor))}if(this.isTreeGrowing){if(this.growTreeIterations%10==0)if(this.prunedNodesAll.length>0){this.graphManager.updateBounds(),this.updateGrid(),this.growTree(this.prunedNodesAll),this.graphManager.resetAllNodesToApplyGravitation();var n=new Set(this.getAllNodes()),l=this.nodesWithGravity.filter(function(l){return n.has(l)});this.graphManager.setAllNodesToApplyGravitation(l),this.graphManager.updateBounds(),this.updateGrid(),this.coolingFactor=s.DEFAULT_COOLING_FACTOR_INCREMENTAL}else this.isTreeGrowing=!1,this.isGrowthFinished=!0;this.growTreeIterations++}if(this.isGrowthFinished){if(this.isConverged())return!0;this.afterGrowthIterations%10==0&&(this.graphManager.updateBounds(),this.updateGrid()),this.coolingFactor=s.DEFAULT_COOLING_FACTOR_INCREMENTAL*((100-this.afterGrowthIterations)/100),this.afterGrowthIterations++}return this.totalDisplacement=0,this.graphManager.updateBounds(),this.calcSpringForces(),this.calcRepulsionForces(),this.calcGravitationalForces(),this.moveNodes(),this.animate(),!1},m.prototype.getPositionsData=function(){for(var n=this.graphManager.getAllNodes(),l={},e=0;e<n.length;e++){var t=n[e].rect,u=n[e].id;l[u]={id:u,x:t.getCenterX(),y:t.getCenterY(),w:t.width,h:t.height}}return l},m.prototype.runSpringEmbedder=function(){this.initialAnimationPeriod=25,this.animationPeriod=this.initialAnimationPeriod;var n=!1;if("during"===s.ANIMATE)this.emit("layoutstarted");else{for(;!n;)n=this.tick();this.graphManager.updateBounds()}},m.prototype.calculateNodesToApplyGravitationTo=function(){var n,l,e=[],t=this.graphManager.getGraphs(),u=t.length;for(l=0;l<u;l++)(n=t[l]).updateConnected(),n.isConnected||(e=e.concat(n.getNodes()));return e},m.prototype.calcNoOfChildrenForAllNodes=function(){for(var n,l=this.graphManager.getAllNodes(),e=0;e<l.length;e++)(n=l[e]).noOfChildren=n.getNoOfChildren()},m.prototype.createBendpoints=function(){var n=[];n=n.concat(this.graphManager.getAllEdges());var l,e=new HashSet;for(l=0;l<n.length;l++){var t=n[l];if(!e.contains(t)){var u=t.getSource(),r=t.getTarget();if(u==r)t.getBendpoints().push(new d),t.getBendpoints().push(new d),this.createDummyNodesForBendpoints(t),e.add(t);else{var i=[];if(i=(i=i.concat(u.getEdgeListToNode(r))).concat(r.getEdgeListToNode(u)),!e.contains(i[0])){var o;if(i.length>1)for(o=0;o<i.length;o++){var a=i[o];a.getBendpoints().push(new d),this.createDummyNodesForBendpoints(a)}e.addAll(list)}}}if(e.size()==n.length)break}},m.prototype.positionNodesRadially=function(n){for(var l=new h(0,0),e=Math.ceil(Math.sqrt(n.length)),t=0,u=0,r=0,i=new d(0,0),o=0;o<n.length;o++){o%e==0&&(r=0,u=t,0!=o&&(u+=a.DEFAULT_COMPONENT_SEPERATION),t=0);var s=n[o],p=f.findCenterOfTree(s);l.x=r,l.y=u,(i=m.radialLayout(s,p,l)).y>t&&(t=Math.floor(i.y)),r=Math.floor(i.x+a.DEFAULT_COMPONENT_SEPERATION)}this.transform(new d(c.WORLD_CENTER_X-i.x/2,c.WORLD_CENTER_Y-i.y/2))},m.radialLayout=function(n,l,e){var t=Math.max(this.maxDiagonalInTree(n),a.DEFAULT_RADIAL_SEPARATION);m.branchRadialLayout(l,null,0,359,0,t);var u=v.calculateBounds(n),r=new y;r.setDeviceOrgX(u.getMinX()),r.setDeviceOrgY(u.getMinY()),r.setWorldOrgX(e.x),r.setWorldOrgY(e.y);for(var i=0;i<n.length;i++){n[i].transform(r)}var o=new d(u.getMaxX(),u.getMaxY());return r.inverseTransformPoint(o)},m.branchRadialLayout=function(n,l,e,t,u,r){var i=(t-e+1)/2;i<0&&(i+=180);var o=(i+e)%360*g.TWO_PI/360,a=(Math.cos(o),u*Math.cos(o)),s=u*Math.sin(o);n.setCenter(a,s);var c=[],h=(c=c.concat(n.getEdges())).length;null!=l&&h--;for(var d,f=0,p=c.length,v=n.getEdgesBetween(l);v.length>1;){var y=v[0];v.splice(0,1);var b=c.indexOf(y);b>=0&&c.splice(b,1),p--,h--}d=null!=l?(c.indexOf(v[0])+1)%p:0;for(var w=Math.abs(t-e)/h,_=d;f!=h;_=++_%p){var x=c[_].getOtherEnd(n);if(x!=l){var E=(e+f*w)%360,T=(E+w)%360;m.branchRadialLayout(x,n,E,T,u+r,r),f++}}},m.maxDiagonalInTree=function(n){for(var l=p.MIN_VALUE,e=0;e<n.length;e++){var t=n[e].getDiagonal();t>l&&(l=t)}return l},m.prototype.calcRepulsionRange=function(){return 2*(this.level+1)*this.idealEdgeLength},m.prototype.groupZeroDegreeMembers=function(){var n=this,l={};this.memberGroups={},this.idToDummyNode={};for(var e=[],t=this.graphManager.getAllNodes(),u=0;u<t.length;u++){var r=(o=t[u]).getParent();0!==this.getNodeDegreeWithChildren(o)||null!=r.id&&this.getToBeTiled(r)||e.push(o)}for(u=0;u<e.length;u++){var o,a=(o=e[u]).getParent().id;void 0===l[a]&&(l[a]=[]),l[a]=l[a].concat(o)}Object.keys(l).forEach(function(e){if(l[e].length>1){var t="DummyCompound_"+e;n.memberGroups[t]=l[e];var u=l[e][0].getParent(),r=new i(n.graphManager);r.id=t,r.paddingLeft=u.paddingLeft||0,r.paddingRight=u.paddingRight||0,r.paddingBottom=u.paddingBottom||0,r.paddingTop=u.paddingTop||0,n.idToDummyNode[t]=r;var o=n.getGraphManager().add(n.newGraph(),r),a=u.getChild();a.add(r);for(var s=0;s<l[e].length;s++){var c=l[e][s];a.remove(c),o.add(c)}}})},m.prototype.clearCompounds=function(){var n={},l={};this.performDFSOnCompounds();for(var e=0;e<this.compoundOrder.length;e++)l[this.compoundOrder[e].id]=this.compoundOrder[e],n[this.compoundOrder[e].id]=[].concat(this.compoundOrder[e].getChild().getNodes()),this.graphManager.remove(this.compoundOrder[e].getChild()),this.compoundOrder[e].child=null;this.graphManager.resetAllNodes(),this.tileCompoundMembers(n,l)},m.prototype.clearZeroDegreeMembers=function(){var n=this,l=this.tiledZeroDegreePack=[];Object.keys(this.memberGroups).forEach(function(e){var t=n.idToDummyNode[e];l[e]=n.tileNodes(n.memberGroups[e],t.paddingLeft+t.paddingRight),t.rect.width=l[e].width,t.rect.height=l[e].height})},m.prototype.repopulateCompounds=function(){for(var n=this.compoundOrder.length-1;n>=0;n--){var l=this.compoundOrder[n],e=l.id,t=l.paddingLeft,u=l.paddingTop;this.adjustLocations(this.tiledMemberPack[e],l.rect.x,l.rect.y,t,u)}},m.prototype.repopulateZeroDegreeMembers=function(){var n=this,l=this.tiledZeroDegreePack;Object.keys(l).forEach(function(e){var t=n.idToDummyNode[e],u=t.paddingLeft,r=t.paddingTop;n.adjustLocations(l[e],t.rect.x,t.rect.y,u,r)})},m.prototype.getToBeTiled=function(n){var l=n.id;if(null!=this.toBeTiled[l])return this.toBeTiled[l];var e=n.getChild();if(null==e)return this.toBeTiled[l]=!1,!1;for(var t=e.getNodes(),u=0;u<t.length;u++){var r=t[u];if(this.getNodeDegree(r)>0)return this.toBeTiled[l]=!1,!1;if(null!=r.getChild()){if(!this.getToBeTiled(r))return this.toBeTiled[l]=!1,!1}else this.toBeTiled[r.id]=!1}return this.toBeTiled[l]=!0,!0},m.prototype.getNodeDegree=function(n){n.id;for(var l=n.getEdges(),e=0,t=0;t<l.length;t++){var u=l[t];u.getSource().id!==u.getTarget().id&&(e+=1)}return e},m.prototype.getNodeDegreeWithChildren=function(n){var l=this.getNodeDegree(n);if(null==n.getChild())return l;for(var e=n.getChild().getNodes(),t=0;t<e.length;t++){var u=e[t];l+=this.getNodeDegreeWithChildren(u)}return l},m.prototype.performDFSOnCompounds=function(){this.compoundOrder=[],this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes())},m.prototype.fillCompexOrderByDFS=function(n){for(var l=0;l<n.length;l++){var e=n[l];null!=e.getChild()&&this.fillCompexOrderByDFS(e.getChild().getNodes()),this.getToBeTiled(e)&&this.compoundOrder.push(e)}},m.prototype.adjustLocations=function(n,l,e,t,u){e+=u;for(var r=l+=t,i=0;i<n.rows.length;i++){var o=n.rows[i];l=r;for(var a=0,s=0;s<o.length;s++){var c=o[s];c.rect.x=l,c.rect.y=e,l+=c.rect.width+n.horizontalPadding,c.rect.height>a&&(a=c.rect.height)}e+=a+n.verticalPadding}},m.prototype.tileCompoundMembers=function(n,l){var e=this;this.tiledMemberPack=[],Object.keys(n).forEach(function(t){var u=l[t];e.tiledMemberPack[t]=e.tileNodes(n[t],u.paddingLeft+u.paddingRight),u.rect.width=e.tiledMemberPack[t].width+20,u.rect.height=e.tiledMemberPack[t].height+20})},m.prototype.tileNodes=function(n,l){var e={rows:[],rowWidth:[],rowHeight:[],width:20,height:20,verticalPadding:a.TILING_PADDING_VERTICAL,horizontalPadding:a.TILING_PADDING_HORIZONTAL};n.sort(function(n,l){return n.rect.width*n.rect.height>l.rect.width*l.rect.height?-1:n.rect.width*n.rect.height<l.rect.width*l.rect.height?1:0});for(var t=0;t<n.length;t++){var u=n[t];0==e.rows.length?this.insertNodeToRow(e,u,0,l):this.canAddHorizontal(e,u.rect.width,u.rect.height)?this.insertNodeToRow(e,u,this.getShortestRowIndex(e),l):this.insertNodeToRow(e,u,e.rows.length,l),this.shiftToLastRow(e)}return e},m.prototype.insertNodeToRow=function(n,l,e,t){var u=t;if(e==n.rows.length){n.rows.push([]),n.rowWidth.push(u),n.rowHeight.push(0)}var r=n.rowWidth[e]+l.rect.width;n.rows[e].length>0&&(r+=n.horizontalPadding),n.rowWidth[e]=r,n.width<r&&(n.width=r);var i=l.rect.height;e>0&&(i+=n.verticalPadding);var o=0;i>n.rowHeight[e]&&(o=n.rowHeight[e],n.rowHeight[e]=i,o=n.rowHeight[e]-o),n.height+=o,n.rows[e].push(l)},m.prototype.getShortestRowIndex=function(n){for(var l=-1,e=Number.MAX_VALUE,t=0;t<n.rows.length;t++)n.rowWidth[t]<e&&(l=t,e=n.rowWidth[t]);return l},m.prototype.getLongestRowIndex=function(n){for(var l=-1,e=Number.MIN_VALUE,t=0;t<n.rows.length;t++)n.rowWidth[t]>e&&(l=t,e=n.rowWidth[t]);return l},m.prototype.canAddHorizontal=function(n,l,e){var t=this.getShortestRowIndex(n);if(t<0)return!0;var u=n.rowWidth[t];if(u+n.horizontalPadding+l<=n.width)return!0;var r,i,o=0;return n.rowHeight[t]<e&&t>0&&(o=e+n.verticalPadding-n.rowHeight[t]),r=n.width-u>=l+n.horizontalPadding?(n.height+o)/(u+l+n.horizontalPadding):(n.height+o)/n.width,o=e+n.verticalPadding,(i=n.width<l?(n.height+o)/l:(n.height+o)/n.width)<1&&(i=1/i),r<1&&(r=1/r),r<i},m.prototype.shiftToLastRow=function(n){var l=this.getLongestRowIndex(n),e=n.rowWidth.length-1,t=n.rows[l],u=t[t.length-1],r=u.width+n.horizontalPadding;if(n.width-n.rowWidth[e]>r&&l!=e){t.splice(-1,1),n.rows[e].push(u),n.rowWidth[l]=n.rowWidth[l]-r,n.rowWidth[e]=n.rowWidth[e]+r,n.width=n.rowWidth[instance.getLongestRowIndex(n)];for(var i=Number.MIN_VALUE,o=0;o<t.length;o++)t[o].height>i&&(i=t[o].height);l>0&&(i+=n.verticalPadding);var a=n.rowHeight[l]+n.rowHeight[e];n.rowHeight[l]=i,n.rowHeight[e]<u.height+n.verticalPadding&&(n.rowHeight[e]=u.height+n.verticalPadding);var s=n.rowHeight[l]+n.rowHeight[e];n.height+=s-a,this.shiftToLastRow(n)}},m.prototype.tilingPreLayout=function(){a.TILE&&(this.groupZeroDegreeMembers(),this.clearCompounds(),this.clearZeroDegreeMembers())},m.prototype.tilingPostLayout=function(){a.TILE&&(this.repopulateZeroDegreeMembers(),this.repopulateCompounds())},n.exports=m},function(n,l,e){"use strict";function t(n,l){this.width=0,this.height=0,null!==n&&null!==l&&(this.height=l,this.width=n)}t.prototype.getWidth=function(){return this.width},t.prototype.setWidth=function(n){this.width=n},t.prototype.getHeight=function(){return this.height},t.prototype.setHeight=function(n){this.height=n},n.exports=t},function(n,l,e){"use strict";function t(){this.listeners=[]}var u=t.prototype;u.addListener=function(n,l){this.listeners.push({event:n,callback:l})},u.removeListener=function(n,l){for(var e=this.listeners.length;e>=0;e--){var t=this.listeners[e];t.event===n&&t.callback===l&&this.listeners.splice(e,1)}},u.emit=function(n,l){for(var e=0;e<this.listeners.length;e++){var t=this.listeners[e];n===t.event&&t.callback(l)}},n.exports=t},function(n,l,e){"use strict";var t=function(){function n(n,l){for(var e=0;e<l.length;e++){var t=l[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}return function(l,e,t){return e&&n(l.prototype,e),t&&n(l,t),l}}();var u=function(n){return{value:n,next:null,prev:null}},r=function(n,l,e,t){return null!==n?n.next=l:t.head=l,null!==e?e.prev=l:t.tail=l,l.prev=n,l.next=e,t.length++,l},i=function(n,l){var e=n.prev,t=n.next;return null!==e?e.next=t:l.head=t,null!==t?t.prev=e:l.tail=e,n.prev=n.next=null,l.length--,n},o=function(){function n(l){var e=this;!function(n,l){if(!(n instanceof l))throw new TypeError("Cannot call a class as a function")}(this,n),this.length=0,this.head=null,this.tail=null,null!=l&&l.forEach(function(n){return e.push(n)})}return t(n,[{key:"size",value:function(){return this.length}},{key:"insertBefore",value:function(n,l){return r(l.prev,u(n),l,this)}},{key:"insertAfter",value:function(n,l){return r(l,u(n),l.next,this)}},{key:"insertNodeBefore",value:function(n,l){return r(l.prev,n,l,this)}},{key:"insertNodeAfter",value:function(n,l){return r(l,n,l.next,this)}},{key:"push",value:function(n){return r(this.tail,u(n),null,this)}},{key:"unshift",value:function(n){return r(null,u(n),this.head,this)}},{key:"remove",value:function(n){return i(n,this)}},{key:"pop",value:function(){return i(this.tail,this).value}},{key:"popNode",value:function(){return i(this.tail,this)}},{key:"shift",value:function(){return i(this.head,this).value}},{key:"shiftNode",value:function(){return i(this.head,this)}}]),n}();n.exports=o},function(n,l,e){"use strict";var t=e(27),u=function(n){n("layout","cose-bilkent",t(n))};"undefined"!=typeof cytoscape&&u(cytoscape),n.exports=u}])},n.exports=t()},function(n,l,e){let t=e(132);const u=t.v1.driver("bolt://localhost:7687",t.v1.auth.basic("neo4j","heaven")).session();n.exports=function(n,l){return new Promise(function(e,t){let r=[];u.run(n,l).subscribe({onNext:function(n){r.push(n.get(0).properties)},onCompleted:function(){e(r)},onError:function(n){window.alert("Query returned with error"),console.log(n),t(!0)}})})}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.v1=void 0;var t=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(133));l.v1=t,l.default=t},function(n,l,e){"use strict";(function(n){Object.defineProperty(l,"__esModule",{value:!0}),l.temporal=l.spatial=l.error=l.session=l.types=l.logging=l.auth=l.Neo4jError=l.integer=l.isDateTime=l.isLocalDateTime=l.isDate=l.isTime=l.isLocalTime=l.isDuration=l.isPoint=l.isInt=l.int=l.driver=void 0;var t=e(13),u=e(70),r=e(3),i=y(e(50)),o=y(e(101)),a=y(e(102)),s=e(21),c=y(e(233)),h=y(e(237)),d=e(11),f=y(e(108)),p=y(e(238)),g=e(81),v=e(55);function y(n){return n&&n.__esModule?n:{default:n}}var m={basic:function(n,l){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return e?{scheme:"basic",principal:n,credentials:l,realm:e}:{scheme:"basic",principal:n,credentials:l}},kerberos:function(n){return{scheme:"kerberos",principal:"",credentials:n}},custom:function(n,l,e,t){var u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:void 0;return u?{scheme:t,principal:n,credentials:l,realm:e,parameters:u}:{scheme:t,principal:n,credentials:l,realm:e}}},b="neo4j-javascript/"+h.default,w={console:function(n){function l(l){return n.apply(this,arguments)}return l.toString=function(){return n.toString()},l}(function(l){return{level:l,logger:function(l,e){return console.log(n.Date.now()+" "+l.toUpperCase()+" "+e)}}})};function _(n,l){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};(0,d.assertString)(n,"Bolt URL");var t=f.default.parseDatabaseUrl(n);if("bolt+routing"===t.scheme)return new c.default(t.hostAndPort,t.query,b,l,e);if("bolt"===t.scheme){if(!(0,d.isEmptyObjectOrNull)(t.query))throw new Error("Parameters are not supported with scheme 'bolt'. Given URL: '"+n+"'");return new s.Driver(t.hostAndPort,b,l,e)}if("http"===t.scheme||"https"===t.scheme)return new p.default(t,b,l,e);throw new Error("Unknown scheme: "+t.scheme)}var x={Node:u.Node,Relationship:u.Relationship,UnboundRelationship:u.UnboundRelationship,PathSegment:u.PathSegment,Path:u.Path,Result:i.default,ResultSummary:o.default,Record:a.default,Point:g.Point,Date:v.Date,DateTime:v.DateTime,Duration:v.Duration,LocalDateTime:v.LocalDateTime,LocalTime:v.LocalTime,Time:v.Time},E={READ:s.READ,WRITE:s.WRITE},T={SERVICE_UNAVAILABLE:r.SERVICE_UNAVAILABLE,SESSION_EXPIRED:r.SESSION_EXPIRED,PROTOCOL_ERROR:r.PROTOCOL_ERROR},k={toNumber:t.toNumber,toString:t.toString,inSafeRange:t.inSafeRange},C={isPoint:g.isPoint},S={isDuration:v.isDuration,isLocalTime:v.isLocalTime,isTime:v.isTime,isDate:v.isDate,isLocalDateTime:v.isLocalDateTime,isDateTime:v.isDateTime},I={driver:_,int:t.int,isInt:t.isInt,isPoint:g.isPoint,isDuration:v.isDuration,isLocalTime:v.isLocalTime,isTime:v.isTime,isDate:v.isDate,isLocalDateTime:v.isLocalDateTime,isDateTime:v.isDateTime,integer:k,Neo4jError:r.Neo4jError,auth:m,logging:w,types:x,session:E,error:T,spatial:C,temporal:S};l.driver=_,l.int=t.int,l.isInt=t.isInt,l.isPoint=g.isPoint,l.isDuration=v.isDuration,l.isLocalTime=v.isLocalTime,l.isTime=v.isTime,l.isDate=v.isDate,l.isLocalDateTime=v.isLocalDateTime,l.isDateTime=v.isDateTime,l.integer=k,l.Neo4jError=r.Neo4jError,l.auth=m,l.logging=w,l.types=x,l.session=E,l.error=T,l.spatial=C,l.temporal=S,l.default=I}).call(this,e(43))},function(n,l,e){e(135);var t=e(2).Object;n.exports=function(n,l,e){return t.defineProperty(n,l,e)}},function(n,l,e){var t=e(7);t(t.S+t.F*!e(16),"Object",{defineProperty:e(14).f})},function(n,l,e){e(137),n.exports=e(2).Object.getPrototypeOf},function(n,l,e){var t=e(25),u=e(84);e(46)("getPrototypeOf",function(){return function(n){return u(t(n))}})},function(n,l,e){e(26),e(37),n.exports=e(65).f("iterator")},function(n,l,e){var t=e(61),u=e(58);n.exports=function(n){return function(l,e){var r,i,o=String(u(l)),a=t(e),s=o.length;return a<0||a>=s?n?"":void 0:(r=o.charCodeAt(a))<55296||r>56319||a+1===s||(i=o.charCodeAt(a+1))<56320||i>57343?n?o.charAt(a):r:n?o.slice(a,a+2):i-56320+(r-55296<<10)+65536}}},function(n,l,e){"use strict";var t=e(47),u=e(32),r=e(36),i={};e(18)(i,e(9)("iterator"),function(){return this}),n.exports=function(n,l,e){n.prototype=t(i,{next:u(1,e)}),r(n,l+" Iterator")}},function(n,l,e){var t=e(14),u=e(15),r=e(28);n.exports=e(16)?Object.defineProperties:function(n,l){u(n);for(var e,i=r(l),o=i.length,a=0;o>a;)t.f(n,e=i[a++],l[e]);return n}},function(n,l,e){var t=e(19),u=e(48),r=e(143);n.exports=function(n){return function(l,e,i){var o,a=t(l),s=u(a.length),c=r(i,s);if(n&&e!=e){for(;s>c;)if((o=a[c++])!=o)return!0}else for(;s>c;c++)if((n||c in a)&&a[c]===e)return n||c||0;return!n&&-1}}},function(n,l,e){var t=e(61),u=Math.max,r=Math.min;n.exports=function(n,l){return(n=t(n))<0?u(n+l,0):r(n,l)}},function(n,l,e){"use strict";var t=e(145),u=e(89),r=e(27),i=e(19);n.exports=e(62)(Array,"Array",function(n,l){this._t=i(n),this._i=0,this._k=l},function(){var n=this._t,l=this._k,e=this._i++;return!n||e>=n.length?(this._t=void 0,u(1)):u(0,"keys"==l?e:"values"==l?n[e]:[e,n[e]])},"values"),r.Arguments=r.Array,t("keys"),t("values"),t("entries")},function(n,l){n.exports=function(){}},function(n,l,e){n.exports={default:e(147),__esModule:!0}},function(n,l,e){e(148),e(69),e(151),e(152),n.exports=e(2).Symbol},function(n,l,e){"use strict";var t=e(8),u=e(23),r=e(16),i=e(7),o=e(86),a=e(49).KEY,s=e(22),c=e(60),h=e(36),d=e(45),f=e(9),p=e(65),g=e(66),v=e(149),y=e(90),m=e(15),b=e(10),w=e(19),_=e(57),x=e(32),E=e(47),T=e(150),k=e(68),C=e(14),S=e(28),I=k.f,N=C.f,D=T.f,O=t.Symbol,A=t.JSON,P=A&&A.stringify,M=f("_hidden"),L=f("toPrimitive"),R={}.propertyIsEnumerable,F=c("symbol-registry"),B=c("symbols"),j=c("op-symbols"),U=Object.prototype,z="function"==typeof O,q=t.QObject,V=!q||!q.prototype||!q.prototype.findChild,H=r&&s(function(){return 7!=E(N({},"a",{get:function(){return N(this,"a",{value:7}).a}})).a})?function(n,l,e){var t=I(U,l);t&&delete U[l],N(n,l,e),t&&n!==U&&N(U,l,t)}:N,G=function(n){var l=B[n]=E(O.prototype);return l._k=n,l},Y=z&&"symbol"==typeof O.iterator?function(n){return"symbol"==typeof n}:function(n){return n instanceof O},W=function(n,l,e){return n===U&&W(j,l,e),m(n),l=_(l,!0),m(e),u(B,l)?(e.enumerable?(u(n,M)&&n[M][l]&&(n[M][l]=!1),e=E(e,{enumerable:x(0,!1)})):(u(n,M)||N(n,M,x(1,{})),n[M][l]=!0),H(n,l,e)):N(n,l,e)},X=function(n,l){m(n);for(var e,t=v(l=w(l)),u=0,r=t.length;r>u;)W(n,e=t[u++],l[e]);return n},K=function(n){var l=R.call(this,n=_(n,!0));return!(this===U&&u(B,n)&&!u(j,n))&&(!(l||!u(this,n)||!u(B,n)||u(this,M)&&this[M][n])||l)},$=function(n,l){if(n=w(n),l=_(l,!0),n!==U||!u(B,l)||u(j,l)){var e=I(n,l);return!e||!u(B,l)||u(n,M)&&n[M][l]||(e.enumerable=!0),e}},Z=function(n){for(var l,e=D(w(n)),t=[],r=0;e.length>r;)u(B,l=e[r++])||l==M||l==a||t.push(l);return t},Q=function(n){for(var l,e=n===U,t=D(e?j:w(n)),r=[],i=0;t.length>i;)!u(B,l=t[i++])||e&&!u(U,l)||r.push(B[l]);return r};z||(o((O=function(){if(this instanceof O)throw TypeError("Symbol is not a constructor!");var n=d(arguments.length>0?arguments[0]:void 0),l=function(e){this===U&&l.call(j,e),u(this,M)&&u(this[M],n)&&(this[M][n]=!1),H(this,n,x(1,e))};return r&&V&&H(U,n,{configurable:!0,set:l}),G(n)}).prototype,"toString",function(){return this._k}),k.f=$,C.f=W,e(91).f=T.f=Z,e(38).f=K,e(67).f=Q,r&&!e(33)&&o(U,"propertyIsEnumerable",K,!0),p.f=function(n){return G(f(n))}),i(i.G+i.W+i.F*!z,{Symbol:O});for(var J="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),nn=0;J.length>nn;)f(J[nn++]);for(var ln=S(f.store),en=0;ln.length>en;)g(ln[en++]);i(i.S+i.F*!z,"Symbol",{for:function(n){return u(F,n+="")?F[n]:F[n]=O(n)},keyFor:function(n){if(!Y(n))throw TypeError(n+" is not a symbol!");for(var l in F)if(F[l]===n)return l},useSetter:function(){V=!0},useSimple:function(){V=!1}}),i(i.S+i.F*!z,"Object",{create:function(n,l){return void 0===l?E(n):X(E(n),l)},defineProperty:W,defineProperties:X,getOwnPropertyDescriptor:$,getOwnPropertyNames:Z,getOwnPropertySymbols:Q}),A&&i(i.S+i.F*(!z||s(function(){var n=O();return"[null]"!=P([n])||"{}"!=P({a:n})||"{}"!=P(Object(n))})),"JSON",{stringify:function(n){for(var l,e,t=[n],u=1;arguments.length>u;)t.push(arguments[u++]);if(e=l=t[1],(b(l)||void 0!==n)&&!Y(n))return y(l)||(l=function(n,l){if("function"==typeof e&&(l=e.call(this,n,l)),!Y(l))return l}),t[1]=l,P.apply(A,t)}}),O.prototype[L]||e(18)(O.prototype,L,O.prototype.valueOf),h(O,"Symbol"),h(Math,"Math",!0),h(t.JSON,"JSON",!0)},function(n,l,e){var t=e(28),u=e(67),r=e(38);n.exports=function(n){var l=t(n),e=u.f;if(e)for(var i,o=e(n),a=r.f,s=0;o.length>s;)a.call(n,i=o[s++])&&l.push(i);return l}},function(n,l,e){var t=e(19),u=e(91).f,r={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return i&&"[object Window]"==r.call(n)?function(n){try{return u(n)}catch(n){return i.slice()}}(n):u(t(n))}},function(n,l,e){e(66)("asyncIterator")},function(n,l,e){e(66)("observable")},function(n,l,e){n.exports={default:e(154),__esModule:!0}},function(n,l,e){e(155),n.exports=e(2).Object.setPrototypeOf},function(n,l,e){var t=e(7);t(t.S,"Object",{setPrototypeOf:e(156).set})},function(n,l,e){var t=e(10),u=e(15),r=function(n,l){if(u(n),!t(l)&&null!==l)throw TypeError(l+": can't set as prototype!")};n.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(n,l,t){try{(t=e(17)(Function.call,e(68).f(Object.prototype,"__proto__").set,2))(n,[]),l=!(n instanceof Array)}catch(n){l=!0}return function(n,e){return r(n,e),l?n.__proto__=e:t(n,e),n}}({},!1):void 0),check:r}},function(n,l,e){e(158);var t=e(2).Object;n.exports=function(n,l){return t.create(n,l)}},function(n,l,e){var t=e(7);t(t.S,"Object",{create:e(47)})},function(n,l,e){var t=e(2),u=t.JSON||(t.JSON={stringify:JSON.stringify});n.exports=function(n){return u.stringify.apply(u,arguments)}},function(n,l,e){e(161),n.exports=e(2).Object.keys},function(n,l,e){var t=e(25),u=e(28);e(46)("keys",function(){return function(n){return u(t(n))}})},function(n,l,e){e(69),e(26),e(37),e(163),e(167),e(168),n.exports=e(2).Promise},function(n,l,e){"use strict";var t,u,r,i,o=e(33),a=e(8),s=e(17),c=e(51),h=e(7),d=e(10),f=e(31),p=e(71),g=e(39),v=e(95),y=e(96).set,m=e(165)(),b=e(73),w=e(97),_=e(166),x=e(98),E=a.TypeError,T=a.process,k=T&&T.versions,C=k&&k.v8||"",S=a.Promise,I="process"==c(T),N=function(){},D=u=b.f,O=!!function(){try{var n=S.resolve(1),l=(n.constructor={})[e(9)("species")]=function(n){n(N,N)};return(I||"function"==typeof PromiseRejectionEvent)&&n.then(N)instanceof l&&0!==C.indexOf("6.6")&&-1===_.indexOf("Chrome/66")}catch(n){}}(),A=function(n){var l;return!(!d(n)||"function"!=typeof(l=n.then))&&l},P=function(n,l){if(!n._n){n._n=!0;var e=n._c;m(function(){for(var t=n._v,u=1==n._s,r=0,i=function(l){var e,r,i,o=u?l.ok:l.fail,a=l.resolve,s=l.reject,c=l.domain;try{o?(u||(2==n._h&&R(n),n._h=1),!0===o?e=t:(c&&c.enter(),e=o(t),c&&(c.exit(),i=!0)),e===l.promise?s(E("Promise-chain cycle")):(r=A(e))?r.call(e,a,s):a(e)):s(t)}catch(n){c&&!i&&c.exit(),s(n)}};e.length>r;)i(e[r++]);n._c=[],n._n=!1,l&&!n._h&&M(n)})}},M=function(n){y.call(a,function(){var l,e,t,u=n._v,r=L(n);if(r&&(l=w(function(){I?T.emit("unhandledRejection",u,n):(e=a.onunhandledrejection)?e({promise:n,reason:u}):(t=a.console)&&t.error&&t.error("Unhandled promise rejection",u)}),n._h=I||L(n)?2:1),n._a=void 0,r&&l.e)throw l.v})},L=function(n){return 1!==n._h&&0===(n._a||n._c).length},R=function(n){y.call(a,function(){var l;I?T.emit("rejectionHandled",n):(l=a.onrejectionhandled)&&l({promise:n,reason:n._v})})},F=function(n){var l=this;l._d||(l._d=!0,(l=l._w||l)._v=n,l._s=2,l._a||(l._a=l._c.slice()),P(l,!0))},B=function(n){var l,e=this;if(!e._d){e._d=!0,e=e._w||e;try{if(e===n)throw E("Promise can't be resolved itself");(l=A(n))?m(function(){var t={_w:e,_d:!1};try{l.call(n,s(B,t,1),s(F,t,1))}catch(n){F.call(t,n)}}):(e._v=n,e._s=1,P(e,!1))}catch(n){F.call({_w:e,_d:!1},n)}}};O||(S=function(n){p(this,S,"Promise","_h"),f(n),t.call(this);try{n(s(B,this,1),s(F,this,1))}catch(n){F.call(this,n)}},(t=function(n){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=e(74)(S.prototype,{then:function(n,l){var e=D(v(this,S));return e.ok="function"!=typeof n||n,e.fail="function"==typeof l&&l,e.domain=I?T.domain:void 0,this._c.push(e),this._a&&this._a.push(e),this._s&&P(this,!1),e.promise},catch:function(n){return this.then(void 0,n)}}),r=function(){var n=new t;this.promise=n,this.resolve=s(B,n,1),this.reject=s(F,n,1)},b.f=D=function(n){return n===S||n===i?new r(n):u(n)}),h(h.G+h.W+h.F*!O,{Promise:S}),e(36)(S,"Promise"),e(99)("Promise"),i=e(2).Promise,h(h.S+h.F*!O,"Promise",{reject:function(n){var l=D(this);return(0,l.reject)(n),l.promise}}),h(h.S+h.F*(o||!O),"Promise",{resolve:function(n){return x(o&&this===i?S:this,n)}}),h(h.S+h.F*!(O&&e(100)(function(n){S.all(n).catch(N)})),"Promise",{all:function(n){var l=this,e=D(l),t=e.resolve,u=e.reject,r=w(function(){var e=[],r=0,i=1;g(n,!1,function(n){var o=r++,a=!1;e.push(void 0),i++,l.resolve(n).then(function(n){a||(a=!0,e[o]=n,--i||t(e))},u)}),--i||t(e)});return r.e&&u(r.v),e.promise},race:function(n){var l=this,e=D(l),t=e.reject,u=w(function(){g(n,!1,function(n){l.resolve(n).then(e.resolve,t)})});return u.e&&t(u.v),e.promise}})},function(n,l){n.exports=function(n,l,e){var t=void 0===e;switch(l.length){case 0:return t?n():n.call(e);case 1:return t?n(l[0]):n.call(e,l[0]);case 2:return t?n(l[0],l[1]):n.call(e,l[0],l[1]);case 3:return t?n(l[0],l[1],l[2]):n.call(e,l[0],l[1],l[2]);case 4:return t?n(l[0],l[1],l[2],l[3]):n.call(e,l[0],l[1],l[2],l[3])}return n.apply(e,l)}},function(n,l,e){var t=e(8),u=e(96).set,r=t.MutationObserver||t.WebKitMutationObserver,i=t.process,o=t.Promise,a="process"==e(35)(i);n.exports=function(){var n,l,e,s=function(){var t,u;for(a&&(t=i.domain)&&t.exit();n;){u=n.fn,n=n.next;try{u()}catch(t){throw n?e():l=void 0,t}}l=void 0,t&&t.enter()};if(a)e=function(){i.nextTick(s)};else if(!r||t.navigator&&t.navigator.standalone)if(o&&o.resolve){var c=o.resolve(void 0);e=function(){c.then(s)}}else e=function(){u.call(t,s)};else{var h=!0,d=document.createTextNode("");new r(s).observe(d,{characterData:!0}),e=function(){d.data=h=!h}}return function(t){var u={fn:t,next:void 0};l&&(l.next=u),n||(n=u,e()),l=u}}},function(n,l,e){var t=e(8).navigator;n.exports=t&&t.userAgent||""},function(n,l,e){"use strict";var t=e(7),u=e(2),r=e(8),i=e(95),o=e(98);t(t.P+t.R,"Promise",{finally:function(n){var l=i(this,u.Promise||r.Promise),e="function"==typeof n;return this.then(e?function(e){return o(l,n()).then(function(){return e})}:n,e?function(e){return o(l,n()).then(function(){throw e})}:n)}})},function(n,l,e){"use strict";var t=e(7),u=e(73),r=e(97);t(t.S,"Promise",{try:function(n){var l=u.f(this),e=r(n);return(e.e?l.reject:l.resolve)(e.v),l.promise}})},function(n,l,e){e(170),n.exports=9007199254740991},function(n,l,e){var t=e(7);t(t.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(n,l,e){n.exports={default:e(172),__esModule:!0}},function(n,l,e){e(173);var t=e(2).Object;n.exports=function(n,l){return t.getOwnPropertyDescriptor(n,l)}},function(n,l,e){var t=e(19),u=e(68).f;e(46)("getOwnPropertyDescriptor",function(){return function(n,l){return u(t(n),l)}})},function(n,l,e){e(175),n.exports=e(2).Object.assign},function(n,l,e){var t=e(7);t(t.S+t.F,"Object",{assign:e(176)})},function(n,l,e){"use strict";var t=e(28),u=e(67),r=e(38),i=e(25),o=e(63),a=Object.assign;n.exports=!a||e(22)(function(){var n={},l={},e=Symbol(),t="abcdefghijklmnopqrst";return n[e]=7,t.split("").forEach(function(n){l[n]=n}),7!=a({},n)[e]||Object.keys(a({},l)).join("")!=t})?function(n,l){for(var e=i(n),a=arguments.length,s=1,c=u.f,h=r.f;a>s;)for(var d,f=o(arguments[s++]),p=c?t(f).concat(c(f)):t(f),g=p.length,v=0;g>v;)h.call(f,d=p[v++])&&(e[d]=f[d]);return e}:a},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=g(e(4)),u=g(e(5)),r=g(e(53)),i=g(e(6)),o=g(e(0)),a=g(e(1)),s=g(e(29)),c=g(e(50)),h=e(11),d=e(40),f=g(e(41)),p=g(e(54));function g(n){return n&&n.__esModule?n:{default:n}}var v=function(){function n(l,e,t){(0,o.default)(this,n),this._connectionHolder=l,this._state=m.ACTIVE,this._onClose=e,this._onBookmark=t}return(0,a.default)(n,[{key:"_begin",value:function(n,l){var e=new y(this);this._connectionHolder.getConnection(e).then(function(t){return t.protocol().beginTransaction(n,l,e)}).catch(function(n){return e.onError(n)})}},{key:"run",value:function(n,l){var e=(0,h.validateStatementAndParameters)(n,l),t=e.query,u=e.params;return this._state.run(this._connectionHolder,new y(this),t,u)}},{key:"commit",value:function(){var n=this._state.commit(this._connectionHolder,new y(this));return this._state=n.state,this._onClose(),n.result}},{key:"rollback",value:function(){var n=this._state.rollback(this._connectionHolder,new y(this));return this._state=n.state,this._onClose(),n.result}},{key:"isOpen",value:function(){return this._state==m.ACTIVE}},{key:"_onError",value:function(){return this._state=m.FAILED,this._onClose(),this._connectionHolder.releaseConnection()}}]),n}(),y=function(n){function l(n){(0,o.default)(this,l);var e=(0,u.default)(this,(l.__proto__||(0,t.default)(l)).call(this));return e._tx=n,e}return(0,i.default)(l,n),(0,a.default)(l,[{key:"onError",value:function(n){var e=this;this._hasFailed||this._tx._onError().then(function(){(0,r.default)(l.prototype.__proto__||(0,t.default)(l.prototype),"onError",e).call(e,n)})}},{key:"onCompleted",value:function(n){(0,r.default)(l.prototype.__proto__||(0,t.default)(l.prototype),"onCompleted",this).call(this,n);var e=new f.default(n.bookmark);this._tx._onBookmark(e)}}]),l}(s.default),m={ACTIVE:{commit:function(n,l){return{result:b(!0,n,l),state:m.SUCCEEDED}},rollback:function(n,l){return{result:b(!1,n,l),state:m.ROLLED_BACK}},run:function(n,l,e,t){var u=f.default.empty(),r=p.default.empty();return n.getConnection(l).then(function(n){return n.protocol().run(e,t,u,r,l)}).catch(function(n){return l.onError(n)}),function(n,l,e,t){return new c.default(n,l,e,t,d.EMPTY_CONNECTION_HOLDER)}(l,e,t,function(){return l.serverMetadata()})}},FAILED:{commit:function(n,l){return l.onError({error:"Cannot commit statements in this transaction, because previous statements in the transaction has failed and the transaction has been rolled back. Please start a new transaction to run another statement."}),{result:w(l,"COMMIT",{}),state:m.FAILED}},rollback:function(n,l){return l.markCompleted(),{result:w(l,"ROLLBACK",{}),state:m.FAILED}},run:function(n,l,e,t){return l.onError({error:"Cannot run statement, because previous statements in the transaction has failed and the transaction has already been rolled back."}),w(l,e,t)}},SUCCEEDED:{commit:function(n,l){return l.onError({error:"Cannot commit statements in this transaction, because commit has already been successfully called on the transaction and transaction has been closed. Please start a new transaction to run another statement."}),{result:w(l,"COMMIT",{}),state:m.SUCCEEDED}},rollback:function(n,l){return l.onError({error:"Cannot rollback transaction, because transaction has already been successfully closed."}),{result:w(l,"ROLLBACK",{}),state:m.SUCCEEDED}},run:function(n,l,e,t){return l.onError({error:"Cannot run statement, because transaction has already been successfully closed."}),w(l,e,t)}},ROLLED_BACK:{commit:function(n,l){return l.onError({error:"Cannot commit this transaction, because it has already been rolled back."}),{result:w(l,"COMMIT",{}),state:m.ROLLED_BACK}},rollback:function(n,l){return l.onError({error:"Cannot rollback transaction, because transaction has already been rolled back."}),{result:w(l,"ROLLBACK",{}),state:m.ROLLED_BACK}},run:function(n,l,e,t){return l.onError({error:"Cannot run statement, because transaction has already been rolled back."}),w(l,e,t)}}};function b(n,l,e){return l.getConnection(e).then(function(l){return n?l.protocol().commitTransaction(e):l.protocol().rollbackTransaction(e)}).catch(function(n){return e.onError(n)}),new c.default(e,n?"COMMIT":"ROLLBACK",{},_,l)}function w(n,l,e){return new c.default(n,l,e,_,d.EMPTY_CONNECTION_HOLDER)}function _(){return{}}l.default=v},function(n,l,e){n.exports={default:e(179),__esModule:!0}},function(n,l,e){e(180),n.exports=e(2).Number.isNaN},function(n,l,e){var t=e(7);t(t.S,"Number",{isNaN:function(n){return n!=n}})},function(n,l,e){n.exports={default:e(182),__esModule:!0}},function(n,l,e){e(183),n.exports=e(2).Object.values},function(n,l,e){var t=e(7),u=e(184)(!1);t(t.S,"Object",{values:function(n){return u(n)}})},function(n,l,e){var t=e(28),u=e(19),r=e(38).f;n.exports=function(n){return function(l){for(var e,i=u(l),o=t(i),a=o.length,s=0,c=[];a>s;)r.call(i,e=o[s++])&&c.push(n?[e,i[e]]:i[e]);return c}}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=o(e(12)),u=o(e(0)),r=o(e(1)),i=e(3);function o(n){return n&&n.__esModule?n:{default:n}}var a=3e4,s=1e3,c=2,h=.2,d=function(){function n(l,e,t,r){(0,u.default)(this,n),this._maxRetryTimeMs=f(l,a),this._initialRetryDelayMs=f(e,s),this._multiplier=f(t,c),this._jitterFactor=f(r,h),this._inFlightTimeoutIds=[],this._verifyAfterConstruction()}return(0,r.default)(n,[{key:"execute",value:function(n,l){var e=this;return new t.default(function(t,u){e._executeTransactionInsidePromise(n,l,t,u)}).catch(function(t){var u=Date.now(),r=e._initialRetryDelayMs;return e._retryTransactionPromise(n,l,t,u,r)})}},{key:"close",value:function(){this._inFlightTimeoutIds.forEach(function(n){return clearTimeout(n)}),this._inFlightTimeoutIds=[]}},{key:"_retryTransactionPromise",value:function(l,e,u,r,i){var o=this;return Date.now()-r>this._maxRetryTimeMs||!n._canRetryOn(u)?t.default.reject(u):new t.default(function(n,t){var u=o._computeDelayWithJitter(i),r=setTimeout(function(){o._inFlightTimeoutIds=o._inFlightTimeoutIds.filter(function(n){return n!==r}),o._executeTransactionInsidePromise(l,e,n,t)},u);o._inFlightTimeoutIds.push(r)}).catch(function(n){var t=i*o._multiplier;return o._retryTransactionPromise(l,e,n,r,t)})}},{key:"_executeTransactionInsidePromise",value:function(n,l,e,t){var u=this,r=void 0;try{r=n()}catch(n){return void t(n)}this._safeExecuteTransactionWork(r,l).then(function(n){return u._handleTransactionWorkSuccess(n,r,e,t)}).catch(function(n){return u._handleTransactionWorkFailure(n,r,t)})}},{key:"_safeExecuteTransactionWork",value:function(n,l){try{var e=l(n);return t.default.resolve(e)}catch(n){return t.default.reject(n)}}},{key:"_handleTransactionWorkSuccess",value:function(n,l,e,t){l.isOpen()?l.commit().then(function(){e(n)}).catch(function(n){t(n)}):e(n)}},{key:"_handleTransactionWorkFailure",value:function(n,l,e){l.isOpen()?l.rollback().catch(function(n){}).then(function(){return e(n)}):e(n)}},{key:"_computeDelayWithJitter",value:function(n){var l=n*this._jitterFactor,e=n-l,t=n+l;return Math.random()*(t-e)+e}},{key:"_verifyAfterConstruction",value:function(){if(this._maxRetryTimeMs<0)throw(0,i.newError)("Max retry time should be >= 0: "+this._maxRetryTimeMs);if(this._initialRetryDelayMs<0)throw(0,i.newError)("Initial retry delay should >= 0: "+this._initialRetryDelayMs);if(this._multiplier<1)throw(0,i.newError)("Multiplier should be >= 1.0: "+this._multiplier);if(this._jitterFactor<0||this._jitterFactor>1)throw(0,i.newError)("Jitter factor should be in [0.0, 1.0]: "+this._jitterFactor)}}],[{key:"_canRetryOn",value:function(n){return n&&n.code&&(n.code===i.SERVICE_UNAVAILABLE||n.code===i.SESSION_EXPIRED||this._isTransientError(n))}},{key:"_isTransientError",value:function(n){var l=n.code;return l.indexOf("TransientError")>=0&&("Neo.TransientError.Transaction.Terminated"!==l&&"Neo.TransientError.Transaction.LockClientStopped"!==l)}}]),n}();function f(n,l){return n||0===n?n:l}l.default=d},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(24)),u=c(e(12)),r=c(e(0)),i=c(e(1)),o=c(e(105)),a=e(3),s=c(e(76));function c(n){return n&&n.__esModule?n:{default:n}}var h=function(){function n(l){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){return!0},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){return!0},u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:o.default.defaultConfig(),i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:s.default.noOp();(0,r.default)(this,n),this._create=l,this._destroy=e,this._validate=t,this._maxSize=u.maxSize,this._acquisitionTimeout=u.acquisitionTimeout,this._pools={},this._acquireRequests={},this._activeResourceCounts={},this._release=this._release.bind(this),this._log=i}return(0,i.default)(n,[{key:"acquire",value:function(n){var l=this;return this._acquire(n).then(function(e){if(e)return d(n,l._activeResourceCounts),l._log.isDebugEnabled()&&l._log.debug(e+" acquired from the pool"),e;var t=l._acquireRequests;return t[n]||(t[n]=[]),new u.default(function(e,u){var r=void 0,i=setTimeout(function(){var e=t[n];e&&(t[n]=e.filter(function(n){return n!==r})),r.isCompleted()||r.reject((0,a.newError)("Connection acquisition timed out in "+l._acquisitionTimeout+" ms."))},l._acquisitionTimeout);r=new f(e,u,i,l._log),t[n].push(r)})})}},{key:"purge",value:function(n){for(var l=this._pools[n]||[];l.length;){var e=l.pop();this._destroy(e)}delete this._pools[n]}},{key:"purgeAll",value:function(){var n=this;(0,t.default)(this._pools).forEach(function(l){return n.purge(l)})}},{key:"has",value:function(n){return n in this._pools}},{key:"activeResourceCount",value:function(n){return this._activeResourceCounts[n]||0}},{key:"_acquire",value:function(n){var l=this._pools[n];for(l||(l=[],this._pools[n]=l);l.length;){var e=l.pop();if(this._validate(e))return u.default.resolve(e);this._destroy(e)}return this._maxSize&&this.activeResourceCount(n)>=this._maxSize?u.default.resolve(null):this._create(n,this._release)}},{key:"_release",value:function(n,l){var e=this._pools[n];e?this._validate(l)?(this._log.isDebugEnabled()&&this._log.debug(l+" released to the pool "+n),e.push(l)):(this._log.isDebugEnabled()&&this._log.debug(l+" destroyed and can't be released to the pool "+n+" because it is not functional"),this._destroy(l)):(this._log.isDebugEnabled()&&this._log.debug(l+" destroyed and can't be released to the pool "+n+" because pool has been purged"),this._destroy(l)),function(n,l){var e=(l[n]||0)-1;e>0?l[n]=e:delete l[n]}(n,this._activeResourceCounts),this._processPendingAcquireRequests(n)}},{key:"_processPendingAcquireRequests",value:function(n){var l=this,e=this._acquireRequests[n];if(e){var t=e.shift();t?this._acquire(n).catch(function(n){return t.reject(n),null}).then(function(e){e&&(t.isCompleted()?l._release(n,e):(d(n,l._activeResourceCounts),t.resolve(e)))}):delete this._acquireRequests[n]}}}]),n}();function d(n,l){var e=l[n]||0;l[n]=e+1}var f=function(){function n(l,e,t,u){(0,r.default)(this,n),this._resolve=l,this._reject=e,this._timeoutId=t,this._log=u,this._completed=!1}return(0,i.default)(n,[{key:"isCompleted",value:function(){return this._completed}},{key:"resolve",value:function(n){this._completed||(this._completed=!0,clearTimeout(this._timeoutId),this._log.isDebugEnabled()&&this._log.debug(n+" acquired from the pool"),this._resolve(n))}},{key:"reject",value:function(n){this._completed||(this._completed=!0,clearTimeout(this._timeoutId),this._reject(n))}}]),n}();l.default=h},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=p(e(20)),u=p(e(12)),r=p(e(0)),i=p(e(1)),o=e(30),a=e(107),s=e(3),c=p(e(195)),h=p(e(108)),d=(p(e(29)),e(109)),f=(p(e(76)),p(e(197)));p(e(79));function p(n){return n&&n.__esModule?n:{default:n}}function g(){}var v={onNext:g,onCompleted:g,onError:g},y=0,m=function(){function n(l,e,t,u){var i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];(0,r.default)(this,n),this.id=y++,this.hostPort=t,this.server={address:t},this.creationTimestamp=Date.now(),this._errorHandler=e,this._disableLosslessIntegers=i,this._pendingObservers=[],this._currentObserver=void 0,this._ch=l,this._dechunker=new a.Dechunker,this._chunker=new a.Chunker(l),this._log=u,this._dbConnectionId=null,this._protocol=null,this._currentFailure=null,this._isBroken=!1,this._log.isDebugEnabled()&&this._log.debug(this+" created towards "+t)}return(0,i.default)(n,[{key:"connect",value:function(n,l){var e=this;return this._negotiateProtocol().then(function(){return e._initialize(n,l)})}},{key:"_negotiateProtocol",value:function(){var n=this,l=new f.default(this,this._ch,this._chunker,this._disableLosslessIntegers,this._log);return new u.default(function(e,t){var u=function(l){n._handleFatalError(l),t(l)};n._ch.onerror=u.bind(n),n._ch._error&&u(n._ch._error),n._ch.onmessage=function(u){try{n._protocol=l.createNegotiatedProtocol(u),n._ch.onerror=n._handleFatalError.bind(n),n._ch.onmessage=function(l){return n._dechunker.write(l)},n._dechunker.onmessage=function(l){n._handleMessage(n._protocol.unpacker().unpack(l))},u.hasRemaining()&&n._dechunker.write(u.readSlice(u.remaining())),e(n)}catch(l){n._handleFatalError(l),t(l)}},l.writeHandshakeRequest()})}},{key:"_initialize",value:function(n,l){var e=this;return new u.default(function(t,u){var r=new b(e,t,u);e._protocol.initialize(n,l,r)})}},{key:"protocol",value:function(){return this._protocol}},{key:"write",value:function(n,l,e){var t=this;this._queueObserver(l)&&(this._log.isDebugEnabled()&&this._log.debug(this+" C: "+n),this._protocol.packer().packStruct(n.signature,n.fields.map(function(n){return t._packable(n)}),function(n){return t._handleFatalError(n)}),this._chunker.messageBoundary(),e&&this._chunker.flush())}},{key:"_handleFatalError",value:function(n){for(this._isBroken=!0,this._error=this._errorHandler.handleAndTransformError(n,this.hostPort),this._log.isErrorEnabled()&&this._log.error(this+" experienced a fatal error "+(0,t.default)(this._error)),this._currentObserver&&this._currentObserver.onError&&this._currentObserver.onError(this._error);this._pendingObservers.length>0;){var l=this._pendingObservers.shift();l&&l.onError&&l.onError(this._error)}}},{key:"_handleMessage",value:function(n){if(!this._isBroken){var l=n.fields[0];switch(n.signature){case 113:this._log.isDebugEnabled()&&this._log.debug(this+" S: RECORD "+(0,t.default)(n)),this._currentObserver.onNext(l);break;case 112:this._log.isDebugEnabled()&&this._log.debug(this+" S: SUCCESS "+(0,t.default)(n));try{var e=this._protocol.transformMetadata(l);this._currentObserver.onCompleted(e)}finally{this._updateCurrentObserver()}break;case 127:this._log.isDebugEnabled()&&this._log.debug(this+" S: FAILURE "+(0,t.default)(n));try{var u=(0,s.newError)(l.message,l.code);this._currentFailure=this._errorHandler.handleAndTransformError(u,this.hostPort),this._currentObserver.onError(this._currentFailure)}finally{this._updateCurrentObserver(),this._resetOnFailure()}break;case 126:this._log.isDebugEnabled()&&this._log.debug(this+" S: IGNORED "+(0,t.default)(n));try{this._currentFailure&&this._currentObserver.onError?this._currentObserver.onError(this._currentFailure):this._currentObserver.onError&&this._currentObserver.onError((0,s.newError)("Ignored either because of an error or RESET"))}finally{this._updateCurrentObserver()}break;default:this._handleFatalError((0,s.newError)("Unknown Bolt protocol message: "+n))}}}},{key:"resetAndFlush",value:function(){var n=this;return new u.default(function(l,e){n._protocol.reset({onNext:function(l){var u=n._handleProtocolError("Received RECORD as a response for RESET: "+(0,t.default)(l));e(u)},onError:function(l){if(n._isBroken)e(l);else{var t=n._handleProtocolError("Received FAILURE as a response for RESET: "+l);e(t)}},onCompleted:function(){l()}})})}},{key:"_resetOnFailure",value:function(){var n=this;this._protocol.reset({onNext:function(l){n._handleProtocolError("Received RECORD as a response for RESET: "+(0,t.default)(l))},onError:function(){n._currentFailure=null},onCompleted:function(){n._currentFailure=null}})}},{key:"_queueObserver",value:function(n){return this._isBroken?(n&&n.onError&&n.onError(this._error),!1):((n=n||v).onCompleted=n.onCompleted||g,n.onError=n.onError||g,n.onNext=n.onNext||g,void 0===this._currentObserver?this._currentObserver=n:this._pendingObservers.push(n),!0)}},{key:"_updateCurrentObserver",value:function(){this._currentObserver=this._pendingObservers.shift()}},{key:"isOpen",value:function(){return!this._isBroken&&this._ch._open}},{key:"close",value:function(){var n=this,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return null};this._log.isDebugEnabled()&&this._log.debug(this+" closing"),this._protocol&&this.isOpen()&&this._protocol.prepareToClose(v),this._ch.close(function(){n._log.isDebugEnabled()&&n._log.debug(n+" closed"),l()})}},{key:"toString",value:function(){var n=this._dbConnectionId||"";return"Connection ["+this.id+"]["+n+"]"}},{key:"_packable",value:function(n){var l=this;return this._protocol.packer().packable(n,function(n){return l._handleFatalError(n)})}},{key:"_handleProtocolError",value:function(n){this._currentFailure=null,this._updateCurrentObserver();var l=(0,s.newError)(n,s.PROTOCOL_ERROR);return this._handleFatalError(l),l}}],[{key:"create",value:function(l,e,t,u){var r=h.default.parseDatabaseUrl(l),i=new c.default(r,e,t.errorCode());return new n(new o.Channel(i),t,r.hostAndPort,u,e.disableLosslessIntegers)}}]),n}();l.default=m;var b=function(){function n(l,e,t){(0,r.default)(this,n),this._connection=l,this._onSuccess=e,this._onError=t}return(0,i.default)(n,[{key:"onNext",value:function(n){this.onError((0,s.newError)("Received RECORD when initializing "+(0,t.default)(n)))}},{key:"onError",value:function(n){this._connection._updateCurrentObserver(),this._connection._handleFatalError(n),this._onError(n)}},{key:"onCompleted",value:function(n){if(n){var l=n.server;if(!this._connection.server.version)this._connection.server.version=l,d.ServerVersion.fromString(l).compareTo(d.VERSION_3_2_0)<0&&this._connection.protocol().packer().disableByteArrays();var e=n.connection_id;this._connection._dbConnectionId||(this._connection._dbConnectionId=e)}this._onSuccess(this._connection)}}]),n}()},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(0)),u=a(e(1)),r=a(e(77)),i=e(3),o=e(11);function a(n){return n&&n.__esModule?n:{default:n}}var s=function(){function n(l){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c;(0,t.default)(this,n),this._open=!0,this._pending=[],this._error=null,this._handleConnectionError=this._handleConnectionError.bind(this),this._config=l;var u=function(n,l){var e=function(n){return!0===n.encrypted||n.encrypted===o.ENCRYPTION_ON}(n),t=function(n){return!1===n.encrypted||n.encrypted===o.ENCRYPTION_OFF}(n),u=n.trust,r=function(n){var l="function"==typeof n?n():"";return l&&l.toLowerCase().indexOf("https")>=0}(l);if(function(n,l,e){n&&!e?console.warn("Neo4j driver is configured to use secure WebSocket on a HTTP web page. WebSockets might not work in a mixed content environment. Please consider configuring driver to not use encryption."):l&&e&&console.warn("Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. WebSockets might not work in a mixed content environment. Please consider configuring driver to use encryption.")}(e,t,r),t)return{scheme:"ws",error:null};if(r)return{scheme:"wss",error:null};if(e){if(u&&"TRUST_CUSTOM_CA_SIGNED_CERTIFICATES"!==u){var a=(0,i.newError)("The browser version of this driver only supports one trust strategy, 'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES'. "+u+' is not supported. Please either use TRUST_CUSTOM_CA_SIGNED_CERTIFICATES or disable encryption by setting `encrypted:"'+o.ENCRYPTION_OFF+'"` in the driver configuration.');return{scheme:null,error:a}}return{scheme:"wss",error:null}}return{scheme:"ws",error:null}}(l,e),a=u.scheme,s=u.error;if(s)this._error=s;else{this._ws=function(n,l){var e=n+"://"+l.hostAndPort;try{return new WebSocket(e)}catch(e){if(function(n,l){return"SyntaxError"===n.name&&function(n){var l=n.hostAndPort;return"["===l.charAt(0)&&-1!==l.indexOf("]")}(l)}(e,l)){var t=function(n,l){var e=l.host.replace(new RegExp(":","g"),"-").replace("%","s");return n+"://"+e+".ipv6-literal.net:"+l.port}(n,l);return new WebSocket(t)}throw e}}(a,l.url),this._ws.binaryType="arraybuffer";var h=this;this._ws.onclose=function(n){n.wasClean||h._handleConnectionError()},this._ws.onopen=function(){h._clearConnectionTimeout();var n=h._pending;h._pending=null;for(var l=0;l<n.length;l++)h.write(n[l])},this._ws.onmessage=function(n){if(h.onmessage){var l=new r.default(n.data);h.onmessage(l)}},this._ws.onerror=this._handleConnectionError,this._connectionTimeoutFired=!1,this._connectionTimeoutId=this._setupConnectionTimeout()}}return(0,u.default)(n,[{key:"_handleConnectionError",value:function(){if(this._connectionTimeoutFired)return this._error=(0,i.newError)("Failed to establish connection in "+this._config.connectionTimeout+"ms",this._config.connectionErrorCode),void(this.onerror&&this.onerror(this._error));this._open&&(this._error=(0,i.newError)("WebSocket connection failure. Due to security constraints in your web browser, the reason for the failure is not available to this Neo4j Driver. Please use your browsers development console to determine the root cause of the failure. Common reasons include the database being unavailable, using the wrong connection URL or temporary network problems. If you have enabled encryption, ensure your browser is configured to trust the certificate Neo4j is configured to use. WebSocket `readyState` is: "+this._ws.readyState,this._config.connectionErrorCode),this.onerror&&this.onerror(this._error))}},{key:"write",value:function(n){if(null!==this._pending)this._pending.push(n);else{if(!(n instanceof r.default))throw(0,i.newError)("Don't know how to send buffer: "+n);this._ws.send(n._buffer)}}},{key:"close",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return null};this._open=!1,this._clearConnectionTimeout(),this._ws.close(),this._ws.onclose=n}},{key:"_setupConnectionTimeout",value:function(){var n=this,l=this._config.connectionTimeout;if(l){var e=this._ws;return setTimeout(function(){e.readyState!==WebSocket.OPEN&&(n._connectionTimeoutFired=!0,e.close())},l)}return null}},{key:"_clearConnectionTimeout",value:function(){var n=this._connectionTimeoutId;(n||0===n)&&(this._connectionTimeoutFired=!1,this._connectionTimeoutId=null,clearTimeout(n))}}]),n}();function c(){return"undefined"!=typeof window&&window.location?window.location.protocol:null}l.default=s},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(4)),u=a(e(0)),r=a(e(1)),i=a(e(5)),o=a(e(6));function a(n){return n&&n.__esModule?n:{default:n}}var s=function(n){function l(){return(0,u.default)(this,l),(0,i.default)(this,(l.__proto__||(0,t.default)(l)).apply(this,arguments))}return(0,o.default)(l,n),(0,r.default)(l,[{key:"resolve",value:function(n){return this._resolveToItself(n)}}]),l}(a(e(106)).default);l.default=s},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=r(e(77)),u=r(e(191));function r(n){return n&&n.__esModule?n:{default:n}}var i=new u.default.TextEncoder("utf-8"),o=new u.default.TextDecoder("utf-8");l.default={encode:function(n){return new t.default(i.encode(n).buffer)},decode:function(n,l){if(n instanceof t.default)return o.decode(n.readView(Math.min(l,n.length-n.position)));for(var e=new t.default(l),u=0;u<l;u++)e.writeUInt8(n.readUInt8());return e.reset(),o.decode(e.readView(l))}}},function(n,l,e){var t=e(192);n.exports={TextEncoder:t.TextEncoder,TextDecoder:t.TextDecoder}},function(n,l,e){!function(l){"use strict";function t(n,l,e){return l<=n&&n<=e}n.exports&&!l["encoding-indexes"]&&(l["encoding-indexes"]=e(193)["encoding-indexes"]);var u=Math.floor;function r(n){if(void 0===n)return{};if(n===Object(n))return n;throw TypeError("Could not convert argument to dictionary")}function i(n){return 0<=n&&n<=127}var o=i,a=-1;function s(n){this.tokens=[].slice.call(n),this.tokens.reverse()}s.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():a},prepend:function(n){if(Array.isArray(n))for(var l=n;l.length;)this.tokens.push(l.pop());else this.tokens.push(n)},push:function(n){if(Array.isArray(n))for(var l=n;l.length;)this.tokens.unshift(l.shift());else this.tokens.unshift(n)}};var c=-1;function h(n,l){if(n)throw TypeError("Decoder error");return l||65533}function d(n){throw TypeError("The code point "+n+" could not be encoded.")}function f(n){return n=String(n).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(g,n)?g[n]:null}var p=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],g={};p.forEach(function(n){n.encodings.forEach(function(n){n.labels.forEach(function(l){g[l]=n})})});var v,y,m={},b={};function w(n,l){return l&&l[n]||null}function _(n,l){var e=l.indexOf(n);return-1===e?null:e}function x(n){if(!("encoding-indexes"in l))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return l["encoding-indexes"][n]}var E="utf-8";function T(n,l){if(!(this instanceof T))throw TypeError("Called as a function. Did you forget 'new'?");n=void 0!==n?String(n):E,l=r(l),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var e=f(n);if(null===e||"replacement"===e.name)throw RangeError("Unknown encoding: "+n);if(!b[e.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");return this._encoding=e,Boolean(l.fatal)&&(this._error_mode="fatal"),Boolean(l.ignoreBOM)&&(this._ignoreBOM=!0),Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase(),this.fatal="fatal"===this._error_mode,this.ignoreBOM=this._ignoreBOM),this}function k(n,e){if(!(this instanceof k))throw TypeError("Called as a function. Did you forget 'new'?");e=r(e),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(e.fatal)?"fatal":"replacement";if(Boolean(e.NONSTANDARD_allowLegacyEncoding)){var t=f(n=void 0!==n?String(n):E);if(null===t||"replacement"===t.name)throw RangeError("Unknown encoding: "+n);if(!m[t.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");this._encoding=t}else this._encoding=f("utf-8"),void 0!==n&&"console"in l&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase()),this}function C(n){var l=n.fatal,e=0,u=0,r=0,i=128,o=191;this.handler=function(n,s){if(s===a&&0!==r)return r=0,h(l);if(s===a)return c;if(0===r){if(t(s,0,127))return s;if(t(s,194,223))r=1,e=31&s;else if(t(s,224,239))224===s&&(i=160),237===s&&(o=159),r=2,e=15&s;else{if(!t(s,240,244))return h(l);240===s&&(i=144),244===s&&(o=143),r=3,e=7&s}return null}if(!t(s,i,o))return e=r=u=0,i=128,o=191,n.prepend(s),h(l);if(i=128,o=191,e=e<<6|63&s,(u+=1)!==r)return null;var d=e;return e=r=u=0,d}}function S(n){n.fatal;this.handler=function(n,l){if(l===a)return c;if(o(l))return l;var e,u;t(l,128,2047)?(e=1,u=192):t(l,2048,65535)?(e=2,u=224):t(l,65536,1114111)&&(e=3,u=240);for(var r=[(l>>6*e)+u];e>0;){var i=l>>6*(e-1);r.push(128|63&i),e-=1}return r}}function I(n,l){var e=l.fatal;this.handler=function(l,t){if(t===a)return c;if(i(t))return t;var u=n[t-128];return null===u?h(e):u}}function N(n,l){l.fatal;this.handler=function(l,e){if(e===a)return c;if(o(e))return e;var t=_(e,n);return null===t&&d(e),t+128}}function D(n){var l=n.fatal,e=0,u=0,r=0;this.handler=function(n,o){if(o===a&&0===e&&0===u&&0===r)return c;var s;if(o!==a||0===e&&0===u&&0===r||(e=0,u=0,r=0,h(l)),0!==r){s=null,t(o,48,57)&&(s=function(n){if(n>39419&&n<189e3||n>1237575)return null;if(7457===n)return 59335;var l,e=0,t=0,u=x("gb18030-ranges");for(l=0;l<u.length;++l){var r=u[l];if(!(r[0]<=n))break;e=r[0],t=r[1]}return t+n-e}(10*(126*(10*(e-129)+u-48)+r-129)+o-48));var d=[u,r,o];return e=0,u=0,r=0,null===s?(n.prepend(d),h(l)):s}if(0!==u)return t(o,129,254)?(r=o,null):(n.prepend([u,o]),e=0,u=0,h(l));if(0!==e){if(t(o,48,57))return u=o,null;var f=e,p=null;e=0;var g=o<127?64:65;return(t(o,64,126)||t(o,128,254))&&(p=190*(f-129)+(o-g)),null===(s=null===p?null:w(p,x("gb18030")))&&i(o)&&n.prepend(o),null===s?h(l):s}return i(o)?o:128===o?8364:t(o,129,254)?(e=o,null):h(l)}}function O(n,l){n.fatal;this.handler=function(n,e){if(e===a)return c;if(o(e))return e;if(58853===e)return d(e);if(l&&8364===e)return 128;var t=_(e,x("gb18030"));if(null!==t){var r=t%190;return[u(t/190)+129,r+(r<63?64:65)]}if(l)return d(e);t=function(n){if(59335===n)return 7457;var l,e=0,t=0,u=x("gb18030-ranges");for(l=0;l<u.length;++l){var r=u[l];if(!(r[1]<=n))break;e=r[1],t=r[0]}return t+n-e}(e);var i=u(t/10/126/10),s=u((t-=10*i*126*10)/10/126),h=u((t-=10*s*126)/10);return[i+129,s+48,h+129,t-10*h+48]}}function A(n){var l=n.fatal,e=0;this.handler=function(n,u){if(u===a&&0!==e)return e=0,h(l);if(u===a&&0===e)return c;if(0!==e){var r=e,o=null;e=0;var s=u<127?64:98;switch((t(u,64,126)||t(u,161,254))&&(o=157*(r-129)+(u-s)),o){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var d=null===o?null:w(o,x("big5"));return null===d&&i(u)&&n.prepend(u),null===d?h(l):d}return i(u)?u:t(u,129,254)?(e=u,null):h(l)}}function P(n){n.fatal;this.handler=function(n,l){if(l===a)return c;if(o(l))return l;var e=function(n){var l=y=y||x("big5").map(function(n,l){return l<5024?null:n});return 9552===n||9566===n||9569===n||9578===n||21313===n||21317===n?l.lastIndexOf(n):_(n,l)}(l);if(null===e)return d(l);var t=u(e/157)+129;if(t<161)return d(l);var r=e%157;return[t,r+(r<63?64:98)]}}function M(n){var l=n.fatal,e=!1,u=0;this.handler=function(n,r){if(r===a&&0!==u)return u=0,h(l);if(r===a&&0===u)return c;if(142===u&&t(r,161,223))return u=0,65216+r;if(143===u&&t(r,161,254))return e=!0,u=r,null;if(0!==u){var o=u;u=0;var s=null;return t(o,161,254)&&t(r,161,254)&&(s=w(94*(o-161)+(r-161),x(e?"jis0212":"jis0208"))),e=!1,t(r,161,254)||n.prepend(r),null===s?h(l):s}return i(r)?r:142===r||143===r||t(r,161,254)?(u=r,null):h(l)}}function L(n){n.fatal;this.handler=function(n,l){if(l===a)return c;if(o(l))return l;if(165===l)return 92;if(8254===l)return 126;if(t(l,65377,65439))return[142,l-65377+161];8722===l&&(l=65293);var e=_(l,x("jis0208"));return null===e?d(l):[u(e/94)+161,e%94+161]}}function R(n){var l=n.fatal,e=0,u=1,r=2,i=3,o=4,s=5,d=6,f=e,p=e,g=0,v=!1;this.handler=function(n,y){switch(f){default:case e:return 27===y?(f=s,null):t(y,0,127)&&14!==y&&15!==y&&27!==y?(v=!1,y):y===a?c:(v=!1,h(l));case u:return 27===y?(f=s,null):92===y?(v=!1,165):126===y?(v=!1,8254):t(y,0,127)&&14!==y&&15!==y&&27!==y&&92!==y&&126!==y?(v=!1,y):y===a?c:(v=!1,h(l));case r:return 27===y?(f=s,null):t(y,33,95)?(v=!1,65344+y):y===a?c:(v=!1,h(l));case i:return 27===y?(f=s,null):t(y,33,126)?(v=!1,g=y,f=o,null):y===a?c:(v=!1,h(l));case o:if(27===y)return f=s,h(l);if(t(y,33,126)){f=i;var m=w(94*(g-33)+y-33,x("jis0208"));return null===m?h(l):m}return y===a?(f=i,n.prepend(y),h(l)):(f=i,h(l));case s:return 36===y||40===y?(g=y,f=d,null):(n.prepend(y),v=!1,f=p,h(l));case d:var b=g;g=0;var _=null;if(40===b&&66===y&&(_=e),40===b&&74===y&&(_=u),40===b&&73===y&&(_=r),36!==b||64!==y&&66!==y||(_=i),null!==_){f=f=_;var E=v;return v=!0,E?h(l):null}return n.prepend([b,y]),v=!1,f=p,h(l)}}}function F(n){n.fatal;var l=0,e=1,t=2,r=l;this.handler=function(n,i){if(i===a&&r!==l)return n.prepend(i),r=l,[27,40,66];if(i===a&&r===l)return c;if(!(r!==l&&r!==e||14!==i&&15!==i&&27!==i))return d(65533);if(r===l&&o(i))return i;if(r===e&&(o(i)&&92!==i&&126!==i||165==i||8254==i)){if(o(i))return i;if(165===i)return 92;if(8254===i)return 126}if(o(i)&&r!==l)return n.prepend(i),r=l,[27,40,66];if((165===i||8254===i)&&r!==e)return n.prepend(i),r=e,[27,40,74];8722===i&&(i=65293);var s=_(i,x("jis0208"));return null===s?d(i):r!==t?(n.prepend(i),r=t,[27,36,66]):[u(s/94)+33,s%94+33]}}function B(n){var l=n.fatal,e=0;this.handler=function(n,u){if(u===a&&0!==e)return e=0,h(l);if(u===a&&0===e)return c;if(0!==e){var r=e,o=null;e=0;var s=u<127?64:65,d=r<160?129:193;if((t(u,64,126)||t(u,128,252))&&(o=188*(r-d)+u-s),t(o,8836,10715))return 48508+o;var f=null===o?null:w(o,x("jis0208"));return null===f&&i(u)&&n.prepend(u),null===f?h(l):f}return i(u)||128===u?u:t(u,161,223)?65216+u:t(u,129,159)||t(u,224,252)?(e=u,null):h(l)}}function j(n){n.fatal;this.handler=function(n,l){if(l===a)return c;if(o(l)||128===l)return l;if(165===l)return 92;if(8254===l)return 126;if(t(l,65377,65439))return l-65377+161;8722===l&&(l=65293);var e=function(n){return(v=v||x("jis0208").map(function(n,l){return t(l,8272,8835)?null:n})).indexOf(n)}(l);if(null===e)return d(l);var r=u(e/188),i=e%188;return[r+(r<31?129:193),i+(i<63?64:65)]}}function U(n){var l=n.fatal,e=0;this.handler=function(n,u){if(u===a&&0!==e)return e=0,h(l);if(u===a&&0===e)return c;if(0!==e){var r=e,o=null;e=0,t(u,65,254)&&(o=190*(r-129)+(u-65));var s=null===o?null:w(o,x("euc-kr"));return null===o&&i(u)&&n.prepend(u),null===s?h(l):s}return i(u)?u:t(u,129,254)?(e=u,null):h(l)}}function z(n){n.fatal;this.handler=function(n,l){if(l===a)return c;if(o(l))return l;var e=_(l,x("euc-kr"));return null===e?d(l):[u(e/190)+129,e%190+65]}}function q(n,l){var e=n>>8,t=255&n;return l?[e,t]:[t,e]}function V(n,l){var e=l.fatal,u=null,r=null;this.handler=function(l,i){if(i===a&&(null!==u||null!==r))return h(e);if(i===a&&null===u&&null===r)return c;if(null===u)return u=i,null;var o;if(o=n?(u<<8)+i:(i<<8)+u,u=null,null!==r){var s=r;return r=null,t(o,56320,57343)?65536+1024*(s-55296)+(o-56320):(l.prepend(q(o,n)),h(e))}return t(o,55296,56319)?(r=o,null):t(o,56320,57343)?h(e):o}}function H(n,l){l.fatal;this.handler=function(l,e){if(e===a)return c;if(t(e,0,65535))return q(e,n);var u=q(55296+(e-65536>>10),n),r=q(56320+(e-65536&1023),n);return u.concat(r)}}function G(n){n.fatal;this.handler=function(n,l){return l===a?c:i(l)?l:63360+l-128}}function Y(n){n.fatal;this.handler=function(n,l){return l===a?c:o(l)?l:t(l,63360,63487)?l-63360+128:d(l)}}Object.defineProperty&&(Object.defineProperty(T.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(T.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(T.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),T.prototype.decode=function(n,l){var e;e="object"==typeof n&&n instanceof ArrayBuffer?new Uint8Array(n):"object"==typeof n&&"buffer"in n&&n.buffer instanceof ArrayBuffer?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):new Uint8Array(0),l=r(l),this._do_not_flush||(this._decoder=b[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(l.stream);for(var t,u=new s(e),i=[];;){var o=u.read();if(o===a)break;if((t=this._decoder.handler(u,o))===c)break;null!==t&&(Array.isArray(t)?i.push.apply(i,t):i.push(t))}if(!this._do_not_flush){do{if((t=this._decoder.handler(u,u.read()))===c)break;null!==t&&(Array.isArray(t)?i.push.apply(i,t):i.push(t))}while(!u.endOfStream());this._decoder=null}return function(n){var l,e;return l=["UTF-8","UTF-16LE","UTF-16BE"],e=this._encoding.name,-1===l.indexOf(e)||this._ignoreBOM||this._BOMseen||(n.length>0&&65279===n[0]?(this._BOMseen=!0,n.shift()):n.length>0&&(this._BOMseen=!0)),function(n){for(var l="",e=0;e<n.length;++e){var t=n[e];t<=65535?l+=String.fromCharCode(t):(t-=65536,l+=String.fromCharCode(55296+(t>>10),56320+(1023&t)))}return l}(n)}.call(this,i)},Object.defineProperty&&Object.defineProperty(k.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),k.prototype.encode=function(n,l){n=void 0===n?"":String(n),l=r(l),this._do_not_flush||(this._encoder=m[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(l.stream);for(var e,t=new s(function(n){for(var l=String(n),e=l.length,t=0,u=[];t<e;){var r=l.charCodeAt(t);if(r<55296||r>57343)u.push(r);else if(56320<=r&&r<=57343)u.push(65533);else if(55296<=r&&r<=56319)if(t===e-1)u.push(65533);else{var i=l.charCodeAt(t+1);if(56320<=i&&i<=57343){var o=1023&r,a=1023&i;u.push(65536+(o<<10)+a),t+=1}else u.push(65533)}t+=1}return u}(n)),u=[];;){var i=t.read();if(i===a)break;if((e=this._encoder.handler(t,i))===c)break;Array.isArray(e)?u.push.apply(u,e):u.push(e)}if(!this._do_not_flush){for(;(e=this._encoder.handler(t,t.read()))!==c;)Array.isArray(e)?u.push.apply(u,e):u.push(e);this._encoder=null}return new Uint8Array(u)},m["UTF-8"]=function(n){return new S(n)},b["UTF-8"]=function(n){return new C(n)},"encoding-indexes"in l&&p.forEach(function(n){"Legacy single-byte encodings"===n.heading&&n.encodings.forEach(function(n){var l=n.name,e=x(l.toLowerCase());b[l]=function(n){return new I(e,n)},m[l]=function(n){return new N(e,n)}})}),b.GBK=function(n){return new D(n)},m.GBK=function(n){return new O(n,!0)},m.gb18030=function(n){return new O(n)},b.gb18030=function(n){return new D(n)},m.Big5=function(n){return new P(n)},b.Big5=function(n){return new A(n)},m["EUC-JP"]=function(n){return new L(n)},b["EUC-JP"]=function(n){return new M(n)},m["ISO-2022-JP"]=function(n){return new F(n)},b["ISO-2022-JP"]=function(n){return new R(n)},m.Shift_JIS=function(n){return new j(n)},b.Shift_JIS=function(n){return new B(n)},m["EUC-KR"]=function(n){return new z(n)},b["EUC-KR"]=function(n){return new U(n)},m["UTF-16BE"]=function(n){return new H(!0,n)},b["UTF-16BE"]=function(n){return new V(!0,n)},m["UTF-16LE"]=function(n){return new H(!1,n)},b["UTF-16LE"]=function(n){return new V(!1,n)},m["x-user-defined"]=function(n){return new Y(n)},b["x-user-defined"]=function(n){return new G(n)},l.TextEncoder||(l.TextEncoder=k),l.TextDecoder||(l.TextDecoder=T),n.exports&&(n.exports={TextEncoder:l.TextEncoder,TextDecoder:l.TextDecoder,EncodingIndexes:l["encoding-indexes"]})}(this||{})},function(n,l,e){!function(l){"use strict";n.exports&&(n.exports=l),l["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{})},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(4)),u=c(e(0)),r=c(e(1)),i=c(e(5)),o=c(e(6)),a=c(e(78)),s=e(30);function c(n){return n&&n.__esModule?n:{default:n}}var h=function(n){function l(n){(0,u.default)(this,l);for(var e=0,r=0;r<n.length;r++)e+=n[r].length;var o=(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,e));return o._buffers=n,o}return(0,o.default)(l,n),(0,r.default)(l,[{key:"getUInt8",value:function(n){for(var l=0;l<this._buffers.length;l++){var e=this._buffers[l];if(!(n>=e.length))return e.getUInt8(n);n-=e.length}}},{key:"getInt8",value:function(n){for(var l=0;l<this._buffers.length;l++){var e=this._buffers[l];if(!(n>=e.length))return e.getInt8(n);n-=e.length}}},{key:"getFloat64",value:function(n){for(var l=(0,s.alloc)(8),e=0;e<8;e++)l.putUInt8(e,this.getUInt8(n+e));return l.getFloat64(0)}}]),l}(a.default);l.default=h},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t,u=e(0),r=(t=u)&&t.__esModule?t:{default:t},i=e(3),o=e(11);var a=5e3,s=[null,void 0,!0,!1,o.ENCRYPTION_ON,o.ENCRYPTION_OFF],c=[null,void 0,"TRUST_ALL_CERTIFICATES","TRUST_ON_FIRST_USE","TRUST_SIGNED_CERTIFICATES","TRUST_CUSTOM_CA_SIGNED_CERTIFICATES","TRUST_SYSTEM_CA_SIGNED_CERTIFICATES"];l.default=function n(l,e,t){(0,r.default)(this,n),this.url=l,this.encrypted=function(n){var l=n.encrypted;if(-1===s.indexOf(l))throw(0,i.newError)("Illegal value of the encrypted setting "+l+". Expected one of "+s);return l}(e),this.trust=function(n){var l=n.trust;if(-1===c.indexOf(l))throw(0,i.newError)("Illegal value of the trust setting "+l+". Expected one of "+c);return l}(e),this.trustedCertificates=function(n){return n.trustedCertificates||[]}(e),this.knownHostsPath=function(n){return n.knownHosts||null}(e),this.connectionErrorCode=t||i.SERVICE_UNAVAILABLE,this.connectionTimeout=function(n){var l=parseInt(n.connectionTimeout,10);return 0===l?null:l&&l<0?null:l||a}(e)}},function(n,l,e){
/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
!function(n){"use strict";function l(){for(var n=arguments.length,l=Array(n),e=0;e<n;e++)l[e]=arguments[e];if(l.length>1){l[0]=l[0].slice(0,-1);for(var t=l.length-1,u=1;u<t;++u)l[u]=l[u].slice(1,-1);return l[t]=l[t].slice(1),l.join("")}return l[0]}function e(n){return"(?:"+n+")"}function t(n){return void 0===n?"undefined":null===n?"null":Object.prototype.toString.call(n).split(" ").pop().split("]").shift().toLowerCase()}function u(n){return n.toUpperCase()}function r(n){var t=l("[0-9]","[A-Fa-f]"),u=e(e("%[EFef]"+t+"%"+t+t+"%"+t+t)+"|"+e("%[89A-Fa-f]"+t+"%"+t+t)+"|"+e("%"+t+t)),r="[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",i=l("[\\:\\/\\?\\#\\[\\]\\@]",r),o=n?"[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]":"[]",a=n?"[\\uE000-\\uF8FF]":"[]",s=l("[A-Za-z]","[0-9]","[\\-\\.\\_\\~]",o),c=e("[A-Za-z]"+l("[A-Za-z]","[0-9]","[\\+\\-\\.]")+"*"),h=e(e(u+"|"+l(s,r,"[\\:]"))+"*"),d=(e(e("25[0-5]")+"|"+e("2[0-4][0-9]")+"|"+e("1[0-9][0-9]")+"|"+e("[1-9][0-9]")+"|[0-9]"),e(e("25[0-5]")+"|"+e("2[0-4][0-9]")+"|"+e("1[0-9][0-9]")+"|"+e("0?[1-9][0-9]")+"|0?0?[0-9]")),f=e(d+"\\."+d+"\\."+d+"\\."+d),p=e(t+"{1,4}"),g=e(e(p+"\\:"+p)+"|"+f),v=e(e(p+"\\:")+"{6}"+g),y=e("\\:\\:"+e(p+"\\:")+"{5}"+g),m=e(e(p)+"?\\:\\:"+e(p+"\\:")+"{4}"+g),b=e(e(e(p+"\\:")+"{0,1}"+p)+"?\\:\\:"+e(p+"\\:")+"{3}"+g),w=e(e(e(p+"\\:")+"{0,2}"+p)+"?\\:\\:"+e(p+"\\:")+"{2}"+g),_=e(e(e(p+"\\:")+"{0,3}"+p)+"?\\:\\:"+p+"\\:"+g),x=e(e(e(p+"\\:")+"{0,4}"+p)+"?\\:\\:"+g),E=e(e(e(p+"\\:")+"{0,5}"+p)+"?\\:\\:"+p),T=e(e(e(p+"\\:")+"{0,6}"+p)+"?\\:\\:"),k=e([v,y,m,b,w,_,x,E,T].join("|")),C=e(e(s+"|"+u)+"+"),S=(e(k+"\\%25"+C),e(k+e("\\%25|\\%(?!"+t+"{2})")+C)),I=e("[vV]"+t+"+\\."+l(s,r,"[\\:]")+"+"),N=e("\\["+e(S+"|"+k+"|"+I)+"\\]"),D=e(e(u+"|"+l(s,r))+"*"),O=e(N+"|"+f+"(?!"+D+")|"+D),A=e("[0-9]*"),P=e(e(h+"@")+"?"+O+e("\\:"+A)+"?"),M=e(u+"|"+l(s,r,"[\\:\\@]")),L=e(M+"*"),R=e(M+"+"),F=e(e(u+"|"+l(s,r,"[\\@]"))+"+"),B=e(e("\\/"+L)+"*"),j=e("\\/"+e(R+B)+"?"),U=e(F+B),z=e(R+B),q="(?!"+M+")",V=(e(B+"|"+j+"|"+U+"|"+z+"|"+q),e(e(M+"|"+l("[\\/\\?]",a))+"*")),H=e(e(M+"|[\\/\\?]")+"*"),G=e(e("\\/\\/"+P+B)+"|"+j+"|"+z+"|"+q),Y=e(c+"\\:"+G+e("\\?"+V)+"?"+e("\\#"+H)+"?"),W=e(e("\\/\\/"+P+B)+"|"+j+"|"+U+"|"+q),X=e(W+e("\\?"+V)+"?"+e("\\#"+H)+"?");return e(Y+"|"+X),e(c+"\\:"+G+e("\\?"+V)+"?"),e(e("\\/\\/("+e("("+h+")@")+"?("+O+")"+e("\\:("+A+")")+"?)")+"?("+B+"|"+j+"|"+z+"|"+q+")"),e("\\?("+V+")"),e("\\#("+H+")"),e(e("\\/\\/("+e("("+h+")@")+"?("+O+")"+e("\\:("+A+")")+"?)")+"?("+B+"|"+j+"|"+U+"|"+q+")"),e("\\?("+V+")"),e("\\#("+H+")"),e(e("\\/\\/("+e("("+h+")@")+"?("+O+")"+e("\\:("+A+")")+"?)")+"?("+B+"|"+j+"|"+z+"|"+q+")"),e("\\?("+V+")"),e("\\#("+H+")"),e("("+h+")@"),e("\\:("+A+")"),{NOT_SCHEME:new RegExp(l("[^]","[A-Za-z]","[0-9]","[\\+\\-\\.]"),"g"),NOT_USERINFO:new RegExp(l("[^\\%\\:]",s,r),"g"),NOT_HOST:new RegExp(l("[^\\%\\[\\]\\:]",s,r),"g"),NOT_PATH:new RegExp(l("[^\\%\\/\\:\\@]",s,r),"g"),NOT_PATH_NOSCHEME:new RegExp(l("[^\\%\\/\\@]",s,r),"g"),NOT_QUERY:new RegExp(l("[^\\%]",s,r,"[\\:\\@\\/\\?]",a),"g"),NOT_FRAGMENT:new RegExp(l("[^\\%]",s,r,"[\\:\\@\\/\\?]"),"g"),ESCAPE:new RegExp(l("[^]",s,r),"g"),UNRESERVED:new RegExp(s,"g"),OTHER_CHARS:new RegExp(l("[^\\%]",s,i),"g"),PCT_ENCODED:new RegExp(u,"g"),IPV4ADDRESS:new RegExp("^("+f+")$"),IPV6ADDRESS:new RegExp("^\\[?("+k+")"+e(e("\\%25|\\%(?!"+t+"{2})")+"("+C+")")+"?\\]?$")}}var i=r(!1),o=r(!0),a=function(n,l){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return function(n,l){var e=[],t=!0,u=!1,r=void 0;try{for(var i,o=n[Symbol.iterator]();!(t=(i=o.next()).done)&&(e.push(i.value),!l||e.length!==l);t=!0);}catch(n){u=!0,r=n}finally{try{!t&&o.return&&o.return()}finally{if(u)throw r}}return e}(n,l);throw new TypeError("Invalid attempt to destructure non-iterable instance")},s=2147483647,c=/^xn--/,h=/[^\0-\x7E]/,d=/[\x2E\u3002\uFF0E\uFF61]/g,f={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},p=Math.floor,g=String.fromCharCode;function v(n){throw new RangeError(f[n])}function y(n,l){var e=n.split("@"),t="";e.length>1&&(t=e[0]+"@",n=e[1]);var u=(n=n.replace(d,".")).split("."),r=function(n,l){for(var e=[],t=n.length;t--;)e[t]=l(n[t]);return e}(u,l).join(".");return t+r}function m(n){for(var l=[],e=0,t=n.length;e<t;){var u=n.charCodeAt(e++);if(u>=55296&&u<=56319&&e<t){var r=n.charCodeAt(e++);56320==(64512&r)?l.push(((1023&u)<<10)+(1023&r)+65536):(l.push(u),e--)}else l.push(u)}return l}var b=function(n,l){return n+22+75*(n<26)-((0!=l)<<5)},w=function(n,l,e){var t=0;for(n=e?p(n/700):n>>1,n+=p(n/l);n>455;t+=36)n=p(n/35);return p(t+36*n/(n+38))},_=function(n){var l,e=[],t=n.length,u=0,r=128,i=72,o=n.lastIndexOf("-");o<0&&(o=0);for(var a=0;a<o;++a)n.charCodeAt(a)>=128&&v("not-basic"),e.push(n.charCodeAt(a));for(var c=o>0?o+1:0;c<t;){for(var h=u,d=1,f=36;;f+=36){c>=t&&v("invalid-input");var g=(l=n.charCodeAt(c++))-48<10?l-22:l-65<26?l-65:l-97<26?l-97:36;(g>=36||g>p((s-u)/d))&&v("overflow"),u+=g*d;var y=f<=i?1:f>=i+26?26:f-i;if(g<y)break;var m=36-y;d>p(s/m)&&v("overflow"),d*=m}var b=e.length+1;i=w(u-h,b,0==h),p(u/b)>s-r&&v("overflow"),r+=p(u/b),u%=b,e.splice(u++,0,r)}return String.fromCodePoint.apply(String,e)},x=function(n){var l=[],e=(n=m(n)).length,t=128,u=0,r=72,i=!0,o=!1,a=void 0;try{for(var c,h=n[Symbol.iterator]();!(i=(c=h.next()).done);i=!0){var d=c.value;d<128&&l.push(g(d))}}catch(n){o=!0,a=n}finally{try{!i&&h.return&&h.return()}finally{if(o)throw a}}var f=l.length,y=f;for(f&&l.push("-");y<e;){var _=s,x=!0,E=!1,T=void 0;try{for(var k,C=n[Symbol.iterator]();!(x=(k=C.next()).done);x=!0){var S=k.value;S>=t&&S<_&&(_=S)}}catch(n){E=!0,T=n}finally{try{!x&&C.return&&C.return()}finally{if(E)throw T}}var I=y+1;_-t>p((s-u)/I)&&v("overflow"),u+=(_-t)*I,t=_;var N=!0,D=!1,O=void 0;try{for(var A,P=n[Symbol.iterator]();!(N=(A=P.next()).done);N=!0){var M=A.value;if(M<t&&++u>s&&v("overflow"),M==t){for(var L=u,R=36;;R+=36){var F=R<=r?1:R>=r+26?26:R-r;if(L<F)break;var B=L-F,j=36-F;l.push(g(b(F+B%j,0))),L=p(B/j)}l.push(g(b(L,0))),r=w(u,I,y==f),u=0,++y}}}catch(n){D=!0,O=n}finally{try{!N&&P.return&&P.return()}finally{if(D)throw O}}++u,++t}return l.join("")},E={version:"2.1.0",ucs2:{decode:m,encode:function(n){return String.fromCodePoint.apply(String,function(n){if(Array.isArray(n)){for(var l=0,e=Array(n.length);l<n.length;l++)e[l]=n[l];return e}return Array.from(n)}(n))}},decode:_,encode:x,toASCII:function(n){return y(n,function(n){return h.test(n)?"xn--"+x(n):n})},toUnicode:function(n){return y(n,function(n){return c.test(n)?_(n.slice(4).toLowerCase()):n})}},T={};function k(n){var l=n.charCodeAt(0);return l<16?"%0"+l.toString(16).toUpperCase():l<128?"%"+l.toString(16).toUpperCase():l<2048?"%"+(l>>6|192).toString(16).toUpperCase()+"%"+(63&l|128).toString(16).toUpperCase():"%"+(l>>12|224).toString(16).toUpperCase()+"%"+(l>>6&63|128).toString(16).toUpperCase()+"%"+(63&l|128).toString(16).toUpperCase()}function C(n){for(var l="",e=0,t=n.length;e<t;){var u=parseInt(n.substr(e+1,2),16);if(u<128)l+=String.fromCharCode(u),e+=3;else if(u>=194&&u<224){if(t-e>=6){var r=parseInt(n.substr(e+4,2),16);l+=String.fromCharCode((31&u)<<6|63&r)}else l+=n.substr(e,6);e+=6}else if(u>=224){if(t-e>=9){var i=parseInt(n.substr(e+4,2),16),o=parseInt(n.substr(e+7,2),16);l+=String.fromCharCode((15&u)<<12|(63&i)<<6|63&o)}else l+=n.substr(e,9);e+=9}else l+=n.substr(e,3),e+=3}return l}function S(n,l){function e(n){var e=C(n);return e.match(l.UNRESERVED)?e:n}return n.scheme&&(n.scheme=String(n.scheme).replace(l.PCT_ENCODED,e).toLowerCase().replace(l.NOT_SCHEME,"")),void 0!==n.userinfo&&(n.userinfo=String(n.userinfo).replace(l.PCT_ENCODED,e).replace(l.NOT_USERINFO,k).replace(l.PCT_ENCODED,u)),void 0!==n.host&&(n.host=String(n.host).replace(l.PCT_ENCODED,e).toLowerCase().replace(l.NOT_HOST,k).replace(l.PCT_ENCODED,u)),void 0!==n.path&&(n.path=String(n.path).replace(l.PCT_ENCODED,e).replace(n.scheme?l.NOT_PATH:l.NOT_PATH_NOSCHEME,k).replace(l.PCT_ENCODED,u)),void 0!==n.query&&(n.query=String(n.query).replace(l.PCT_ENCODED,e).replace(l.NOT_QUERY,k).replace(l.PCT_ENCODED,u)),void 0!==n.fragment&&(n.fragment=String(n.fragment).replace(l.PCT_ENCODED,e).replace(l.NOT_FRAGMENT,k).replace(l.PCT_ENCODED,u)),n}function I(n){return n.replace(/^0*(.*)/,"$1")||"0"}function N(n,l){var e=n.match(l.IPV4ADDRESS)||[],t=a(e,2),u=t[1];return u?u.split(".").map(I).join("."):n}function D(n,l){var e=n.match(l.IPV6ADDRESS)||[],t=a(e,3),u=t[1],r=t[2];if(u){for(var i=u.toLowerCase().split("::").reverse(),o=a(i,2),s=o[0],c=o[1],h=c?c.split(":").map(I):[],d=s.split(":").map(I),f=l.IPV4ADDRESS.test(d[d.length-1]),p=f?7:8,g=d.length-p,v=Array(p),y=0;y<p;++y)v[y]=h[y]||d[g+y]||"";f&&(v[p-1]=N(v[p-1],l));var m=v.reduce(function(n,l,e){if(!l||"0"===l){var t=n[n.length-1];t&&t.index+t.length===e?t.length++:n.push({index:e,length:1})}return n},[]),b=m.sort(function(n,l){return l.length-n.length})[0],w=void 0;if(b&&b.length>1){var _=v.slice(0,b.index),x=v.slice(b.index+b.length);w=_.join(":")+"::"+x.join(":")}else w=v.join(":");return r&&(w+="%"+r),w}return n}var O=/^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i,A=void 0==="".match(/(){0}/)[1];function P(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e={},t=!1!==l.iri?o:i;"suffix"===l.reference&&(n=(l.scheme?l.scheme+":":"")+"//"+n);var u=n.match(O);if(u){A?(e.scheme=u[1],e.userinfo=u[3],e.host=u[4],e.port=parseInt(u[5],10),e.path=u[6]||"",e.query=u[7],e.fragment=u[8],isNaN(e.port)&&(e.port=u[5])):(e.scheme=u[1]||void 0,e.userinfo=-1!==n.indexOf("@")?u[3]:void 0,e.host=-1!==n.indexOf("//")?u[4]:void 0,e.port=parseInt(u[5],10),e.path=u[6]||"",e.query=-1!==n.indexOf("?")?u[7]:void 0,e.fragment=-1!==n.indexOf("#")?u[8]:void 0,isNaN(e.port)&&(e.port=n.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?u[4]:void 0)),e.host&&(e.host=D(N(e.host,t),t)),void 0!==e.scheme||void 0!==e.userinfo||void 0!==e.host||void 0!==e.port||e.path||void 0!==e.query?void 0===e.scheme?e.reference="relative":void 0===e.fragment?e.reference="absolute":e.reference="uri":e.reference="same-document",l.reference&&"suffix"!==l.reference&&l.reference!==e.reference&&(e.error=e.error||"URI is not a "+l.reference+" reference.");var r=T[(l.scheme||e.scheme||"").toLowerCase()];if(l.unicodeSupport||r&&r.unicodeSupport)S(e,t);else{if(e.host&&(l.domainHost||r&&r.domainHost))try{e.host=E.toASCII(e.host.replace(t.PCT_ENCODED,C).toLowerCase())}catch(n){e.error=e.error||"Host's domain name can not be converted to ASCII via punycode: "+n}S(e,i)}r&&r.parse&&r.parse(e,l)}else e.error=e.error||"URI can not be parsed.";return e}var M=/^\.\.?\//,L=/^\/\.(\/|$)/,R=/^\/\.\.(\/|$)/,F=/^\/?(?:.|\n)*?(?=\/|$)/;function B(n){for(var l=[];n.length;)if(n.match(M))n=n.replace(M,"");else if(n.match(L))n=n.replace(L,"/");else if(n.match(R))n=n.replace(R,"/"),l.pop();else if("."===n||".."===n)n="";else{var e=n.match(F);if(!e)throw new Error("Unexpected dot segment condition");var t=e[0];n=n.slice(t.length),l.push(t)}return l.join("")}function j(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=l.iri?o:i,t=[],u=T[(l.scheme||n.scheme||"").toLowerCase()];if(u&&u.serialize&&u.serialize(n,l),n.host)if(e.IPV6ADDRESS.test(n.host));else if(l.domainHost||u&&u.domainHost)try{n.host=l.iri?E.toUnicode(n.host):E.toASCII(n.host.replace(e.PCT_ENCODED,C).toLowerCase())}catch(e){n.error=n.error||"Host's domain name can not be converted to "+(l.iri?"Unicode":"ASCII")+" via punycode: "+e}S(n,e),"suffix"!==l.reference&&n.scheme&&(t.push(n.scheme),t.push(":"));var r=function(n,l){var e=!1!==l.iri?o:i,t=[];return void 0!==n.userinfo&&(t.push(n.userinfo),t.push("@")),void 0!==n.host&&t.push(D(N(String(n.host),e),e).replace(e.IPV6ADDRESS,function(n,l,e){return"["+l+(e?"%25"+e:"")+"]"})),"number"==typeof n.port&&(t.push(":"),t.push(n.port.toString(10))),t.length?t.join(""):void 0}(n,l);if(void 0!==r&&("suffix"!==l.reference&&t.push("//"),t.push(r),n.path&&"/"!==n.path.charAt(0)&&t.push("/")),void 0!==n.path){var a=n.path;l.absolutePath||u&&u.absolutePath||(a=B(a)),void 0===r&&(a=a.replace(/^\/\//,"/%2F")),t.push(a)}return void 0!==n.query&&(t.push("?"),t.push(n.query)),void 0!==n.fragment&&(t.push("#"),t.push(n.fragment)),t.join("")}function U(n,l){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},t=arguments[3],u={};return t||(n=P(j(n,e),e),l=P(j(l,e),e)),!(e=e||{}).tolerant&&l.scheme?(u.scheme=l.scheme,u.userinfo=l.userinfo,u.host=l.host,u.port=l.port,u.path=B(l.path||""),u.query=l.query):(void 0!==l.userinfo||void 0!==l.host||void 0!==l.port?(u.userinfo=l.userinfo,u.host=l.host,u.port=l.port,u.path=B(l.path||""),u.query=l.query):(l.path?("/"===l.path.charAt(0)?u.path=B(l.path):(void 0===n.userinfo&&void 0===n.host&&void 0===n.port||n.path?n.path?u.path=n.path.slice(0,n.path.lastIndexOf("/")+1)+l.path:u.path=l.path:u.path="/"+l.path,u.path=B(u.path)),u.query=l.query):(u.path=n.path,void 0!==l.query?u.query=l.query:u.query=n.query),u.userinfo=n.userinfo,u.host=n.host,u.port=n.port),u.scheme=n.scheme),u.fragment=l.fragment,u}function z(n,l){return n&&n.toString().replace(l&&l.iri?o.PCT_ENCODED:i.PCT_ENCODED,C)}var q={scheme:"http",domainHost:!0,parse:function(n,l){return n.host||(n.error=n.error||"HTTP URIs must have a host."),n},serialize:function(n,l){return n.port!==("https"!==String(n.scheme).toLowerCase()?80:443)&&""!==n.port||(n.port=void 0),n.path||(n.path="/"),n}},V={scheme:"https",domainHost:q.domainHost,parse:q.parse,serialize:q.serialize},H={},G="[A-Za-z0-9\\-\\.\\_\\~\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]",Y="[0-9A-Fa-f]",W=e(e("%[EFef][0-9A-Fa-f]%"+Y+Y+"%"+Y+Y)+"|"+e("%[89A-Fa-f][0-9A-Fa-f]%"+Y+Y)+"|"+e("%"+Y+Y)),X=l("[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]",'[\\"\\\\]'),K=new RegExp(G,"g"),$=new RegExp(W,"g"),Z=new RegExp(l("[^]","[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]","[\\.]",'[\\"]',X),"g"),Q=new RegExp(l("[^]",G,"[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]"),"g"),J=Q;function nn(n){var l=C(n);return l.match(K)?l:n}var ln={scheme:"mailto",parse:function(n,l){var e=n,t=e.to=e.path?e.path.split(","):[];if(e.path=void 0,e.query){for(var u=!1,r={},i=e.query.split("&"),o=0,a=i.length;o<a;++o){var s=i[o].split("=");switch(s[0]){case"to":for(var c=s[1].split(","),h=0,d=c.length;h<d;++h)t.push(c[h]);break;case"subject":e.subject=z(s[1],l);break;case"body":e.body=z(s[1],l);break;default:u=!0,r[z(s[0],l)]=z(s[1],l)}}u&&(e.headers=r)}e.query=void 0;for(var f=0,p=t.length;f<p;++f){var g=t[f].split("@");if(g[0]=z(g[0]),l.unicodeSupport)g[1]=z(g[1],l).toLowerCase();else try{g[1]=E.toASCII(z(g[1],l).toLowerCase())}catch(n){e.error=e.error||"Email address's domain name can not be converted to ASCII via punycode: "+n}t[f]=g.join("@")}return e},serialize:function(n,l){var e,t=n,r=null!=(e=n.to)?e instanceof Array?e:"number"!=typeof e.length||e.split||e.setInterval||e.call?[e]:Array.prototype.slice.call(e):[];if(r){for(var i=0,o=r.length;i<o;++i){var a=String(r[i]),s=a.lastIndexOf("@"),c=a.slice(0,s).replace($,nn).replace($,u).replace(Z,k),h=a.slice(s+1);try{h=l.iri?E.toUnicode(h):E.toASCII(z(h,l).toLowerCase())}catch(n){t.error=t.error||"Email address's domain name can not be converted to "+(l.iri?"Unicode":"ASCII")+" via punycode: "+n}r[i]=c+"@"+h}t.path=r.join(",")}var d=n.headers=n.headers||{};n.subject&&(d.subject=n.subject),n.body&&(d.body=n.body);var f=[];for(var p in d)d[p]!==H[p]&&f.push(p.replace($,nn).replace($,u).replace(Q,k)+"="+d[p].replace($,nn).replace($,u).replace(J,k));return f.length&&(t.query=f.join("&")),t}},en=/^([^\:]+)\:(.*)/,tn={scheme:"urn",parse:function(n,l){var e=n.path&&n.path.match(en),t=n;if(e){var u=l.scheme||t.scheme||"urn",r=e[1].toLowerCase(),i=e[2],o=u+":"+(l.nid||r),a=T[o];t.nid=r,t.nss=i,t.path=void 0,a&&(t=a.parse(t,l))}else t.error=t.error||"URN can not be parsed.";return t},serialize:function(n,l){var e=l.scheme||n.scheme||"urn",t=n.nid,u=e+":"+(l.nid||t),r=T[u];r&&(n=r.serialize(n,l));var i=n,o=n.nss;return i.path=(t||l.nid)+":"+o,i}},un=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/,rn={scheme:"urn:uuid",parse:function(n,l){var e=n;return e.uuid=e.nss,e.nss=void 0,l.tolerant||e.uuid&&e.uuid.match(un)||(e.error=e.error||"UUID is not valid."),e},serialize:function(n,l){var e=n;return e.nss=(n.uuid||"").toLowerCase(),e}};T[q.scheme]=q,T[V.scheme]=V,T[ln.scheme]=ln,T[tn.scheme]=tn,T[rn.scheme]=rn,n.SCHEMES=T,n.pctEncChar=k,n.pctDecChars=C,n.parse=P,n.removeDotSegments=B,n.serialize=j,n.resolveComponents=U,n.resolve=function(n,l,e){var t=function(n,l){var e=n;if(l)for(var t in l)e[t]=l[t];return e}({scheme:"null"},e);return j(U(P(n,t),P(l,t),t,!0),t)},n.normalize=function(n,l){return"string"==typeof n?n=j(P(n,l),l):"object"===t(n)&&(n=P(j(n,l),l)),n},n.equal=function(n,l,e){return"string"==typeof n?n=j(P(n,e),e):"object"===t(n)&&(n=j(n,e)),"string"==typeof l?l=j(P(l,e),e):"object"===t(l)&&(l=j(l,e)),n===l},n.escapeComponent=function(n,l){return n&&n.toString().replace(l&&l.iri?o.ESCAPE:i.ESCAPE,k)},n.unescapeComponent=z,Object.defineProperty(n,"__esModule",{value:!0})}(l)},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(0)),u=c(e(1)),r=e(30),i=e(3),o=c(e(110)),a=c(e(112)),s=c(e(215));function c(n){return n&&n.__esModule?n:{default:n}}var h=1616949271,d=function(){function n(l,e,u,r,i){(0,t.default)(this,n),this._connection=l,this._channel=e,this._chunker=u,this._disableLosslessIntegers=r,this._log=i}return(0,u.default)(n,[{key:"writeHandshakeRequest",value:function(){var n;this._channel.write(((n=(0,r.alloc)(20)).writeInt32(h),n.writeInt32(3),n.writeInt32(2),n.writeInt32(1),n.writeInt32(0),n.reset(),n))}},{key:"createNegotiatedProtocol",value:function(n){var l=n.readInt32();return this._log.isDebugEnabled()&&this._log.debug(this._connection+" negotiated protocol version "+l),this._createProtocolWithVersion(l)}},{key:"_createProtocolWithVersion",value:function(n){switch(n){case 1:return new o.default(this._connection,this._chunker,this._disableLosslessIntegers);case 2:return new a.default(this._connection,this._chunker,this._disableLosslessIntegers);case 3:return new s.default(this._connection,this._chunker,this._disableLosslessIntegers);case 1213486160:throw(0,i.newError)("Server responded HTTP. Make sure you are not trying to connect to the http endpoint (HTTP defaults to port 7474 whereas BOLT defaults to port 7687)");default:throw(0,i.newError)("Unknown Bolt protocol version: "+n)}}}]),n}();l.default=d},function(n,l,e){e(26),e(199),n.exports=e(2).Array.from},function(n,l,e){"use strict";var t=e(17),u=e(7),r=e(25),i=e(93),o=e(94),a=e(48),s=e(200),c=e(72);u(u.S+u.F*!e(100)(function(n){Array.from(n)}),"Array",{from:function(n){var l,e,u,h,d=r(n),f="function"==typeof this?this:Array,p=arguments.length,g=p>1?arguments[1]:void 0,v=void 0!==g,y=0,m=c(d);if(v&&(g=t(g,p>2?arguments[2]:void 0,2)),null==m||f==Array&&o(m))for(e=new f(l=a(d.length));l>y;y++)s(e,y,v?g(d[y],y):d[y]);else for(h=m.call(d),e=new f;!(u=h.next()).done;y++)s(e,y,v?i(h,g,[u.value,y],!0):u.value);return e.length=y,e}})},function(n,l,e){"use strict";var t=e(14),u=e(32);n.exports=function(n,l,e){l in n?t.f(n,l,u(0,e)):n[l]=e}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.Unpacker=l.Packer=void 0;var t=v(e(80)),u=v(e(92)),r=v(e(4)),i=v(e(0)),o=v(e(1)),a=v(e(5)),s=v(e(53)),c=v(e(6)),h=function(n){if(n&&n.__esModule)return n;var l={};if(null!=n)for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(l[e]=n[e]);return l.default=n,l}(e(111)),d=e(81),f=e(55),p=e(13),g=e(113);function v(n){return n&&n.__esModule?n:{default:n}}var y=88,m=3,b=89,w=4,_=69,x=4,E=116,T=1,k=84,C=2,S=68,I=1,N=100,D=2,O=70,A=3,P=102,M=3;l.Packer=function(n){function l(n){return(0,i.default)(this,l),(0,a.default)(this,(l.__proto__||(0,r.default)(l)).call(this,n))}return(0,c.default)(l,n),(0,o.default)(l,[{key:"disableByteArrays",value:function(){throw new Error("Bolt V2 should always support byte arrays")}},{key:"packable",value:function(n,e){var t=this;return(0,d.isPoint)(n)?function(){return function(n,l,e){null===n.z||void 0===n.z?function(n,l,e){var t=[l.packable((0,p.int)(n.srid),e),l.packable(n.x,e),l.packable(n.y,e)];l.packStruct(y,t,e)}(n,l,e):function(n,l,e){var t=[l.packable((0,p.int)(n.srid),e),l.packable(n.x,e),l.packable(n.y,e),l.packable(n.z,e)];l.packStruct(b,t,e)}(n,l,e)}(n,t,e)}:(0,f.isDuration)(n)?function(){return function(n,l,e){var t=(0,p.int)(n.months),u=(0,p.int)(n.days),r=(0,p.int)(n.seconds),i=(0,p.int)(n.nanoseconds),o=[l.packable(t,e),l.packable(u,e),l.packable(r,e),l.packable(i,e)];l.packStruct(_,o,e)}(n,t,e)}:(0,f.isLocalTime)(n)?function(){return function(n,l,e){var t=(0,g.localTimeToNanoOfDay)(n.hour,n.minute,n.second,n.nanosecond),u=[l.packable(t,e)];l.packStruct(E,u,e)}(n,t,e)}:(0,f.isTime)(n)?function(){return function(n,l,e){var t=(0,g.localTimeToNanoOfDay)(n.hour,n.minute,n.second,n.nanosecond),u=(0,p.int)(n.timeZoneOffsetSeconds),r=[l.packable(t,e),l.packable(u,e)];l.packStruct(k,r,e)}(n,t,e)}:(0,f.isDate)(n)?function(){return function(n,l,e){var t=(0,g.dateToEpochDay)(n.year,n.month,n.day),u=[l.packable(t,e)];l.packStruct(S,u,e)}(n,t,e)}:(0,f.isLocalDateTime)(n)?function(){return function(n,l,e){var t=(0,g.localDateTimeToEpochSecond)(n.year,n.month,n.day,n.hour,n.minute,n.second,n.nanosecond),u=(0,p.int)(n.nanosecond),r=[l.packable(t,e),l.packable(u,e)];l.packStruct(N,r,e)}(n,t,e)}:(0,f.isDateTime)(n)?function(){return function(n,l,e){n.timeZoneId?function(n,l,e){var t=(0,g.localDateTimeToEpochSecond)(n.year,n.month,n.day,n.hour,n.minute,n.second,n.nanosecond),u=(0,p.int)(n.nanosecond),r=n.timeZoneId,i=[l.packable(t,e),l.packable(u,e),l.packable(r,e)];l.packStruct(P,i,e)}(n,l,e):function(n,l,e){var t=(0,g.localDateTimeToEpochSecond)(n.year,n.month,n.day,n.hour,n.minute,n.second,n.nanosecond),u=(0,p.int)(n.nanosecond),r=(0,p.int)(n.timeZoneOffsetSeconds),i=[l.packable(t,e),l.packable(u,e),l.packable(r,e)];l.packStruct(O,i,e)}(n,l,e)}(n,t,e)}:(0,s.default)(l.prototype.__proto__||(0,r.default)(l.prototype),"packable",this).call(this,n,e)}}]),l}(h.Packer),l.Unpacker=function(n){function l(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(0,i.default)(this,l),(0,a.default)(this,(l.__proto__||(0,r.default)(l)).call(this,n))}return(0,c.default)(l,n),(0,o.default)(l,[{key:"_unpackUnknownStruct",value:function(n,e,t){return n==y?function(n,l,e){return n._verifyStructSize("Point2D",m,l),new d.Point(n.unpack(e),n.unpack(e),n.unpack(e),void 0)}(this,e,t):n==b?function(n,l,e){return n._verifyStructSize("Point3D",w,l),new d.Point(n.unpack(e),n.unpack(e),n.unpack(e),n.unpack(e))}(this,e,t):n==_?function(n,l,e){n._verifyStructSize("Duration",x,l);var t=n.unpack(e),u=n.unpack(e),r=n.unpack(e),i=n.unpack(e);return new f.Duration(t,u,r,i)}(this,e,t):n==E?function(n,l,e,t){n._verifyStructSize("LocalTime",T,l);var u=n.unpackInteger(e);return L((0,g.nanoOfDayToLocalTime)(u),t)}(this,e,t,this._disableLosslessIntegers):n==k?function(n,l,e,t){n._verifyStructSize("Time",C,l);var u=n.unpackInteger(e),r=n.unpackInteger(e),i=(0,g.nanoOfDayToLocalTime)(u);return L(new f.Time(i.hour,i.minute,i.second,i.nanosecond,r),t)}(this,e,t,this._disableLosslessIntegers):n==S?function(n,l,e,t){n._verifyStructSize("Date",I,l);var u=n.unpackInteger(e);return L((0,g.epochDayToDate)(u),t)}(this,e,t,this._disableLosslessIntegers):n==N?function(n,l,e,t){n._verifyStructSize("LocalDateTime",D,l);var u=n.unpackInteger(e),r=n.unpackInteger(e);return L((0,g.epochSecondAndNanoToLocalDateTime)(u,r),t)}(this,e,t,this._disableLosslessIntegers):n==O?function(n,l,e,t){n._verifyStructSize("DateTimeWithZoneOffset",A,l);var u=n.unpackInteger(e),r=n.unpackInteger(e),i=n.unpackInteger(e),o=(0,g.epochSecondAndNanoToLocalDateTime)(u,r);return L(new f.DateTime(o.year,o.month,o.day,o.hour,o.minute,o.second,o.nanosecond,i,null),t)}(this,e,t,this._disableLosslessIntegers):n==P?function(n,l,e,t){n._verifyStructSize("DateTimeWithZoneId",M,l);var u=n.unpackInteger(e),r=n.unpackInteger(e),i=n.unpack(e),o=(0,g.epochSecondAndNanoToLocalDateTime)(u,r);return L(new f.DateTime(o.year,o.month,o.day,o.hour,o.minute,o.second,o.nanosecond,null,i),t)}(this,e,t,this._disableLosslessIntegers):(0,s.default)(l.prototype.__proto__||(0,r.default)(l.prototype),"_unpackUnknownStruct",this).call(this,n,e,t,this._disableLosslessIntegers)}}]),l}(h.Unpacker);function L(n,l){if(!l)return n;var e=(0,u.default)((0,r.default)(n));for(var i in n)if(n.hasOwnProperty(i)){var o=n[i];e[i]=(0,p.isInt)(o)?o.toNumberOrInfinity():o}return(0,t.default)(e),e}},function(n,l,e){e(203),n.exports=e(2).Object.freeze},function(n,l,e){var t=e(10),u=e(49).onFreeze;e(46)("freeze",function(n){return function(l){return n&&t(l)?n(u(l)):l}})},function(n,l,e){n.exports={default:e(205),__esModule:!0}},function(n,l,e){e(206),n.exports=e(2).Number.isInteger},function(n,l,e){var t=e(7);t(t.S,"Number",{isInteger:e(207)})},function(n,l,e){var t=e(10),u=Math.floor;n.exports=function(n){return!t(n)&&isFinite(n)&&u(n)===n}},function(n,l,e){"use strict";l.__esModule=!0;var t=r(e(209)),u=r(e(212));function r(n){return n&&n.__esModule?n:{default:n}}l.default=function(){return function(n,l){if(Array.isArray(n))return n;if((0,t.default)(Object(n)))return function(n,l){var e=[],t=!0,r=!1,i=void 0;try{for(var o,a=(0,u.default)(n);!(t=(o=a.next()).done)&&(e.push(o.value),!l||e.length!==l);t=!0);}catch(n){r=!0,i=n}finally{try{!t&&a.return&&a.return()}finally{if(r)throw i}}return e}(n,l);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()},function(n,l,e){n.exports={default:e(210),__esModule:!0}},function(n,l,e){e(37),e(26),n.exports=e(211)},function(n,l,e){var t=e(51),u=e(9)("iterator"),r=e(27);n.exports=e(2).isIterable=function(n){var l=Object(n);return void 0!==l[u]||"@@iterator"in l||r.hasOwnProperty(t(l))}},function(n,l,e){n.exports={default:e(213),__esModule:!0}},function(n,l,e){e(37),e(26),n.exports=e(214)},function(n,l,e){var t=e(15),u=e(72);n.exports=e(2).getIterator=function(n){var l=u(n);if("function"!=typeof l)throw TypeError(n+" is not iterable!");return t(l.call(n))}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(4)),u=c(e(0)),r=c(e(1)),i=c(e(5)),o=c(e(6)),a=c(e(112)),s=c(e(79));function c(n){return n&&n.__esModule?n:{default:n}}var h=function(n){function l(n,e,r){return(0,u.default)(this,l),(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,n,e,r))}return(0,o.default)(l,n),(0,r.default)(l,[{key:"transformMetadata",value:function(n){return n.t_first&&(n.result_available_after=n.t_first,delete n.t_first),n.t_last&&(n.result_consumed_after=n.t_last,delete n.t_last),n}},{key:"initialize",value:function(n,l,e){d(e);var t=s.default.hello(n,l);this._connection.write(t,e,!0)}},{key:"prepareToClose",value:function(n){var l=s.default.goodbye();this._connection.write(l,n,!0)}},{key:"beginTransaction",value:function(n,l,e){d(e);var t=s.default.begin(n,l);this._connection.write(t,e,!0)}},{key:"commitTransaction",value:function(n){d(n);var l=s.default.commit();this._connection.write(l,n,!0)}},{key:"rollbackTransaction",value:function(n){d(n);var l=s.default.rollback();this._connection.write(l,n,!0)}},{key:"run",value:function(n,l,e,t,u){var r=s.default.runWithMetadata(n,l,e,t),i=s.default.pullAll();this._connection.write(r,u,!1),this._connection.write(i,u,!0)}}]),l}(a.default);function d(n){n&&"function"==typeof n.prepareToHandleSingleResponse&&n.prepareToHandleSingleResponse()}l.default=h},function(n,l,e){e(69),e(26),e(37),e(217),e(223),e(226),e(228),n.exports=e(2).Set},function(n,l,e){"use strict";var t=e(218),u=e(118);n.exports=e(219)("Set",function(n){return function(){return n(this,arguments.length>0?arguments[0]:void 0)}},{add:function(n){return t.def(u(this,"Set"),n=0===n?0:n,n)}},t)},function(n,l,e){"use strict";var t=e(14).f,u=e(47),r=e(74),i=e(17),o=e(71),a=e(39),s=e(62),c=e(89),h=e(99),d=e(16),f=e(49).fastKey,p=e(118),g=d?"_s":"size",v=function(n,l){var e,t=f(l);if("F"!==t)return n._i[t];for(e=n._f;e;e=e.n)if(e.k==l)return e};n.exports={getConstructor:function(n,l,e,s){var c=n(function(n,t){o(n,c,l,"_i"),n._t=l,n._i=u(null),n._f=void 0,n._l=void 0,n[g]=0,null!=t&&a(t,e,n[s],n)});return r(c.prototype,{clear:function(){for(var n=p(this,l),e=n._i,t=n._f;t;t=t.n)t.r=!0,t.p&&(t.p=t.p.n=void 0),delete e[t.i];n._f=n._l=void 0,n[g]=0},delete:function(n){var e=p(this,l),t=v(e,n);if(t){var u=t.n,r=t.p;delete e._i[t.i],t.r=!0,r&&(r.n=u),u&&(u.p=r),e._f==t&&(e._f=u),e._l==t&&(e._l=r),e[g]--}return!!t},forEach:function(n){p(this,l);for(var e,t=i(n,arguments.length>1?arguments[1]:void 0,3);e=e?e.n:this._f;)for(t(e.v,e.k,this);e&&e.r;)e=e.p},has:function(n){return!!v(p(this,l),n)}}),d&&t(c.prototype,"size",{get:function(){return p(this,l)[g]}}),c},def:function(n,l,e){var t,u,r=v(n,l);return r?r.v=e:(n._l=r={i:u=f(l,!0),k:l,v:e,p:t=n._l,n:void 0,r:!1},n._f||(n._f=r),t&&(t.n=r),n[g]++,"F"!==u&&(n._i[u]=r)),n},getEntry:v,setStrong:function(n,l,e){s(n,l,function(n,e){this._t=p(n,l),this._k=e,this._l=void 0},function(){for(var n=this._k,l=this._l;l&&l.r;)l=l.p;return this._t&&(this._l=l=l?l.n:this._t._f)?c(0,"keys"==n?l.k:"values"==n?l.v:[l.k,l.v]):(this._t=void 0,c(1))},e?"entries":"values",!e,!0),h(l)}}},function(n,l,e){"use strict";var t=e(8),u=e(7),r=e(49),i=e(22),o=e(18),a=e(74),s=e(39),c=e(71),h=e(10),d=e(36),f=e(14).f,p=e(220)(0),g=e(16);n.exports=function(n,l,e,v,y,m){var b=t[n],w=b,_=y?"set":"add",x=w&&w.prototype,E={};return g&&"function"==typeof w&&(m||x.forEach&&!i(function(){(new w).entries().next()}))?(w=l(function(l,e){c(l,w,n,"_c"),l._c=new b,null!=e&&s(e,y,l[_],l)}),p("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","),function(n){var l="add"==n||"set"==n;n in x&&(!m||"clear"!=n)&&o(w.prototype,n,function(e,t){if(c(this,w,n),!l&&m&&!h(e))return"get"==n&&void 0;var u=this._c[n](0===e?0:e,t);return l?this:u})}),m||f(w.prototype,"size",{get:function(){return this._c.size}})):(w=v.getConstructor(l,n,y,_),a(w.prototype,e),r.NEED=!0),d(w,n),E[n]=w,u(u.G+u.W+u.F,E),m||v.setStrong(w,n,y),w}},function(n,l,e){var t=e(17),u=e(63),r=e(25),i=e(48),o=e(221);n.exports=function(n,l){var e=1==n,a=2==n,s=3==n,c=4==n,h=6==n,d=5==n||h,f=l||o;return function(l,o,p){for(var g,v,y=r(l),m=u(y),b=t(o,p,3),w=i(m.length),_=0,x=e?f(l,w):a?f(l,0):void 0;w>_;_++)if((d||_ in m)&&(v=b(g=m[_],_,y),n))if(e)x[_]=v;else if(v)switch(n){case 3:return!0;case 5:return g;case 6:return _;case 2:x.push(g)}else if(c)return!1;return h?-1:s||c?c:x}}},function(n,l,e){var t=e(222);n.exports=function(n,l){return new(t(n))(l)}},function(n,l,e){var t=e(10),u=e(90),r=e(9)("species");n.exports=function(n){var l;return u(n)&&("function"!=typeof(l=n.constructor)||l!==Array&&!u(l.prototype)||(l=void 0),t(l)&&null===(l=l[r])&&(l=void 0)),void 0===l?Array:l}},function(n,l,e){var t=e(7);t(t.P+t.R,"Set",{toJSON:e(224)("Set")})},function(n,l,e){var t=e(51),u=e(225);n.exports=function(n){return function(){if(t(this)!=n)throw TypeError(n+"#toJSON isn't generic");return u(this)}}},function(n,l,e){var t=e(39);n.exports=function(n,l){var e=[];return t(n,!1,e.push,e,l),e}},function(n,l,e){e(227)("Set")},function(n,l,e){"use strict";var t=e(7);n.exports=function(n){t(t.S,n,{of:function(){for(var n=arguments.length,l=new Array(n);n--;)l[n]=arguments[n];return new this(l)}})}},function(n,l,e){e(229)("Set")},function(n,l,e){"use strict";var t=e(7),u=e(31),r=e(17),i=e(39);n.exports=function(n){t(t.S,n,{from:function(n){var l,e,t,o,a=arguments[1];return u(this),(l=void 0!==a)&&u(a),null==n?new this:(e=[],l?(t=0,o=r(a,arguments[2],2),i(n,!1,function(n){e.push(o(n,t++))})):i(n,!1,e.push,e),new this(e))}})}},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(20)),u=a(e(0)),r=a(e(1)),i=a(e(115)),o=e(3);function a(n){return n&&n.__esModule?n:{default:n}}var s=function(){function n(l){(0,u.default)(this,n),this._routingUtil=l}return(0,r.default)(n,[{key:"lookupRoutingTableOnRouter",value:function(l,e){var u=this;return this._routingUtil.callRoutingProcedure(l,e).then(function(l){if(null===l)return null;if(1!==l.length)throw(0,o.newError)('Illegal response from router "'+e+'". Received '+l.length+" records but expected only one.\n"+(0,t.default)(l),o.PROTOCOL_ERROR);var r=l[0],a=u._routingUtil.parseTtl(r,e),s=u._routingUtil.parseServers(r,e),c=s.routers,h=s.readers,d=s.writers;return n._assertNonEmpty(c,"routers",e),n._assertNonEmpty(h,"readers",e),new i.default(c,h,d,a)})}}],[{key:"_assertNonEmpty",value:function(n,l,e){if(0===n.length)throw(0,o.newError)("Received no "+l+" from router "+e,o.PROTOCOL_ERROR)}}]),n}();l.default=s},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=f(e(42)),u=f(e(20)),r=f(e(0)),i=f(e(1)),o=e(3),a=e(13),s=f(a),c=e(109),h=f(e(41)),d=f(e(54));function f(n){return n&&n.__esModule?n:{default:n}}var p=function(){function n(l){(0,r.default)(this,n),this._routingContext=l}return(0,i.default)(n,[{key:"callRoutingProcedure",value:function(n,l){return this._callAvailableRoutingProcedure(n).then(function(l){return n.close(),l.records}).catch(function(n){if("Neo.ClientError.Procedure.ProcedureNotFound"===n.code)throw(0,o.newError)("Server at "+l+" can't perform routing. Make sure you are connecting to a causal cluster",o.SERVICE_UNAVAILABLE);return null})}},{key:"parseTtl",value:function(n,l){try{var e=(0,a.int)(Date.now()),t=(0,a.int)(n.get("ttl")).multiply(1e3).add(e);return t.lessThan(e)?s.default.MAX_VALUE:t}catch(e){throw(0,o.newError)("Unable to parse TTL entry from router "+l+" from record:\n"+(0,u.default)(n)+"\nError message: "+e.message,o.PROTOCOL_ERROR)}}},{key:"parseServers",value:function(n,l){try{var e=n.get("servers"),t=[],r=[],i=[];return e.forEach(function(n){var l=n.role,e=n.addresses;if("ROUTE"===l)t=g(e);else if("WRITE"===l)i=g(e);else{if("READ"!==l)throw(0,o.newError)('Unknown server role "'+l+'"',o.PROTOCOL_ERROR);r=g(e)}}),{routers:t,readers:r,writers:i}}catch(e){throw(0,o.newError)("Unable to parse servers entry from router "+l+" from record:\n"+(0,u.default)(n)+"\nError message: "+e.message,o.PROTOCOL_ERROR)}}},{key:"_callAvailableRoutingProcedure",value:function(n){var l=this;return n._run(null,null,function(n,e){var t=n.server.version,u=void 0,r=void 0;c.ServerVersion.fromString(t).compareTo(c.VERSION_3_2_0)>=0?(u="CALL dbms.cluster.routing.getRoutingTable($context)",r={context:l._routingContext}):(u="CALL dbms.cluster.routing.getServers",r={}),n.protocol().run(u,r,h.default.empty(),d.default.empty(),e)})}}]),n}();function g(n){if(!Array.isArray(n))throw new TypeError("Array expected but got: "+n);return(0,t.default)(n)}l.default=p},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=s(e(12)),u=s(e(0)),r=s(e(1)),i=s(e(40)),o=e(21),a=s(e(29));function s(n){return n&&n.__esModule?n:{default:n}}var c=function(){function n(l,e){(0,u.default)(this,n),this._connectionProvider=l,this._successCallback=e}return(0,r.default)(n,[{key:"verify",value:function(){var n=this;(function(n){var l=new i.default(o.READ,n);l.initializeConnection();var e=new a.default;return l.getConnection(e).then(function(n){return l.close().then(function(){return n.server})}).catch(function(n){return l.close().catch(function(n){}).then(function(){return t.default.reject(n)})})})(this._connectionProvider).then(function(l){n._successCallback&&n._successCallback(l)}).catch(function(n){})}}]),n}();l.default=c},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=m(e(4)),u=m(e(0)),r=m(e(1)),i=m(e(5)),o=m(e(6)),a=e(21),s=e(3),c=e(114),h=e(234),d=m(h),f=e(235),p=m(f),g=m(e(119)),v=m(e(236)),y=e(30);function m(n){return n&&n.__esModule?n:{default:n}}var b=function(n){function l(n,e,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};(0,u.default)(this,l);var c=(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,n,r,o,function(n){if("TRUST_ON_FIRST_USE"===n.trust)throw(0,s.newError)("The chosen trust mode is not compatible with a routing driver");var l=n.resolver;if(l&&"function"!=typeof l)throw new TypeError("Configured resolver should be a function. Got: "+l);return n}(a)));return c._routingContext=e,c}return(0,o.default)(l,n),(0,r.default)(l,[{key:"_afterConstruction",value:function(){this._log.info("Routing driver "+this._id+" created for server address "+this._hostPort)}},{key:"_createConnectionProvider",value:function(n,e,t){var u=l._createLoadBalancingStrategy(this._config,e),r=function(n){if(n.resolver)return new v.default(n.resolver);return new y.HostNameResolver}(this._config);return new c.LoadBalancer(n,this._routingContext,e,u,r,t,this._log)}},{key:"_createConnectionErrorHandler",value:function(){var n=this;return new g.default(s.SESSION_EXPIRED,function(l,e){return n._handleUnavailability(l,e)},function(l,e){return n._handleWriteFailure(l,e)})}},{key:"_handleUnavailability",value:function(n,l){return this._log.warn("Routing driver "+this._id+" will forget "+l+" because of an error "+n.code+" '"+n.message+"'"),this._connectionProvider.forget(l),n}},{key:"_handleWriteFailure",value:function(n,l){return this._log.warn("Routing driver "+this._id+" will forget writer "+l+" because of an error "+n.code+" '"+n.message+"'"),this._connectionProvider.forgetWriter(l),(0,s.newError)("No longer possible to write to server at "+l,s.SESSION_EXPIRED)}}],[{key:"_createLoadBalancingStrategy",value:function(n,l){var e=n.loadBalancingStrategy;if(e&&e!==h.LEAST_CONNECTED_STRATEGY_NAME){if(e===f.ROUND_ROBIN_STRATEGY_NAME)return new p.default;throw(0,s.newError)("Unknown load balancing strategy: "+e)}return new d.default(l)}}]),l}(a.Driver);l.default=b},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.LEAST_CONNECTED_STRATEGY_NAME=void 0;var t=h(e(52)),u=h(e(4)),r=h(e(0)),i=h(e(1)),o=h(e(5)),a=h(e(6)),s=h(e(120)),c=h(e(121));function h(n){return n&&n.__esModule?n:{default:n}}l.LEAST_CONNECTED_STRATEGY_NAME="least_connected";var d=function(n){function l(n){(0,r.default)(this,l);var e=(0,o.default)(this,(l.__proto__||(0,u.default)(l)).call(this));return e._readersIndex=new s.default,e._writersIndex=new s.default,e._connectionPool=n,e}return(0,a.default)(l,n),(0,i.default)(l,[{key:"selectReader",value:function(n){return this._select(n,this._readersIndex)}},{key:"selectWriter",value:function(n){return this._select(n,this._writersIndex)}},{key:"_select",value:function(n,l){var e=n.length;if(0===e)return null;var u=l.next(e),r=u,i=null,o=t.default;do{var a=n[r],s=this._connectionPool.activeResourceCount(a);s<o&&(i=a,o=s),r===e-1?r=0:r++}while(r!==u);return i}}]),l}(c.default);l.default=d},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.ROUND_ROBIN_STRATEGY_NAME=void 0;var t=c(e(4)),u=c(e(0)),r=c(e(1)),i=c(e(5)),o=c(e(6)),a=c(e(120)),s=c(e(121));function c(n){return n&&n.__esModule?n:{default:n}}l.ROUND_ROBIN_STRATEGY_NAME="round_robin";var h=function(n){function l(){(0,u.default)(this,l);var n=(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this));return n._readersIndex=new a.default,n._writersIndex=new a.default,n}return(0,o.default)(l,n),(0,r.default)(l,[{key:"selectReader",value:function(n){return this._select(n,this._readersIndex)}},{key:"selectWriter",value:function(n){return this._select(n,this._writersIndex)}},{key:"_select",value:function(n,l){var e=n.length;return 0===e?null:n[l.next(e)]}}]),l}(s.default);l.default=h},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=s(e(12)),u=s(e(4)),r=s(e(0)),i=s(e(1)),o=s(e(5)),a=s(e(6));function s(n){return n&&n.__esModule?n:{default:n}}var c=function(n){function l(n){(0,r.default)(this,l);var e=(0,o.default)(this,(l.__proto__||(0,u.default)(l)).call(this));return e._resolverFunction=n,e}return(0,a.default)(l,n),(0,i.default)(l,[{key:"resolve",value:function(n){var l=this;return new t.default(function(e){return e(l._resolverFunction(n))}).then(function(n){if(!Array.isArray(n))throw new TypeError("Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.Each address is '<host>:<port>'. Got: "+n);return n})}}]),l}(s(e(106)).default);l.default=c},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0}),l.default="1.7.2"},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=h(e(4)),u=h(e(0)),r=h(e(1)),i=h(e(5)),o=h(e(6)),a=h(e(21)),s=h(e(239)),c=h(e(242));function h(n){return n&&n.__esModule?n:{default:n}}var d=function(n){function l(n,e,r,o){(0,u.default)(this,l);var a=(0,i.default)(this,(l.__proto__||(0,t.default)(l)).call(this,n,e,r,o));return a._sessionTracker=new c.default,a}return(0,o.default)(l,n),(0,r.default)(l,[{key:"session",value:function(){return new s.default(this._hostPort,this._authToken,this._config,this._sessionTracker)}},{key:"close",value:function(){return this._sessionTracker.close()}}]),l}(a.default);l.default=d},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=v(e(12)),u=v(e(4)),r=v(e(0)),i=v(e(1)),o=v(e(5)),a=v(e(6)),s=e(21),c=v(e(75)),h=e(11),d=e(3),f=v(e(240)),p=e(40),g=v(e(50));function v(n){return n&&n.__esModule?n:{default:n}}var y=function(n){function l(n,e,t,i){(0,r.default)(this,l);var a=(0,o.default)(this,(l.__proto__||(0,u.default)(l)).call(this,s.WRITE,null,null,t));return a._ongoingTransactionIds=[],a._serverInfoSupplier=function(n){return function(){return{server:{address:n.hostAndPort}}}}(n),a._requestRunner=new f.default(n,e),a._sessionTracker=i,a._sessionTracker.sessionOpened(a),a}return(0,a.default)(l,n),(0,i.default)(l,[{key:"run",value:function(n){var l=this,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=(0,h.validateStatementAndParameters)(n,e),u=t.query,r=t.params;return this._requestRunner.beginTransaction().then(function(n){return l._ongoingTransactionIds.push(n),l._requestRunner.runQuery(n,u,r).then(function(e){return e.hasFailed()?function(n,l,e){return m(n,e).then(function(){return l})}(n,e,l._requestRunner):function(n,l,e){return e.commitTransaction(n).catch(function(n){l.onError(n)}).then(function(){return l})}(n,e,l._requestRunner)}).then(function(e){return l._ongoingTransactionIds=l._ongoingTransactionIds.filter(function(l){return l!==n}),new g.default(e,u,r,l._serverInfoSupplier,p.EMPTY_CONNECTION_HOLDER)})})}},{key:"beginTransaction",value:function(){b()}},{key:"readTransaction",value:function(){b()}},{key:"writeTransaction",value:function(){b()}},{key:"lastBookmark",value:function(){throw new d.Neo4jError("Experimental HTTP driver does not support bookmarks and routing")}},{key:"close",value:function(){var n=this,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return null},e=this._ongoingTransactionIds.map(function(l){return m(l,n._requestRunner)});t.default.all(e).then(function(){n._sessionTracker.sessionClosed(n),l()})}}]),l}(c.default);function m(n,l){return l.rollbackTransaction(n).catch(function(n){})}function b(){throw new d.Neo4jError("Experimental HTTP driver does not support transactions")}l.default=y},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=c(e(20)),u=c(e(12)),r=c(e(0)),i=c(e(1)),o=c(e(29)),a=c(e(241)),s=e(3);function c(n){return n&&n.__esModule?n:{default:n}}var h=function(){function n(l,e){(0,r.default)(this,n),this._url=l,this._authToken=e,this._converter=new a.default}return(0,i.default)(n,[{key:"beginTransaction",value:function(){var n=this;return d("POST",p(this._url),null,this._authToken).then(function(l){var e=n._converter.extractError(l);if(e)throw e;return n._converter.extractTransactionId(l)})}},{key:"commitTransaction",value:function(n){var l=this;return d("POST",function(n,l){return g(n,l)+"/commit"}(this._url,n),null,this._authToken).then(function(n){var e=l._converter.extractError(n);if(e)throw e})}},{key:"rollbackTransaction",value:function(n){var l=this;return d("DELETE",g(this._url,n),null,this._authToken).then(function(n){var e=l._converter.extractError(n);if(e)throw e})}},{key:"runQuery",value:function(n,l,e){var r=this,i=new o.default,a=g(this._url,n),s=function(n,l,e,u){try{return function(n,l,e){var u=e.encodeStatementParameters(l);return(0,t.default)({statements:[{statement:n,parameters:u,resultDataContents:["row","graph"],includeStats:!0}]})}(n,l,e)}catch(n){return u.onError(n),null}}(l,e,this._converter,i);return s?d("POST",a,s,this._authToken).then(function(n){!function(n,l,e){if(!n)return;try{!function(n,l,e){var t=l.extractError(n);if(t)e.onError(t);else{var u=l.extractRecordMetadata(n);e.onCompleted(u);var r=l.extractRawRecords(n);r.forEach(function(n){return e.onNext(n)});var i=l.extractStatementMetadata(n);e.onCompleted(i)}}(n,l,e)}catch(n){e.onError(n)}}(n,r._converter,i)}).catch(function(n){i.onError(n)}).then(function(){return i}):u.default.resolve(i)}}]),n}();function d(n,l,e,t){try{var r={method:n,headers:f(t),body:e};return new u.default(function(n,e){fetch(l,r).then(function(n){return n.json()}).then(function(l){return n(l)}).catch(function(n){return e(new s.Neo4jError(n.message,s.SERVICE_UNAVAILABLE))})})}catch(n){return u.default.reject(n)}}function f(n){var l=new Headers;return l.append("Accept","application/json; charset=UTF-8"),l.append("Content-Type","application/json"),l.append("Authorization","Basic "+btoa(n.principal+":"+n.credentials)),l}function p(n){return function(n,l){return n.scheme+"://"+n.host+":"+n.port+l}(n,"/db/data/transaction")}function g(n,l){return p(n)+"/"+l}l.default=h},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=p(e(116)),u=p(e(34)),r=p(e(24)),i=p(e(20)),o=p(e(0)),a=p(e(1)),s=e(13),c=e(70),h=e(3),d=e(81),f=e(55);function p(n){return n&&n.__esModule?n:{default:n}}var g=function(){function n(){(0,o.default)(this,n)}return(0,a.default)(n,[{key:"encodeStatementParameters",value:function(n){return v(n)}},{key:"extractError",value:function(n){var l=n.errors;if(l){var e=l[0];if(e){var t=n.password_change?"Neo.ClientError.Security.CredentialsExpired":e.code,u=e.message;return new h.Neo4jError(u,t)}}return null}},{key:"extractTransactionId",value:function(n){var l=n.commit;if(l){var e=l.replace("/commit",""),t=e.substring(e.lastIndexOf("/")+1),u=parseInt(t,10);if(u||0===u)return u}throw new h.Neo4jError("Unable to extract transaction id from the response JSON: "+(0,i.default)(n))}},{key:"extractRecordMetadata",value:function(n){var l=m(n);return{fields:l?l.columns:[]}}},{key:"extractRawRecords",value:function(n){var l=m(n);if(l){var e=l.data;if(e)return e.map(function(n){return function(n){var l=n.row,e=function(n){var l=n.graph;if(l){var e=l.nodes;if(e)return e.reduce(function(n,l){var e=w(l.id),t=l.labels,u=b(l.properties);return n[l.id]=new c.Node(e,t,u),n},{})}return{}}(n),u=function(n){var l=n.graph;if(l){var e=l.relationships;if(e)return e.reduce(function(n,l){var e=w(l.id),t=w(l.startNode),u=w(l.endNode),r=l.type,i=b(l.properties);return n[l.id]=new c.Relationship(e,t,u,r,i),n},{})}return{}}(n);if(l)return l.map(function(l,r){return function(n,l,e,u){var r=l.row?l.row[n]:null,o=l.meta?l.meta[n]:null;return o?function(n,l,e,u){return r=l,_("node",r)?e[l.id]:function(n){return _("relationship",n)}(l)?u[l.id]:function(n){return Array.isArray(n)}(l)?function(n,l,e){for(var t=null,u=null,r=[],o=0;o<n.length;o++){var a=n[o],s=a.id,d=a.type,f=null===t&&null===u||null!==t&&null!==u;if(f&&"node"!==d)throw new h.Neo4jError("Unable to parse path, node expected but got: "+(0,i.default)(a)+" in "+(0,i.default)(n));if(!f&&"node"===d)throw new h.Neo4jError("Unable to parse path, relationship expected but got: "+(0,i.default)(a)+" in "+(0,i.default)(n));if(f){var p=l[s];if(null===t)t=p;else{if(null===t||null===u)throw new h.Neo4jError("Unable to parse path, illegal node configuration: "+(0,i.default)(n));var g=new c.PathSegment(t,u,p);r.push(g),t=p,u=null}}else{if(null!==u)throw new h.Neo4jError("Unable to parse path, illegal relationship configuration: "+(0,i.default)(n));u=e[s]}}var v=r[r.length-1];if(v&&v.end!==t||null!==u)throw new h.Neo4jError("Unable to parse path: "+(0,i.default)(n));return function(n){var l=n[0].start,e=n[n.length-1].end;return new c.Path(l,e,n)}(r)}(l,e,u):function(n){return _("point",n)}(l)?function(n){if("Point"!==n.type)throw new h.Neo4jError("Unexpected Point type received: "+(0,i.default)(n));var l=n.coordinates;if(!Array.isArray(l)&&(2!==l.length||3!==l.length))throw new h.Neo4jError("Unexpected Point coordinates received: "+(0,i.default)(n));var e=function(n){var l=n.crs;if(!l||!l.name)throw new h.Neo4jError("Unexpected Point crs received: "+(0,i.default)(n));var e=l.name.toLowerCase();if("wgs-84"===e)return 4326;if("wgs-84-3d"===e)return 4979;if("cartesian"===e)return 7203;if("cartesian-3d"===e)return 9157;throw new h.Neo4jError("Unexpected Point crs received: "+(0,i.default)(n))}(n);return new(Function.prototype.bind.apply(d.Point,[null].concat([e],(0,t.default)(l))))}(n):n;var r}(r,o,e,u):b(r)}(r,n,e,u)});return[]}(n)})}return[]}},{key:"extractStatementMetadata",value:function(n){var l=m(n);if(l){var e=l.stats;if(e)return{stats:(0,r.default)(e).reduce(function(n,l){return"contains_updates"===l?n:(n[("relationship_deleted"===l?"relationships_deleted":l).replace("_","-")]=e[l],n)},{})}}return{}}}]),n}();function v(n){return n&&"object"===(void 0===n?"undefined":(0,u.default)(n))?(0,r.default)(n).reduce(function(l,e){return l[e]=function n(l){if(l instanceof c.Node)throw new h.Neo4jError("It is not allowed to pass nodes in query parameters",h.PROTOCOL_ERROR);if(l instanceof c.Relationship)throw new h.Neo4jError("It is not allowed to pass relationships in query parameters",h.PROTOCOL_ERROR);if(l instanceof c.Path)throw new h.Neo4jError("It is not allowed to pass paths in query parameters",h.PROTOCOL_ERROR);if((0,d.isPoint)(l))throw y("points");if((0,f.isDate)(l))throw y("dates");if((0,f.isDateTime)(l))throw y("date-time");if((0,f.isDuration)(l))throw y("durations");if((0,f.isLocalDateTime)(l))throw y("local date-time");if((0,f.isLocalTime)(l))throw y("local time");if((0,f.isTime)(l))throw y("time");return(0,s.isInt)(l)?l.toNumber():Array.isArray(l)?l.map(function(l){return n(l)}):"object"===(void 0===l?"undefined":(0,u.default)(l))?v(l):l}(n[e]),l},{}):n}function y(n){return new h.Neo4jError("It is not allowed to pass "+n+" in query parameters when using HTTP endpoint. Please consider using Cypher functions to create "+n+" so that query parameters are plain objects.",h.PROTOCOL_ERROR)}function m(n){var l=n.results;if(l){var e=l[0];if(e)return e}return null}function b(n){return null==n||void 0===n?null:"number"==typeof n?w(n):Array.isArray(n)?n.map(function(n){return b(n)}):"object"===(void 0===n?"undefined":(0,u.default)(n))?(0,r.default)(n).reduce(function(l,e){return l[e]=b(n[e]),l},{}):n}function w(n){return"number"==typeof n?n:Number(n)}function _(n,l){return!Array.isArray(l)&&"object"===(void 0===l?"undefined":(0,u.default)(l))&&l.type===n}l.default=g},function(n,l,e){"use strict";Object.defineProperty(l,"__esModule",{value:!0});var t=a(e(12)),u=a(e(42)),r=a(e(117)),i=a(e(0)),o=a(e(1));function a(n){return n&&n.__esModule?n:{default:n}}var s=function(){function n(){(0,i.default)(this,n),this._openSessions=new r.default}return(0,o.default)(n,[{key:"sessionOpened",value:function(n){this._openSessions.add(n)}},{key:"sessionClosed",value:function(n){this._openSessions.delete(n)}},{key:"close",value:function(){var n=(0,u.default)(this._openSessions);return this._openSessions.clear(),t.default.all(n.map(function(n){return function(n){return new t.default(function(l){n.close(function(){l()})})}(n)}))}}]),n}();l.default=s},function(n,l,e){var t;!function(){"use strict";var u="undefined"==typeof jQuery?null:jQuery,r=function(n,l){if(n){var e,t={menuItems:[],menuItemClasses:[],contextMenuClasses:[]};n("core","contextMenus",function(n){var u=this;u.scratch("cycontextmenus")||u.scratch("cycontextmenus",{});var r,i=c("options"),o=c("cxtMenu"),a="cy-context-menus-cxt-menuitem",s="cy-context-menus-divider";function c(n){return u.scratch("cycontextmenus")[n]}function h(n,l){u.scratch("cycontextmenus")[n]=l}function d(n){for(var l="",e=0;e<n.length;e++){l+=n[e],e!==n.length-1&&(l+=" ")}return l}function f(n){n.css("display","block")}function p(n){n.css("display","none")}function g(n,e,t){function r(e){h("currentCyEvent",e),function(n){var e=c("cxtMenuPosition"),t=n.position||n.cyPosition;if(e!=t){o.children().css("display","none"),h("anyVisibleChild",!1),h("cxtMenuPosition",t);var r=l(u.container()).offset(),i=n.renderedPosition||n.cyRenderedPosition,a=r.left+i.x,s=r.top+i.y;o.css("left",a),o.css("top",s)}}(e),n.data("show")&&(o.is(":visible")||f(o),h("anyVisibleChild",!0),f(n)),!c("anyVisibleChild")&&o.is(":visible")&&p(o)}var i,a;t&&u.on("cxttap",a=function(n){(n.target||n.cyTarget)==u&&r(n)}),e&&u.on("cxttap",e,i=function(n){r(n)}),n.data("cy-context-menus-cxtfcn",i),n.data("cy-context-menus-cxtcorefcn",a)}function v(n,l,e,t){!function(n,l){var e;n.on("click",e=function(){l(c("currentCyEvent"))}),n.data("call-on-click-function",e)}(n,l),g(n,e,t)}function y(n){for(var l=0;l<n.length;l++)m(n[l])}function m(n){var l,e=w(n);l=e,o.append(l),function(n){n.click(function(){p(o),h("cxtMenuPosition",void 0)})}(l),v(e,n.onClickFunction,n.selector,n.coreAsWell)}function b(n,e){var t,u,r=w(n);t=r,u=l("#"+e),t.insertBefore(u),v(r,n.onClickFunction,n.selector,n.coreAsWell)}function w(n){var e,t,u,r=(e=i.menuItemClasses,t=n.hasTrailingDivider,u=d(e),u+=" "+a,t&&(u+=" "+s),u),o='<button id="'+n.id+'" class="'+r+'"';n.tooltipText&&(o+=' title="'+n.tooltipText+'"'),n.disabled&&(o+=" disabled"),n.image?o+='><img src="'+n.image.src+'" width="'+n.image.width+'px"; height="'+n.image.height+'px"; style="position:absolute; top: '+n.image.y+"px; left: "+n.image.x+'px;">'+n.content+"</button>":o+=">"+n.content+"</button>";var c=l(o);return c.data("selector",n.selector),c.data("on-click-function",n.onClickFunction),c.data("show",void 0===n.show||n.show),c}function _(){var n;c("active")&&(n=o.children(),l(n).each(function(){x(l(this))}),u.off("tapstart",e),o.remove(),h(o=void 0,void 0),h("active",!1),h("anyVisibleChild",!1))}function x(n){var e="string"==typeof n?l("#"+n):n,t=e.data("cy-context-menus-cxtfcn"),r=e.data("selector"),i=e.data("call-on-click-function"),o=e.data("cy-context-menus-cxtcorefcn");t&&u.off("cxttap",r,t),o&&u.off("cxttap",o),i&&e.off("click",i),e.remove()}"get"!==n&&(h("options",i=function(n,l){var e={};for(var t in n)e[t]=n[t];for(var t in l)e[t]=l[t];return e}(t,n)),c("active")&&_(),h("active",!0),r=d(i.contextMenuClasses),(o=l("<div class="+r+"></div>")).addClass("cy-context-menus-cxt-menu"),h("cxtMenu",o),l("body").append(o),o=o,y(i.menuItems),u.on("tapstart",e=function(){p(o),h("cxtMenuPosition",void 0),h("currentCyEvent",void 0)}),l(".cy-context-menus-cxt-menu").contextmenu(function(){return!1}));return function(n){return{isActive:function(){return c("active")},appendMenuItem:function(l){return m(l),n},appendMenuItems:function(l){return y(l),n},removeMenuItem:function(l){return x(l),n},setTrailingDivider:function(e,t){return function(n,e){var t=l("#"+n);e?t.addClass(s):t.removeClass(s)}(e,t),n},insertBeforeMenuItem:function(l,e){return b(l,e),n},moveBeforeOtherMenuItem:function(e,t){return function(n,e){if(n!==e){var t=l("#"+n).detach(),u=l("#"+e);t.insertBefore(u)}}(e,t),n},disableMenuItem:function(e){return l("#"+e).attr("disabled",!0),n},enableMenuItem:function(e){return l("#"+e).attr("disabled",!1),n},hideMenuItem:function(e){return l("#"+e).data("show",!1),p(l("#"+e)),n},showMenuItem:function(e){return l("#"+e).data("show",!0),f(l("#"+e)),n},destroy:function(){return _(),n}}}(this)})}};n.exports&&(n.exports=r),void 0===(t=function(){return r}.call(l,e,l,n))||(n.exports=t),"undefined"!=typeof cytoscape&&u&&r(cytoscape,u)}()},function(n,l,e){var t;
/*!
Copyright (c) The Cytoscape Consortium

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the “Software”), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/!function(u,r){"use strict";var i=function(n){return null!=n&&"object"==typeof n},o=function(n){return null!=n&&"function"==typeof n},a=function(n){return null!=n&&"number"==typeof n},s=function(n){return null!=n&&"string"==typeof n},c=function(n){return void 0===n},h=function(n,l){return o(n)?function(e,t){return n.apply(l,[e,t])}:n},d=function(n,l,e){var t,u,r,a,s,c,h,d=0,f=!1,p=!0;if(o(n)){if(l=Math.max(0,l)||0,!0===e){var g=!0;p=!1}else i(e)&&(g=e.leading,f="maxWait"in e&&(Math.max(l,e.maxWait)||0),p="trailing"in e?e.trailing:p);var v=function(){var e=l-(Date.now()-a);if(e<=0){u&&clearTimeout(u);var i=h;u=c=h=void 0,i&&(d=Date.now(),r=n.apply(s,t),c||u||(t=s=null))}else c=setTimeout(v,e)},y=function(){c&&clearTimeout(c),u=c=h=void 0,(p||f!==l)&&(d=Date.now(),r=n.apply(s,t),c||u||(t=s=null))};return function(){if(t=arguments,a=Date.now(),s=this,h=p&&(c||!g),!1===f)var e=g&&!c;else{u||g||(d=a);var i=f-(a-d),o=i<=0;o?(u&&(u=clearTimeout(u)),d=a,r=n.apply(s,t)):u||(u=setTimeout(y,i))}return o&&c?c=clearTimeout(c):c||l===f||(c=setTimeout(v,l)),e&&(o=!0,r=n.apply(s,t)),!o||c||u||(t=s=null),r}}};function f(n,l){var e=l("<div></div>");function t(n,t){var u=n.scratch().qtip,r=l.extend({},t);r.id||(r.id="cy-qtip-target-"+(Date.now()+Math.round(1e4*Math.random()))),u.$domEle||(u.$domEle=e),r.position=r.position||{},r.position.container=r.position.container||l(document.body),r.position.viewport=r.position.viewport||l(document.body),r.position.target=[0,0],r.position.my=r.position.my||"top center",r.position.at=r.position.at||"bottom center";var i=r.position.adjust=r.position.adjust||{};return i.method=i.method||"flip",i.mouse=!1,r.show=r.show||{},c(r.show.event)&&(r.show.event="tap"),r.hide=r.hide||{},r.hide.cyViewport=void 0===r.hide.cyViewport||r.hide.cyViewport,c(r.hide.event)&&(r.hide.event="unfocus"),r.overwrite=!1,r.content&&(o(r.content)||s(r.content)?r.content=h(r.content,n):r.content={text:h(r.content.text,n),title:h(r.content.title,n)}),r}function u(n,l,e){var t=e,u=o(n.pan),r=!u&&n.isNode(),i=(u?n:n.cy()).container().getBoundingClientRect(),a=r?n.renderedPosition():t?t.renderedPosition||t.cyRenderedPosition:void 0;if(a&&null!=a.x&&!isNaN(a.x)){var s=r?n.renderedBoundingBox({includeNodes:!0,includeEdges:!1,includeLabels:!1,includeShadows:!1}):{x1:a.x-1,x2:a.x+1,w:3,y1:a.y-1,y2:a.y+1,h:3};0===l.$domEle.parent().length&&l.$domEle.appendTo(document.body),l.$domEle.css({width:s.w,height:s.h,top:s.y1+i.top+window.pageYOffset,left:s.x1+i.left+window.pageXOffset,position:"absolute","pointer-events":"none",background:"red","z-index":99999999,opacity:.5,visibility:"hidden"}),l.api.set("position.target",l.$domEle)}}e.css({"z-index":-1,position:"absolute"}),n("collection","qtip",function(n){var l=this.cy();l.container();return"api"===n?this.scratch().qtip.api:(this.each(function(e,r){a(e)&&(e=r);var i=e.scratch(),o=i.qtip=i.qtip||{},s=t(e,n);s.position.adjust;o.$domEle.qtip(s);var c=o.api=o.$domEle.qtip("api");o.$domEle.removeData("qtip"),u(e,o),e.on(s.show.event,function(n){u(e,o,n),c.show()}),e.on(s.hide.event,function(n){c.hide()}),s.hide.cyViewport&&l.on("viewport",d(function(){c.hide()},250,{leading:!0})),s.position.adjust.cyViewport&&l.on("pan zoom",d(function(n){u(e,o,n),c.reposition()},250,{trailing:!0}))}),this)}),n("core","qtip",function(n){var l=this;l.container();if("api"===n)return this.scratch().qtip.api;var e=l.scratch(),r=e.qtip=e.qtip||{},i=t(l,n);r.$domEle.qtip(i);var o=r.api=r.$domEle.qtip("api");return r.$domEle.removeData("qtip"),l.on(i.show.event,function(n){i.show.cyBgOnly&&(!i.show.cyBgOnly||n.target!==l&&n.cyTarget!==l)||(u(l,r,n),o.show())}),l.on(i.hide.event,function(n){i.hide.cyBgOnly&&(!i.hide.cyBgOnly||n.target!==l&&n.cyTarget!==l)||o.hide()}),i.hide.cyViewport&&l.on("viewport",d(function(){o.hide()},250,{leading:!0})),this})}n.exports?n.exports=function(n){var l=window.jQuery,t=window.$,u=window.jQuery=window.$=e(82);e(245);f(n,u),window.jQuery=l,window.$=t}:void 0===(t=function(){return f}.call(l,e,l,n))||(n.exports=t),u&&r&&f(r,u)}("undefined"!=typeof jQuery?jQuery:null,"undefined"!=typeof cytoscape?cytoscape:null)},function(n,l,e){var t,u,r,i,o,a;i=window,o=document,function(i){"use strict";u=[e(82)],void 0===(r="function"==typeof(t=i)?t.apply(l,u):t)||(n.exports=r)}(function(n){"use strict";function l(l,e,t,u){this.id=t,this.target=l,this.tooltip=O,this.elements={target:l},this._id=H+"-"+t,this.timers={img:{}},this.options=e,this.plugins={},this.cache={event:{},target:n(),disabled:D,attr:u,onTooltip:D,lastClass:""},this.rendered=this.destroyed=this.disabled=this.waiting=this.hiddenDuringWait=this.positioning=this.triggering=D}function e(l){return l===O||"object"!==n.type(l)}function t(l){return!(n.isFunction(l)||l&&l.attr||l.length||"object"===n.type(l)&&(l.jquery||l.then))}function u(l){var u,r,i,o;return e(l)?D:(e(l.metadata)&&(l.metadata={type:l.metadata}),"content"in l&&(e(u=l.content)||u.jquery||u.done?u=l.content={text:r=t(u)?D:u}:r=u.text,"ajax"in u&&(i=u.ajax,o=i&&i.once!==D,delete u.ajax,u.text=function(l,e){var t=r||n(this).attr(e.options.content.attr)||"Loading...",u=n.ajax(n.extend({},i,{context:e})).then(i.success,O,i.error).then(function(n){return n&&o&&e.set("content.text",n),n},function(n,l,t){e.destroyed||0===n.status||e.set("content.text",l+": "+t)});return o?t:(e.set("content.text",t),u)}),"title"in u&&(e(u.title)||(u.button=u.title.button,u.title=u.title.text),t(u.title||D)&&(u.title=D))),"position"in l&&e(l.position)&&(l.position={my:l.position,at:l.position}),"show"in l&&e(l.show)&&(l.show=l.show.jquery?{target:l.show}:l.show===N?{ready:N}:{event:l.show}),"hide"in l&&e(l.hide)&&(l.hide=l.hide.jquery?{target:l.hide}:{event:l.hide}),"style"in l&&e(l.style)&&(l.style={classes:l.style}),n.each(V,function(){this.sanitize&&this.sanitize(l)}),l)}function r(n,l){for(var e,t=0,u=n,r=l.split(".");u=u[r[t++]];)r.length>t&&(e=u);return[e||n,r.pop()]}function s(n,l){var e,t,u;for(e in this.checks)for(t in this.checks[e])(u=RegExp(t,"i").exec(n))&&(l.push(u),("builtin"===e||this.plugins[e])&&this.checks[e][t].apply(this.plugins[e]||this,l))}function c(n){return W.concat("").join(n?"-"+n+" ":" ")}function h(n){return n&&{type:n.type,pageX:n.pageX,pageY:n.pageY,target:n.target,relatedTarget:n.relatedTarget,scrollX:n.scrollX||i.pageXOffset||o.body.scrollLeft||o.documentElement.scrollLeft,scrollY:n.scrollY||i.pageYOffset||o.body.scrollTop||o.documentElement.scrollTop}||{}}function d(l,e){return e>0?setTimeout(n.proxy(l,this),e):(l.call(this),a)}function f(n){return this.tooltip.hasClass(nn)?D:(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this.timers.show=d.call(this,function(){this.toggle(N,n)},this.options.show.delay),a)}function p(l){if(this.tooltip.hasClass(nn))return D;var e=n(l.relatedTarget),t=e.closest(X)[0]===this.tooltip[0],u=e[0]===this.options.show.target[0];if(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this!==e[0]&&"mouse"===this.options.position.target&&t||this.options.hide.fixed&&/mouse(out|leave|move)/.test(l.type)&&(t||u))try{l.preventDefault(),l.stopImmediatePropagation()}catch(n){}else this.timers.hide=d.call(this,function(){this.toggle(D,l)},this.options.hide.delay,this)}function g(n){return this.tooltip.hasClass(nn)||!this.options.hide.inactive?D:(clearTimeout(this.timers.inactive),this.timers.inactive=d.call(this,function(){this.hide(n)},this.options.hide.inactive),a)}function v(n){this.rendered&&this.tooltip[0].offsetWidth>0&&this.reposition(n)}function y(l,e,t){n(o.body).delegate(l,(e.split?e:e.join(an+" "))+an,function(){var l=T.api[n.attr(this,Y)];l&&!l.disabled&&t.apply(l,arguments)})}function m(e,t,r){var i,a,s,c,h,d=n(o.body),f=e[0]===o?d:e,p=e.metadata?e.metadata(r.metadata):O,g="html5"===r.metadata.type&&p?p[r.metadata.name]:O,v=e.data(r.metadata.name||"qtipopts");try{v="string"==typeof v?n.parseJSON(v):v}catch(n){}if(a=(c=n.extend(N,{},T.defaults,r,"object"==typeof v?u(v):O,u(g||p))).position,c.id=t,"boolean"==typeof c.content.text){if(s=e.attr(c.content.attr),c.content.attr===D||!s)return D;c.content.text=s}if(a.container.length||(a.container=d),a.target===D&&(a.target=f),c.show.target===D&&(c.show.target=f),c.show.solo===N&&(c.show.solo=a.container.closest("body")),c.hide.target===D&&(c.hide.target=f),c.position.viewport===N&&(c.position.viewport=a.container),a.container=a.container.eq(0),a.at=new C(a.at,N),a.my=new C(a.my),e.data(H))if(c.overwrite)e.qtip("destroy",!0);else if(c.overwrite===D)return D;return e.attr(G,t),c.suppress&&(h=e.attr("title"))&&e.removeAttr("title").attr(en,h).attr("title",""),i=new l(e,c,t,!!s),e.data(H,i),e.one("remove.qtip-"+t+" removeqtip.qtip-"+t,function(){var l;(l=n(this).data(H))&&l.destroy(!0)}),i}function b(n){return n.charAt(0).toUpperCase()+n.slice(1)}function w(n,l){return Math.ceil(parseFloat(function(n,l){var e,t,u=l.charAt(0).toUpperCase()+l.slice(1),r=(l+" "+bn.join(u+" ")+u).split(" "),i=0;if(mn[l])return n.css(mn[l]);for(;e=r[i++];)if((t=n.css(e))!==a)return mn[l]=e,t}(n,l)))}function _(n,l){this._ns="tip",this.options=l,this.offset=l.offset,this.size=[l.width,l.height],this.init(this.qtip=n)}function x(n,l){this.options=l,this._ns="-modal",this.init(this.qtip=n)}function E(n){this._ns="ie6",this.init(this.qtip=n)}var T,k,C,S,I,N=!0,D=!1,O=null,A="x",P="y",M="width",L="height",R="top",F="left",B="bottom",j="right",U="center",z="flipinvert",q="shift",V={},H="qtip",G="data-hasqtip",Y="data-qtip-id",W=["ui-widget","ui-tooltip"],X="."+H,K="click dblclick mousedown mouseup mousemove mouseleave mouseenter".split(" "),$=H+"-fixed",Z=H+"-default",Q=H+"-focus",J=H+"-hover",nn=H+"-disabled",ln="_replacedByqTip",en="oldtitle",tn={ie:function(){for(var n=3,l=o.createElement("div");(l.innerHTML="\x3c!--[if gt IE "+ ++n+"]><i></i><![endif]--\x3e")&&l.getElementsByTagName("i")[0];);return n>4?n:NaN}(),iOS:parseFloat((""+(/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,""])[1]).replace("undefined","3_2").replace("_",".").replace("_",""))||D};(k=l.prototype)._when=function(l){return n.when.apply(n,l)},k.render=function(l){if(this.rendered||this.destroyed)return this;var e=this,t=this.options,u=this.cache,r=this.elements,i=t.content.text,o=t.content.title,a=t.content.button,s=t.position,c=(this._id,[]);return n.attr(this.target[0],"aria-describedby",this._id),this.tooltip=r.tooltip=n("<div/>",{id:this._id,class:[H,Z,t.style.classes,H+"-pos-"+t.position.my.abbrev()].join(" "),width:t.style.width||"",height:t.style.height||"",tracking:"mouse"===s.target&&s.adjust.mouse,role:"alert","aria-live":"polite","aria-atomic":D,"aria-describedby":this._id+"-content","aria-hidden":N}).toggleClass(nn,this.disabled).attr(Y,this.id).data(H,this).appendTo(s.container).append(r.content=n("<div />",{class:H+"-content",id:this._id+"-content","aria-atomic":N})),this.rendered=-1,this.positioning=N,o&&(this._createTitle(),n.isFunction(o)||c.push(this._updateTitle(o,D))),a&&this._createButton(),n.isFunction(i)||c.push(this._updateContent(i,D)),this.rendered=N,this._setWidget(),n.each(V,function(n){var l;"render"===this.initialize&&(l=this(e))&&(e.plugins[n]=l)}),this._unassignEvents(),this._assignEvents(),this._when(c).then(function(){e._trigger("render"),e.positioning=D,e.hiddenDuringWait||!t.show.ready&&!l||e.toggle(N,u.event,D),e.hiddenDuringWait=D}),T.api[this.id]=this,this},k.destroy=function(l){function e(){if(!this.destroyed){this.destroyed=N;var l=this.target,e=l.attr(en);this.rendered&&this.tooltip.stop(1,0).find("*").remove().end().remove(),n.each(this.plugins,function(){this.destroy&&this.destroy()}),clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this._unassignEvents(),l.removeData(H).removeAttr(Y).removeAttr(G).removeAttr("aria-describedby"),this.options.suppress&&e&&l.attr("title",e).removeAttr(en),this._unbind(l),this.options=this.elements=this.cache=this.timers=this.plugins=this.mouse=O,delete T.api[this.id]}}return this.destroyed?this.target:(l===N&&"hide"!==this.triggering||!this.rendered?e.call(this):(this.tooltip.one("tooltiphidden",n.proxy(e,this)),!this.triggering&&this.hide()),this.target)},S=k.checks={builtin:{"^id$":function(l,e,t,u){var r=t===N?T.nextid:t,i=H+"-"+r;r!==D&&r.length>0&&!n("#"+i).length?(this._id=i,this.rendered&&(this.tooltip[0].id=this._id,this.elements.content[0].id=this._id+"-content",this.elements.title[0].id=this._id+"-title")):l[e]=u},"^prerender":function(n,l,e){e&&!this.rendered&&this.render(this.options.show.ready)},"^content.text$":function(n,l,e){this._updateContent(e)},"^content.attr$":function(n,l,e,t){this.options.content.text===this.target.attr(t)&&this._updateContent(this.target.attr(e))},"^content.title$":function(n,l,e){return e?(e&&!this.elements.title&&this._createTitle(),this._updateTitle(e),a):this._removeTitle()},"^content.button$":function(n,l,e){this._updateButton(e)},"^content.title.(text|button)$":function(n,l,e){this.set("content."+l,e)},"^position.(my|at)$":function(n,l,e){"string"==typeof e&&(n[l]=new C(e,"at"===l))},"^position.container$":function(n,l,e){this.rendered&&this.tooltip.appendTo(e)},"^show.ready$":function(n,l,e){e&&(!this.rendered&&this.render(N)||this.toggle(N))},"^style.classes$":function(n,l,e,t){this.rendered&&this.tooltip.removeClass(t).addClass(e)},"^style.(width|height)":function(n,l,e){this.rendered&&this.tooltip.css(l,e)},"^style.widget|content.title":function(){this.rendered&&this._setWidget()},"^style.def":function(n,l,e){this.rendered&&this.tooltip.toggleClass(Z,!!e)},"^events.(render|show|move|hide|focus|blur)$":function(l,e,t){this.rendered&&this.tooltip[(n.isFunction(t)?"":"un")+"bind"]("tooltip"+e,t)},"^(show|hide|position).(event|target|fixed|inactive|leave|distance|viewport|adjust)":function(){if(this.rendered){var n=this.options.position;this.tooltip.attr("tracking","mouse"===n.target&&n.adjust.mouse),this._unassignEvents(),this._assignEvents()}}}},k.get=function(n){if(this.destroyed)return this;var l=r(this.options,n.toLowerCase()),e=l[0][l[1]];return e.precedance?e.string():e};var un=/^position\.(my|at|adjust|target|container|viewport)|style|content|show\.ready/i,rn=/^prerender|show\.ready/i;k.set=function(l,e){if(this.destroyed)return this;var t,i=this.rendered,o=D,c=this.options;return this.checks,"string"==typeof l?(t=l,(l={})[t]=e):l=n.extend({},l),n.each(l,function(e,t){if(i&&rn.test(e))return delete l[e],a;var u,s=r(c,e.toLowerCase());u=s[0][s[1]],s[0][s[1]]=t&&t.nodeType?n(t):t,o=un.test(e)||o,l[e]=[s[0],s[1],t,u]}),u(c),this.positioning=N,n.each(l,n.proxy(s,this)),this.positioning=D,this.rendered&&this.tooltip[0].offsetWidth>0&&o&&this.reposition("mouse"===c.position.target?O:this.cache.event),this},k._update=function(l,e){var t=this,u=this.cache;return this.rendered&&l?(n.isFunction(l)&&(l=l.call(this.elements.target,u.event,this)||""),n.isFunction(l.then)?(u.waiting=N,l.then(function(n){return u.waiting=D,t._update(n,e)},O,function(n){return t._update(n,e)})):l===D||!l&&""!==l?D:(l.jquery&&l.length>0?e.empty().append(l.css({display:"block",visibility:"visible"})):e.html(l),this._waitForContent(e).then(function(n){n.images&&n.images.length&&t.rendered&&t.tooltip[0].offsetWidth>0&&t.reposition(u.event,!n.length)}))):D},k._waitForContent=function(l){var e=this.cache;return e.waiting=N,(n.fn.imagesLoaded?l.imagesLoaded():n.Deferred().resolve([])).done(function(){e.waiting=D}).promise()},k._updateContent=function(n,l){this._update(n,this.elements.content,l)},k._updateTitle=function(n,l){this._update(n,this.elements.title,l)===D&&this._removeTitle(D)},k._createTitle=function(){var l=this.elements,e=this._id+"-title";l.titlebar&&this._removeTitle(),l.titlebar=n("<div />",{class:H+"-titlebar "+(this.options.style.widget?c("header"):"")}).append(l.title=n("<div />",{id:e,class:H+"-title","aria-atomic":N})).insertBefore(l.content).delegate(".qtip-close","mousedown keydown mouseup keyup mouseout",function(l){n(this).toggleClass("ui-state-active ui-state-focus","down"===l.type.substr(-4))}).delegate(".qtip-close","mouseover mouseout",function(l){n(this).toggleClass("ui-state-hover","mouseover"===l.type)}),this.options.content.button&&this._createButton()},k._removeTitle=function(n){var l=this.elements;l.title&&(l.titlebar.remove(),l.titlebar=l.title=l.button=O,n!==D&&this.reposition())},k.reposition=function(l,e){if(!this.rendered||this.positioning||this.destroyed)return this;this.positioning=N;var t,u,r=this.cache,a=this.tooltip,s=this.options.position,c=s.target,h=s.my,d=s.at,f=s.viewport,p=s.container,g=s.adjust,v=g.method.split(" "),y=a.outerWidth(D),m=a.outerHeight(D),b=0,w=0,_=a.css("position"),x={left:0,top:0},E=a[0].offsetWidth>0,T=l&&"scroll"===l.type,k=n(i),C=p[0].ownerDocument,S=this.mouse;if(n.isArray(c)&&2===c.length)d={x:F,y:R},x={left:c[0],top:c[1]};else if("mouse"===c)d={x:F,y:R},!S||!S.pageX||!g.mouse&&l&&l.pageX?l&&l.pageX||((!g.mouse||this.options.show.distance)&&r.origin&&r.origin.pageX?l=r.origin:(!l||l&&("resize"===l.type||"scroll"===l.type))&&(l=r.event)):l=S,"static"!==_&&(x=p.offset()),C.body.offsetWidth!==(i.innerWidth||C.documentElement.clientWidth)&&(u=n(o.body).offset()),x={left:l.pageX-x.left+(u&&u.left||0),top:l.pageY-x.top+(u&&u.top||0)},g.mouse&&T&&S&&(x.left-=(S.scrollX||0)-k.scrollLeft(),x.top-=(S.scrollY||0)-k.scrollTop());else{if("event"===c?l&&l.target&&"scroll"!==l.type&&"resize"!==l.type?r.target=n(l.target):l.target||(r.target=this.elements.target):"event"!==c&&(r.target=n(c.jquery?c:this.elements.target)),c=r.target,0===(c=n(c).eq(0)).length)return this;c[0]===o||c[0]===i?(b=tn.iOS?i.innerWidth:c.width(),w=tn.iOS?i.innerHeight:c.height(),c[0]===i&&(x={top:(f||c).scrollTop(),left:(f||c).scrollLeft()})):V.imagemap&&c.is("area")?t=V.imagemap(this,c,d,V.viewport?v:D):V.svg&&c&&c[0].ownerSVGElement?t=V.svg(this,c,d,V.viewport?v:D):(b=c.outerWidth(D),w=c.outerHeight(D),x=c.offset()),t&&(b=t.width,w=t.height,u=t.offset,x=t.position),x=this.reposition.offset(c,x,p),(tn.iOS>3.1&&4.1>tn.iOS||tn.iOS>=4.3&&4.33>tn.iOS||!tn.iOS&&"fixed"===_)&&(x.left-=k.scrollLeft(),x.top-=k.scrollTop()),(!t||t&&t.adjustable!==D)&&(x.left+=d.x===j?b:d.x===U?b/2:0,x.top+=d.y===B?w:d.y===U?w/2:0)}return x.left+=g.x+(h.x===j?-y:h.x===U?-y/2:0),x.top+=g.y+(h.y===B?-m:h.y===U?-m/2:0),V.viewport?(x.adjusted=V.viewport(this,x,s,b,w,y,m),u&&x.adjusted.left&&(x.left+=u.left),u&&x.adjusted.top&&(x.top+=u.top)):x.adjusted={left:0,top:0},this._trigger("move",[x,f.elem||f],l)?(delete x.adjusted,e===D||!E||isNaN(x.left)||isNaN(x.top)||"mouse"===c||!n.isFunction(s.effect)?a.css(x):n.isFunction(s.effect)&&(s.effect.call(a,this,n.extend({},x)),a.queue(function(l){n(this).css({opacity:"",height:""}),tn.ie&&this.style.removeAttribute("filter"),l()})),this.positioning=D,this):this},k.reposition.offset=function(l,e,t){function u(n,l){e.left+=l*n.scrollLeft(),e.top+=l*n.scrollTop()}if(!t[0])return e;var r,i,a,s,c=n(l[0].ownerDocument),h=!!tn.ie&&"CSS1Compat"!==o.compatMode,d=t[0];do{"static"!==(i=n.css(d,"position"))&&("fixed"===i?(a=d.getBoundingClientRect(),u(c,-1)):((a=n(d).position()).left+=parseFloat(n.css(d,"borderLeftWidth"))||0,a.top+=parseFloat(n.css(d,"borderTopWidth"))||0),e.left-=a.left+(parseFloat(n.css(d,"marginLeft"))||0),e.top-=a.top+(parseFloat(n.css(d,"marginTop"))||0),r||"hidden"===(s=n.css(d,"overflow"))||"visible"===s||(r=n(d)))}while(d=d.offsetParent);return r&&(r[0]!==c[0]||h)&&u(r,1),e};var on=(C=k.reposition.Corner=function(n,l){n=(""+n).replace(/([A-Z])/," $1").replace(/middle/gi,U).toLowerCase(),this.x=(n.match(/left|right/i)||n.match(/center/)||["inherit"])[0].toLowerCase(),this.y=(n.match(/top|bottom|center/i)||["inherit"])[0].toLowerCase(),this.forceY=!!l;var e=n.charAt(0);this.precedance="t"===e||"b"===e?P:A}).prototype;on.invert=function(n,l){this[n]=this[n]===F?j:this[n]===j?F:l||this[n]},on.string=function(){var n=this.x,l=this.y;return n===l?n:this.precedance===P||this.forceY&&"center"!==l?l+" "+n:n+" "+l},on.abbrev=function(){var n=this.string().split(" ");return n[0].charAt(0)+(n[1]&&n[1].charAt(0)||"")},on.clone=function(){return new C(this.string(),this.forceY)},k.toggle=function(l,e){var t=this.cache,u=this.options,r=this.tooltip;if(e){if(/over|enter/.test(e.type)&&/out|leave/.test(t.event.type)&&u.show.target.add(e.target).length===u.show.target.length&&r.has(e.relatedTarget).length)return this;t.event=h(e)}if(this.waiting&&!l&&(this.hiddenDuringWait=N),!this.rendered)return l?this.render(1):this;if(this.destroyed||this.disabled)return this;var i,a,s,c=l?"show":"hide",d=this.options[c],f=(this.options[l?"hide":"show"],this.options.position),p=this.options.content,g=this.tooltip.css("width"),v=this.tooltip.is(":visible"),y=l||1===d.target.length,m=!e||2>d.target.length||t.target[0]===e.target;return(typeof l).search("boolean|number")&&(l=!v),a=(i=!r.is(":animated")&&v===l&&m)?O:!!this._trigger(c,[90]),this.destroyed?this:(a!==D&&l&&this.focus(e),!a||i?this:(n.attr(r[0],"aria-hidden",!l),l?(t.origin=h(this.mouse),n.isFunction(p.text)&&this._updateContent(p.text,D),n.isFunction(p.title)&&this._updateTitle(p.title,D),!I&&"mouse"===f.target&&f.adjust.mouse&&(n(o).bind("mousemove."+H,this._storeMouse),I=N),g||r.css("width",r.outerWidth(D)),this.reposition(e,arguments[2]),g||r.css("width",""),d.solo&&("string"==typeof d.solo?n(d.solo):n(X,d.solo)).not(r).not(d.target).qtip("hide",n.Event("tooltipsolo"))):(clearTimeout(this.timers.show),delete t.origin,I&&!n(X+'[tracking="true"]:visible',d.solo).not(r).length&&(n(o).unbind("mousemove."+H),I=D),this.blur(e)),s=n.proxy(function(){l?(tn.ie&&r[0].style.removeAttribute("filter"),r.css("overflow",""),"string"==typeof d.autofocus&&n(this.options.show.autofocus,r).focus(),this.options.show.target.trigger("qtip-"+this.id+"-inactive")):r.css({display:"",visibility:"",opacity:"",left:"",top:""}),this._trigger(l?"visible":"hidden")},this),d.effect===D||y===D?(r[c](),s()):n.isFunction(d.effect)?(r.stop(1,1),d.effect.call(r,this),r.queue("fx",function(n){s(),n()})):r.fadeTo(90,l?1:0,s),l&&d.target.trigger("qtip-"+this.id+"-inactive"),this))},k.show=function(n){return this.toggle(N,n)},k.hide=function(n){return this.toggle(D,n)},k.focus=function(l){if(!this.rendered||this.destroyed)return this;var e=n(X),t=this.tooltip,u=parseInt(t[0].style.zIndex,10),r=T.zindex+e.length;return t.hasClass(Q)||this._trigger("focus",[r],l)&&(u!==r&&(e.each(function(){this.style.zIndex>u&&(this.style.zIndex=this.style.zIndex-1)}),e.filter("."+Q).qtip("blur",l)),t.addClass(Q)[0].style.zIndex=r),this},k.blur=function(n){return!this.rendered||this.destroyed?this:(this.tooltip.removeClass(Q),this._trigger("blur",[this.tooltip.css("zIndex")],n),this)},k.disable=function(n){return this.destroyed?this:("toggle"===n?n=!(this.rendered?this.tooltip.hasClass(nn):this.disabled):"boolean"!=typeof n&&(n=N),this.rendered&&this.tooltip.toggleClass(nn,n).attr("aria-disabled",n),this.disabled=!!n,this)},k.enable=function(){return this.disable(D)},k._createButton=function(){var l=this,e=this.elements,t=e.tooltip,u=this.options.content.button,r="string"==typeof u?u:"Close tooltip";e.button&&e.button.remove(),e.button=u.jquery?u:n("<a />",{class:"qtip-close "+(this.options.style.widget?"":H+"-icon"),title:r,"aria-label":r}).prepend(n("<span />",{class:"ui-icon ui-icon-close",html:"&times;"})),e.button.appendTo(e.titlebar||t).attr("role","button").click(function(n){return t.hasClass(nn)||l.hide(n),D})},k._updateButton=function(n){if(!this.rendered)return D;var l=this.elements.button;n?this._createButton():l.remove()},k._setWidget=function(){var n=this.options.style.widget,l=this.elements,e=l.tooltip,t=e.hasClass(nn);e.removeClass(nn),nn=n?"ui-state-disabled":"qtip-disabled",e.toggleClass(nn,t),e.toggleClass("ui-helper-reset "+c(),n).toggleClass(Z,this.options.style.def&&!n),l.content&&l.content.toggleClass(c("content"),n),l.titlebar&&l.titlebar.toggleClass(c("header"),n),l.button&&l.button.toggleClass(H+"-icon",!n)},k._storeMouse=function(n){(this.mouse=h(n)).type="mousemove"},k._bind=function(l,e,t,u,r){var i="."+this._id+(u?"-"+u:"");e.length&&n(l).bind((e.split?e:e.join(i+" "))+i,n.proxy(t,r||this))},k._unbind=function(l,e){n(l).unbind("."+this._id+(e?"-"+e:""))};var an="."+H;n(function(){y(X,["mouseenter","mouseleave"],function(l){var e="mouseenter"===l.type,t=n(l.currentTarget),u=n(l.relatedTarget||l.target),r=this.options;e?(this.focus(l),t.hasClass($)&&!t.hasClass(nn)&&clearTimeout(this.timers.hide)):"mouse"===r.position.target&&r.hide.event&&r.show.target&&!u.closest(r.show.target[0]).length&&this.hide(l),t.toggleClass(J,e)}),y("["+Y+"]",K,g)}),k._trigger=function(l,e,t){var u=n.Event("tooltip"+l);return u.originalEvent=t&&n.extend({},t)||this.cache.event||O,this.triggering=l,this.tooltip.trigger(u,[this].concat(e||[])),this.triggering=D,!u.isDefaultPrevented()},k._bindEvents=function(l,e,t,u,r,i){if(u.add(t).length===u.length){var o=[];e=n.map(e,function(e){var t=n.inArray(e,l);return t>-1?(o.push(l.splice(t,1)[0]),a):e}),o.length&&this._bind(t,o,function(n){(this.rendered&&this.tooltip[0].offsetWidth>0?i:r).call(this,n)})}this._bind(t,l,r),this._bind(u,e,i)},k._assignInitialEvents=function(l){function e(l){return this.disabled||this.destroyed?D:(this.cache.event=h(l),this.cache.target=l?n(l.target):[a],clearTimeout(this.timers.show),this.timers.show=d.call(this,function(){this.render("object"==typeof l||t.show.ready)},t.show.delay),a)}var t=this.options,u=t.show.target,r=t.hide.target,i=t.show.event?n.trim(""+t.show.event).split(" "):[],o=t.hide.event?n.trim(""+t.hide.event).split(" "):[];/mouse(over|enter)/i.test(t.show.event)&&!/mouse(out|leave)/i.test(t.hide.event)&&o.push("mouseleave"),this._bind(u,"mousemove",function(n){this._storeMouse(n),this.cache.onTarget=N}),this._bindEvents(i,o,u,r,e,function(){clearTimeout(this.timers.show)}),(t.show.ready||t.prerender)&&e.call(this,l)},k._assignEvents=function(){var l=this,e=this.options,t=e.position,u=this.tooltip,r=e.show.target,a=e.hide.target,s=t.container,c=t.viewport,h=n(o),d=(n(o.body),n(i)),y=e.show.event?n.trim(""+e.show.event).split(" "):[],m=e.hide.event?n.trim(""+e.hide.event).split(" "):[];n.each(e.events,function(n,e){l._bind(u,"toggle"===n?["tooltipshow","tooltiphide"]:["tooltip"+n],e,null,u)}),/mouse(out|leave)/i.test(e.hide.event)&&"window"===e.hide.leave&&this._bind(h,["mouseout","blur"],function(n){/select|option/.test(n.target.nodeName)||n.relatedTarget||this.hide(n)}),e.hide.fixed?a=a.add(u.addClass($)):/mouse(over|enter)/i.test(e.show.event)&&this._bind(a,"mouseleave",function(){clearTimeout(this.timers.show)}),(""+e.hide.event).indexOf("unfocus")>-1&&this._bind(s.closest("html"),["mousedown","touchstart"],function(l){var e=n(l.target),t=this.rendered&&!this.tooltip.hasClass(nn)&&this.tooltip[0].offsetWidth>0,u=e.parents(X).filter(this.tooltip[0]).length>0;e[0]===this.target[0]||e[0]===this.tooltip[0]||u||this.target.has(e[0]).length||!t||this.hide(l)}),"number"==typeof e.hide.inactive&&(this._bind(r,"qtip-"+this.id+"-inactive",g),this._bind(a.add(u),T.inactiveEvents,g,"-inactive")),this._bindEvents(y,m,r,a,f,p),this._bind(r.add(u),"mousemove",function(n){if("number"==typeof e.hide.distance){var l=this.cache.origin||{},t=this.options.hide.distance,u=Math.abs;(u(n.pageX-l.pageX)>=t||u(n.pageY-l.pageY)>=t)&&this.hide(n)}this._storeMouse(n)}),"mouse"===t.target&&t.adjust.mouse&&(e.hide.event&&this._bind(r,["mouseenter","mouseleave"],function(n){this.cache.onTarget="mouseenter"===n.type}),this._bind(h,"mousemove",function(n){this.rendered&&this.cache.onTarget&&!this.tooltip.hasClass(nn)&&this.tooltip[0].offsetWidth>0&&this.reposition(n)})),(t.adjust.resize||c.length)&&this._bind(n.event.special.resize?c:d,"resize",v),t.adjust.scroll&&this._bind(d.add(t.container),"scroll",v)},k._unassignEvents=function(){var l=[this.options.show.target[0],this.options.hide.target[0],this.rendered&&this.tooltip[0],this.options.position.container[0],this.options.position.viewport[0],this.options.position.container.closest("html")[0],i,o];this._unbind(n([]).pushStack(n.grep(l,function(n){return"object"==typeof n})))},T=n.fn.qtip=function(l,e,t){var r=(""+l).toLowerCase(),i=O,o=n.makeArray(arguments).slice(1),s=o[o.length-1],c=this[0]?n.data(this[0],H):O;return!arguments.length&&c||"api"===r?c:"string"==typeof l?(this.each(function(){var l=n.data(this,H);if(!l)return N;if(s&&s.timeStamp&&(l.cache.event=s),!e||"option"!==r&&"options"!==r)l[r]&&l[r].apply(l,o);else{if(t===a&&!n.isPlainObject(e))return i=l.get(e),D;l.set(e,t)}}),i!==O?i:this):"object"!=typeof l&&arguments.length?a:(c=u(n.extend(N,{},l)),this.each(function(l){var e,t;return t=!(t=n.isArray(c.id)?c.id[l]:c.id)||t===D||1>t.length||T.api[t]?T.nextid++:t,(e=m(n(this),t,c))===D?N:(T.api[t]=e,n.each(V,function(){"initialize"===this.initialize&&this(e)}),e._assignInitialEvents(s),a)}))},n.qtip=l,T.api={},n.each({attr:function(l,e){if(this.length){var t=this[0],u="title",r=n.data(t,"qtip");if(l===u&&r&&"object"==typeof r&&r.options.suppress)return 2>arguments.length?n.attr(t,en):(r&&r.options.content.attr===u&&r.cache.attr&&r.set("content.text",e),this.attr(en,e))}return n.fn["attr"+ln].apply(this,arguments)},clone:function(l){var e=(n([]),n.fn["clone"+ln].apply(this,arguments));return l||e.filter("["+en+"]").attr("title",function(){return n.attr(this,en)}).removeAttr(en),e}},function(l,e){if(!e||n.fn[l+ln])return N;var t=n.fn[l+ln]=n.fn[l];n.fn[l]=function(){return e.apply(this,arguments)||t.apply(this,arguments)}}),n.ui||(n["cleanData"+ln]=n.cleanData,n.cleanData=function(l){for(var e,t=0;(e=n(l[t])).length;t++)if(e.attr(G))try{e.triggerHandler("removeqtip")}catch(n){}n["cleanData"+ln].apply(this,arguments)}),T.version="2.2.0",T.nextid=0,T.inactiveEvents=K,T.zindex=15e3,T.defaults={prerender:D,id:D,overwrite:N,suppress:N,content:{text:N,attr:"title",title:D,button:D},position:{my:"top left",at:"bottom right",target:D,container:D,viewport:D,adjust:{x:0,y:0,mouse:N,scroll:N,resize:N,method:"flipinvert flipinvert"},effect:function(l,e){n(this).animate(e,{duration:200,queue:D})}},show:{target:D,event:"mouseenter",effect:N,delay:90,solo:D,ready:D,autofocus:D},hide:{target:D,event:"mouseleave",effect:N,delay:0,fixed:D,inactive:D,leave:"window",distance:D},style:{classes:"",widget:D,width:D,height:D,def:N},events:{render:O,move:O,show:O,hide:O,toggle:O,visible:O,hidden:O,focus:O,blur:O}};var sn,cn="margin",hn="border",dn="color",fn="background-color",pn="transparent",gn=" !important",vn=!!o.createElement("canvas").getContext,yn=/rgba?\(0, 0, 0(, 0)?\)|transparent|#123456/i,mn={},bn=["Webkit","O","Moz","ms"];if(vn)var wn=(i.devicePixelRatio||1)/function(){var n=o.createElement("canvas").getContext("2d");return n.backingStorePixelRatio||n.webkitBackingStorePixelRatio||n.mozBackingStorePixelRatio||n.msBackingStorePixelRatio||n.oBackingStorePixelRatio||1}();else var _n=function(n,l,e){return"<qtipvml:"+n+' xmlns="urn:schemas-microsoft.com:vml" class="qtip-vml" '+(l||"")+' style="behavior: url(#default#VML); '+(e||"")+'" />'};n.extend(_.prototype,{init:function(l){var e,t;t=this.element=l.elements.tip=n("<div />",{class:H+"-tip"}).prependTo(l.tooltip),vn?((e=n("<canvas />").appendTo(this.element)[0].getContext("2d")).lineJoin="miter",e.miterLimit=1e5,e.save()):(e=_n("shape",'coordorigin="0,0"',"position:absolute;"),this.element.html(e+e),l._bind(n("*",t).add(t),["click","mousedown"],function(n){n.stopPropagation()},this._ns)),l._bind(l.tooltip,"tooltipmove",this.reposition,this._ns,this),this.create()},_swapDimensions:function(){this.size[0]=this.options.height,this.size[1]=this.options.width},_resetDimensions:function(){this.size[0]=this.options.width,this.size[1]=this.options.height},_useTitle:function(n){var l=this.qtip.elements.titlebar;return l&&(n.y===R||n.y===U&&this.element.position().top+this.size[1]/2+this.options.offset<l.outerHeight(N))},_parseCorner:function(n){var l=this.qtip.options.position.my;return n===D||l===D?n=D:n===N?n=new C(l.string()):n.string||((n=new C(n)).fixed=N),n},_parseWidth:function(n,l,e){var t=this.qtip.elements,u=hn+b(l)+"Width";return(e?w(e,u):w(t.content,u)||w(this._useTitle(n)&&t.titlebar||t.content,u)||w(t.tooltip,u))||0},_parseRadius:function(n){var l=this.qtip.elements,e=hn+b(n.y)+b(n.x)+"Radius";return 9>tn.ie?0:w(this._useTitle(n)&&l.titlebar||l.content,e)||w(l.tooltip,e)||0},_invalidColour:function(n,l,e){var t=n.css(l);return!t||e&&t===n.css(e)||yn.test(t)?D:t},_parseColours:function(l){var e=this.qtip.elements,t=this.element.css("cssText",""),u=hn+b(l[l.precedance])+b(dn),r=this._useTitle(l)&&e.titlebar||e.content,i=this._invalidColour,o=[];return o[0]=i(t,fn)||i(r,fn)||i(e.content,fn)||i(e.tooltip,fn)||t.css(fn),o[1]=i(t,u,dn)||i(r,u,dn)||i(e.content,u,dn)||i(e.tooltip,u,dn)||e.tooltip.css(u),n("*",t).add(t).css("cssText",fn+":"+pn+gn+";"+hn+":0"+gn+";"),o},_calculateSize:function(n){var l,e,t=n.precedance===P,u=this.options.width,r=this.options.height,i="c"===n.abbrev(),o=(t?u:r)*(i?.5:1),a=Math.pow,s=Math.round,c=Math.sqrt(a(o,2)+a(r,2)),h=[this.border/o*c,this.border/r*c];return h[2]=Math.sqrt(a(h[0],2)-a(this.border,2)),h[3]=Math.sqrt(a(h[1],2)-a(this.border,2)),e=[s((l=(c+h[2]+h[3]+(i?0:h[0]))/c)*u),s(l*r)],t?e:e.reverse()},_calculateTip:function(n,l,e){e=e||1;var t=(l=l||this.size)[0]*e,u=l[1]*e,r=Math.ceil(t/2),i=Math.ceil(u/2),o={br:[0,0,t,u,t,0],bl:[0,0,t,0,0,u],tr:[0,u,t,0,t,u],tl:[0,0,0,u,t,u],tc:[0,u,r,0,t,u],bc:[0,0,t,0,r,u],rc:[0,0,t,i,0,u],lc:[t,0,t,u,0,i]};return o.lt=o.br,o.rt=o.bl,o.lb=o.tr,o.rb=o.tl,o[n.abbrev()]},_drawCoords:function(n,l){n.beginPath(),n.moveTo(l[0],l[1]),n.lineTo(l[2],l[3]),n.lineTo(l[4],l[5]),n.closePath()},create:function(){var n=this.corner=(vn||tn.ie)&&this._parseCorner(this.options.corner);return(this.enabled=!!this.corner&&"c"!==this.corner.abbrev())&&(this.qtip.cache.corner=n.clone(),this.update()),this.element.toggle(this.enabled),this.corner},update:function(l,e){if(!this.enabled)return this;var t,u,r,o,a,s,c,h,d=this.qtip.elements,f=this.element,p=f.children(),g=this.options,v=this.size,y=g.mimic,m=Math.round;l||(l=this.qtip.cache.corner||this.corner),y===D?y=l:((y=new C(y)).precedance=l.precedance,"inherit"===y.x?y.x=l.x:"inherit"===y.y?y.y=l.y:y.x===y.y&&(y[l.precedance]=l[l.precedance])),u=y.precedance,l.precedance===A?this._swapDimensions():this._resetDimensions(),(t=this.color=this._parseColours(l))[1]!==pn?(h=this.border=this._parseWidth(l,l[l.precedance]),g.border&&1>h&&!yn.test(t[1])&&(t[0]=t[1]),this.border=h=g.border!==N?g.border:h):this.border=h=0,c=this.size=this._calculateSize(l),f.css({width:c[0],height:c[1],lineHeight:c[1]+"px"}),s=l.precedance===P?[m(y.x===F?h:y.x===j?c[0]-v[0]-h:(c[0]-v[0])/2),m(y.y===R?c[1]-v[1]:0)]:[m(y.x===F?c[0]-v[0]:0),m(y.y===R?h:y.y===B?c[1]-v[1]-h:(c[1]-v[1])/2)],vn?((r=p[0].getContext("2d")).restore(),r.save(),r.clearRect(0,0,6e3,6e3),o=this._calculateTip(y,v,wn),a=this._calculateTip(y,this.size,wn),p.attr(M,c[0]*wn).attr(L,c[1]*wn),p.css(M,c[0]).css(L,c[1]),this._drawCoords(r,a),r.fillStyle=t[1],r.fill(),r.translate(s[0]*wn,s[1]*wn),this._drawCoords(r,o),r.fillStyle=t[0],r.fill()):(o="m"+(o=this._calculateTip(y))[0]+","+o[1]+" l"+o[2]+","+o[3]+" "+o[4]+","+o[5]+" xe",s[2]=h&&/^(r|b)/i.test(l.string())?8===tn.ie?2:1:0,p.css({coordsize:c[0]+h+" "+(c[1]+h),antialias:""+(y.string().indexOf(U)>-1),left:s[0]-s[2]*Number(u===A),top:s[1]-s[2]*Number(u===P),width:c[0]+h,height:c[1]+h}).each(function(l){var e=n(this);e[e.prop?"prop":"attr"]({coordsize:c[0]+h+" "+(c[1]+h),path:o,fillcolor:t[0],filled:!!l,stroked:!l}).toggle(!(!h&&!l)),!l&&e.html(_n("stroke",'weight="'+2*h+'px" color="'+t[1]+'" miterlimit="1000" joinstyle="miter"'))})),i.opera&&setTimeout(function(){d.tip.css({display:"inline-block",visibility:"visible"})},1),e!==D&&this.calculate(l,c)},calculate:function(l,e){if(!this.enabled)return D;var t,u,r=this,i=this.qtip.elements,o=this.element,a=this.options.offset,s=(i.tooltip.hasClass("ui-widget"),{});return l=l||this.corner,t=l.precedance,e=e||this._calculateSize(l),u=[l.x,l.y],t===A&&u.reverse(),n.each(u,function(n,u){var o,c,h;u===U?(s[o=t===P?F:R]="50%",s[cn+"-"+o]=-Math.round(e[t===P?0:1]/2)+a):(o=r._parseWidth(l,u,i.tooltip),c=r._parseWidth(l,u,i.content),h=r._parseRadius(l),s[u]=Math.max(-r.border,n?c:a+(h>o?h:-o)))}),s[l[t]]-=e[t===A?0:1],o.css({margin:"",top:"",bottom:"",left:"",right:""}).css(s),s},reposition:function(n,l,e){function t(n,l,e,t,u){n===q&&s.precedance===l&&c[t]&&s[e]!==U?s.precedance=s.precedance===A?P:A:n!==q&&c[t]&&(s[l]=s[l]===U?c[t]>0?t:u:s[l]===t?u:t)}function u(n,l,t){s[n]===U?g[cn+"-"+l]=p[n]=r[cn+"-"+l]-c[l]:(i=r[t]!==a?[c[l],-r[l]]:[-c[l],r[l]],(p[n]=Math.max(i[0],i[1]))>i[0]&&(e[l]-=c[l],p[l]=D),g[r[t]!==a?t:l]=p[n])}if(this.enabled){var r,i,o=l.cache,s=this.corner.clone(),c=e.adjusted,h=l.options.position.adjust.method.split(" "),d=h[0],f=h[1]||h[0],p={left:D,top:D,x:0,y:0},g={};this.corner.fixed!==N&&(t(d,A,P,F,j),t(f,P,A,R,B),s.string()===o.corner.string()||o.cornerTop===c.top&&o.cornerLeft===c.left||this.update(s,D)),(r=this.calculate(s)).right!==a&&(r.left=-r.right),r.bottom!==a&&(r.top=-r.bottom),r.user=this.offset,(p.left=d===q&&!!c.left)&&u(A,F,j),(p.top=f===q&&!!c.top)&&u(P,R,B),this.element.css(g).toggle(!(p.x&&p.y||s.x===U&&p.y||s.y===U&&p.x)),e.left-=r.left.charAt?r.user:d!==q||p.top||!p.left&&!p.top?r.left+this.border:0,e.top-=r.top.charAt?r.user:f!==q||p.left||!p.left&&!p.top?r.top+this.border:0,o.cornerLeft=c.left,o.cornerTop=c.top,o.corner=s.clone()}},destroy:function(){this.qtip._unbind(this.qtip.tooltip,this._ns),this.qtip.elements.tip&&this.qtip.elements.tip.find("*").remove().end().remove()}}),(sn=V.tip=function(n){return new _(n,n.options.style.tip)}).initialize="render",sn.sanitize=function(n){if(n.style&&"tip"in n.style){var l=n.style.tip;"object"!=typeof l&&(l=n.style.tip={corner:l}),/string|boolean/i.test(typeof l.corner)||(l.corner=N)}},S.tip={"^position.my|style.tip.(corner|mimic|border)$":function(){this.create(),this.qtip.reposition()},"^style.tip.(height|width)$":function(n){this.size=[n.width,n.height],this.update(),this.qtip.reposition()},"^content.title|style.(classes|widget)$":function(){this.update()}},n.extend(N,T.defaults,{style:{tip:{corner:N,mimic:D,width:6,height:6,border:N,offset:0}}});var xn,En,Tn="qtip-modal",kn="."+Tn;En=new(En=function(){function l(n){1>a.length&&n.length?n.not("body").blur():a.first().focus()}function e(e){if(r.is(":visible")){var u=n(e.target),i=t.tooltip,o=u.closest(X);(1>o.length?D:parseInt(o[0].style.zIndex,10)>parseInt(i[0].style.zIndex,10))||u.closest(X)[0]===i[0]||l(u),e.target,a[a.length-1]}}var t,u,r,i=this,a={};n.extend(i,{init:function(){return r=i.elem=n("<div />",{id:"qtip-overlay",html:"<div></div>",mousedown:function(){return D}}).hide(),n(o.body).bind("focusin"+kn,e),n(o).bind("keydown"+kn,function(n){t&&t.options.show.modal.escape&&27===n.keyCode&&t.hide(n)}),r.bind("click"+kn,function(n){t&&t.options.show.modal.blur&&t.hide(n)}),i},update:function(l){t=l,a=l.options.show.modal.stealfocus!==D?l.tooltip.find("*").filter(function(){return function(l){if(n.expr[":"].focusable)return n.expr[":"].focusable;var e,t,u,r=!isNaN(n.attr(l,"tabindex")),i=l.nodeName&&l.nodeName.toLowerCase();return"area"===i?(t=(e=l.parentNode).name,!(!l.href||!t||"map"!==e.nodeName.toLowerCase())&&!!(u=n("img[usemap=#"+t+"]")[0])&&u.is(":visible")):/input|select|textarea|button|object/.test(i)?!l.disabled:"a"===i&&l.href||r}(this)}):[]},toggle:function(e,a,s){var c=(n(o.body),e.tooltip),h=e.options.show.modal,d=h.effect,f=a?"show":"hide",p=r.is(":visible"),g=n(kn).filter(":visible:not(:animated)").not(c);return i.update(e),a&&h.stealfocus!==D&&l(n(":focus")),r.toggleClass("blurs",h.blur),a&&r.appendTo(o.body),r.is(":animated")&&p===a&&u!==D||!a&&g.length?i:(r.stop(N,D),n.isFunction(d)?d.call(r,a):d===D?r[f]():r.fadeTo(parseInt(s,10)||90,a?1:0,function(){a||r.hide()}),a||r.queue(function(l){r.css({left:"",top:""}),n(kn).length||r.detach(),l()}),u=a,t.destroyed&&(t=O),i)}}),i.init()}),n.extend(x.prototype,{init:function(l){var e=l.tooltip;return this.options.on?(l.elements.overlay=En.elem,e.addClass(Tn).css("z-index",T.modal_zindex+n(kn).length),l._bind(e,["tooltipshow","tooltiphide"],function(l,t,u){var r=l.originalEvent;if(l.target===e[0])if(r&&"tooltiphide"===l.type&&/mouse(leave|enter)/.test(r.type)&&n(r.relatedTarget).closest(En.elem[0]).length)try{l.preventDefault()}catch(n){}else(!r||r&&"tooltipsolo"!==r.type)&&this.toggle(l,"tooltipshow"===l.type,u)},this._ns,this),l._bind(e,"tooltipfocus",function(l,t){if(!l.isDefaultPrevented()&&l.target===e[0]){var u=n(kn),r=T.modal_zindex+u.length,i=parseInt(e[0].style.zIndex,10);En.elem[0].style.zIndex=r-1,u.each(function(){this.style.zIndex>i&&(this.style.zIndex-=1)}),u.filter("."+Q).qtip("blur",l.originalEvent),e.addClass(Q)[0].style.zIndex=r,En.update(t);try{l.preventDefault()}catch(n){}}},this._ns,this),l._bind(e,"tooltiphide",function(l){l.target===e[0]&&n(kn).filter(":visible").not(e).last().qtip("focus",l)},this._ns,this),a):this},toggle:function(n,l,e){return n&&n.isDefaultPrevented()?this:(En.toggle(this.qtip,!!l,e),a)},destroy:function(){this.qtip.tooltip.removeClass(Tn),this.qtip._unbind(this.qtip.tooltip,this._ns),En.toggle(this.qtip,D),delete this.qtip.elements.overlay}}),(xn=V.modal=function(n){return new x(n,n.options.show.modal)}).sanitize=function(n){n.show&&("object"!=typeof n.show.modal?n.show.modal={on:!!n.show.modal}:n.show.modal.on===a&&(n.show.modal.on=N))},T.modal_zindex=T.zindex-200,xn.initialize="render",S.modal={"^show.modal.(on|blur)$":function(){this.destroy(),this.init(),this.qtip.elems.overlay.toggle(this.qtip.tooltip[0].offsetWidth>0)}},n.extend(N,T.defaults,{show:{modal:{on:D,effect:N,blur:N,stealfocus:N,escape:N}}}),V.viewport=function(n,l,e,t,u,r,a){function s(n,e,t,u,r,i,o,a,s){var c=l[r],d=_[n],b=x[n],w=t===q,E=d===r?s:d===i?-s:-s/2,T=b===r?a:b===i?-a:-a/2,k=y[r]+m[r]-(p?0:f[r]),C=k-c,S=c+s-(o===M?g:v)-k,I=E-(_.precedance===n||d===_[e]?T:0)-(b===U?a/2:0);return w?(I=(d===r?1:-1)*E,l[r]+=C>0?C:S>0?-S:0,l[r]=Math.max(-f[r]+m[r],c-I,Math.min(Math.max(-f[r]+m[r]+(o===M?g:v),c+I),l[r],"center"===d?c-E:1e9))):(u*=t===z?2:0,C>0&&(d!==r||S>0)?(l[r]-=I+u,h.invert(n,r)):S>0&&(d!==i||C>0)&&(l[r]-=(d===U?-I:I)+u,h.invert(n,i)),y>l[r]&&-l[r]>S&&(l[r]=c,h=_.clone())),l[r]-c}var c,h,d,f,p,g,v,y,m,b=e.target,w=n.elements.tooltip,_=e.my,x=e.at,E=e.adjust,T=E.method.split(" "),k=T[0],C=T[1]||T[0],S=e.viewport,I=e.container,N=n.cache,O={left:0,top:0};return S.jquery&&b[0]!==i&&b[0]!==o.body&&"none"!==E.method?(f=I.offset()||O,p="static"===I.css("position"),c="fixed"===w.css("position"),g=S[0]===i?S.width():S.outerWidth(D),v=S[0]===i?S.height():S.outerHeight(D),y={left:c?0:S.scrollLeft(),top:c?0:S.scrollTop()},m=S.offset()||O,("shift"!==k||"shift"!==C)&&(h=_.clone()),O={left:"none"!==k?s(A,P,k,E.x,F,j,M,t,r):0,top:"none"!==C?s(P,A,C,E.y,R,B,L,u,a):0},h&&N.lastClass!==(d=H+"-pos-"+h.abbrev())&&w.removeClass(n.cache.lastClass).addClass(n.cache.lastClass=d),O):O},V.polys={polygon:function(n,l){var e,t,u,r={width:0,height:0,position:{top:1e10,right:0,bottom:0,left:1e10},adjustable:D},i=0,o=[],a=1,s=1,c=0,h=0;for(i=n.length;i--;)(e=[parseInt(n[--i],10),parseInt(n[i+1],10)])[0]>r.position.right&&(r.position.right=e[0]),e[0]<r.position.left&&(r.position.left=e[0]),e[1]>r.position.bottom&&(r.position.bottom=e[1]),e[1]<r.position.top&&(r.position.top=e[1]),o.push(e);if(t=r.width=Math.abs(r.position.right-r.position.left),u=r.height=Math.abs(r.position.bottom-r.position.top),"c"===l.abbrev())r.position={left:r.position.left+r.width/2,top:r.position.top+r.height/2};else{for(;t>0&&u>0&&a>0&&s>0;)for(t=Math.floor(t/2),u=Math.floor(u/2),l.x===F?a=t:l.x===j?a=r.width-t:a+=Math.floor(t/2),l.y===R?s=u:l.y===B?s=r.height-u:s+=Math.floor(u/2),i=o.length;i--&&!(2>o.length);)c=o[i][0]-r.position.left,h=o[i][1]-r.position.top,(l.x===F&&c>=a||l.x===j&&a>=c||l.x===U&&(a>c||c>r.width-a)||l.y===R&&h>=s||l.y===B&&s>=h||l.y===U&&(s>h||h>r.height-s))&&o.splice(i,1);r.position={left:o[0][0],top:o[0][1]}}return r},rect:function(n,l,e,t){return{width:Math.abs(e-n),height:Math.abs(t-l),position:{left:Math.min(n,e),top:Math.min(l,t)}}},_angles:{tc:1.5,tr:7/4,tl:5/4,bc:.5,br:.25,bl:.75,rc:2,lc:1,c:0},ellipse:function(n,l,e,t,u){var r=V.polys._angles[u.abbrev()],i=0===r?0:e*Math.cos(r*Math.PI),o=t*Math.sin(r*Math.PI);return{width:2*e-Math.abs(i),height:2*t-Math.abs(o),position:{left:n+i,top:l+o},adjustable:D}},circle:function(n,l,e,t){return V.polys.ellipse(n,l,e,e,t)}},V.svg=function(l,e,t){for(var u,r,i,a,s,c,h,d,f,p=n(o),g=e[0],v=n(g.ownerSVGElement),y=!0;!g.getBBox;)g=g.parentNode;if(!g.getBBox||!g.parentNode)return D;v.attr("width")||v.width()||parseInt(v.css("width"),10),v.attr("height")||v.height()||parseInt(v.css("height"),10);var m=(parseInt(e.css("stroke-width"),10)||0)/2;switch(g.nodeName){case"ellipse":case"circle":d=V.polys.ellipse(g.cx.baseVal.value,g.cy.baseVal.value,(g.rx||g.r).baseVal.value+m,(g.ry||g.r).baseVal.value+m,t);break;case"line":case"polygon":case"polyline":for(d=[],c=-1,a=(h=g.points||[{x:g.x1.baseVal.value,y:g.y1.baseVal.value},{x:g.x2.baseVal.value,y:g.y2.baseVal.value}]).numberOfItems||h.length;a>++c;)s=h.getItem?h.getItem(c):h[c],d.push.apply(d,[s.x,s.y]);d=V.polys.polygon(d,t);break;default:d={width:(d=g.getBoundingClientRect()).width,height:d.height,position:{left:d.left,top:d.top}},y=!1}return f=d.position,v=v[0],y&&(v.createSVGPoint&&(u=g.getScreenCTM(),(h=v.createSVGPoint()).x=f.left,h.y=f.top,r=h.matrixTransform(u),f.left=r.x,f.top=r.y),v.viewBox&&(i=v.viewBox.baseVal)&&i.width&&i.height&&(i.width,i.height)),f.left+=p.scrollLeft(),f.top+=p.scrollTop(),d},V.imagemap=function(l,e,t){e.jquery||(e=n(e));var u,r,i,o,a,s=e.attr("shape").toLowerCase().replace("poly","polygon"),c=n('img[usemap="#'+e.parent("map").attr("name")+'"]'),h=n.trim(e.attr("coords")).replace(/,$/,"").split(",");if(!c.length)return D;if("polygon"===s)o=V.polys.polygon(h,t);else{if(!V.polys[s])return D;for(i=-1,a=h.length,r=[];a>++i;)r.push(parseInt(h[i],10));o=V.polys[s].apply(this,r.concat(t))}return(u=c.offset()).left+=Math.ceil((c.outerWidth(D)-c.width())/2),u.top+=Math.ceil((c.outerHeight(D)-c.height())/2),o.position.left+=u.left,o.position.top+=u.top,o},n.extend(E.prototype,{_scroll:function(){var l=this.qtip.elements.overlay;l&&(l[0].style.top=n(i).scrollTop()+"px")},init:function(l){var e=l.tooltip;1>n("select, object").length&&(this.bgiframe=l.elements.bgiframe=n('<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:\'\';"  style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=0); -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";"></iframe>').appendTo(e),l._bind(e,"tooltipmove",this.adjustBGIFrame,this._ns,this)),this.redrawContainer=n("<div/>",{id:H+"-rcontainer"}).appendTo(o.body),l.elements.overlay&&l.elements.overlay.addClass("qtipmodal-ie6fix")&&(l._bind(i,["scroll","resize"],this._scroll,this._ns,this),l._bind(e,["tooltipshow"],this._scroll,this._ns,this)),this.redraw()},adjustBGIFrame:function(){var n,l,e=this.qtip.tooltip,t={height:e.outerHeight(D),width:e.outerWidth(D)},u=this.qtip.plugins.tip,r=this.qtip.elements.tip;l={left:-(l=parseInt(e.css("borderLeftWidth"),10)||0),top:-l},u&&r&&(l[(n="x"===u.corner.precedance?[M,F]:[L,R])[1]]-=r[n[0]]()),this.bgiframe.css(l).css(t)},redraw:function(){if(1>this.qtip.rendered||this.drawing)return this;var n,l,e,t,u=this.qtip.tooltip,r=this.qtip.options.style,i=this.qtip.options.position.container;return this.qtip.drawing=1,r.height&&u.css(L,r.height),r.width?u.css(M,r.width):(u.css(M,"").appendTo(this.redrawContainer),1>(l=u.width())%2&&(l+=1),n=((e=u.css("maxWidth")||"")+(t=u.css("minWidth")||"")).indexOf("%")>-1?i.width()/100:0,l=(e=(e.indexOf("%")>-1?n:1)*parseInt(e,10)||l)+(t=(t.indexOf("%")>-1?n:1)*parseInt(t,10)||0)?Math.min(Math.max(l,t),e):l,u.css(M,Math.round(l)).appendTo(i)),this.drawing=0,this},destroy:function(){this.bgiframe&&this.bgiframe.remove(),this.qtip._unbind([i,this.qtip.tooltip],this._ns)}}),(V.ie6=function(n){return 6===tn.ie?new E(n):D}).initialize="render",S.ie6={"^content|style$":function(){this.redraw()}}})}]);